{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/halo/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/halo/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/halo/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/halo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/halo/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/halo/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/halo/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/avatar.png","path":"medias/avatar.png","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/icp.png","path":"medias/icp.png","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/others/clickfire.js","path":"libs/others/clickfire.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/others/cursor.js","path":"libs/others/cursor.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/avatar.jpeg","path":"medias/avatar.jpeg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/reward/qq.png","path":"medias/reward/qq.png","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/halo/README.md","hash":"f5bc1e016e6d443e55d39b44fe645596c3b34a6c","modified":1584889016000},{"_id":"themes/halo/LICENSE","hash":"e9c9ea9944cb7b6be067a87fb51957228233ad68","modified":1584889016000},{"_id":"themes/halo/_config.yml","hash":"cbf61735f18f6d4fa8045be3c5092a88cb5a265e","modified":1588488651145},{"_id":"themes/halo/.DS_Store","hash":"8358dbe06599b36b8fe95a2aab94258f6643ac1a","modified":1588474084157},{"_id":"source/404/index.md","hash":"783b0a48c7e88d32286273e0c084422c874548fb","modified":1584889016000},{"_id":"source/_data/friends.json","hash":"210be53b23ee855669bf98a805721bb5712a504f","modified":1588488223134},{"_id":"source/_data/musics.json","hash":"46588a16b735cfb95b8083e39e2b9f6dec517dcb","modified":1584889016000},{"_id":"source/_drafts/My-First-Blog-Post.md","hash":"0f78895738b68183ab807a3139a3bd8d4a3033b8","modified":1588473506610},{"_id":"source/about/index.md","hash":"aaba7d919ffdab6b8f755d334238b5b5f1fb98ee","modified":1584889016000},{"_id":"source/categories/index.md","hash":"e92c6197e79a02f2b9aaca568a80d7686486e94e","modified":1584889016000},{"_id":"source/articles/index.md","hash":"7b1f0f8b0e986892a8646c545f87f7eb8b30d5b6","modified":1584889016000},{"_id":"source/data/index.md","hash":"24602300d3c0414783b4601f3b6aa0de2d28cfb9","modified":1584889016000},{"_id":"source/friends/index.md","hash":"a9042460abed47f9b788e1caa5390eb52df87e74","modified":1588488466698},{"_id":"source/timeline/index.md","hash":"8f39dcb344255c049cef832c4e457835c57d19c4","modified":1584889016000},{"_id":"source/tags/index.md","hash":"ac197d79246a034fb5bf0afa0a90ce00fcfbf4e6","modified":1584889016000},{"_id":"themes/halo/languages/default.yml","hash":"54ccc01b097c5bf6820f0edfcece1a87b78ab32d","modified":1584889016000},{"_id":"themes/halo/languages/zh-CN.yml","hash":"a957b05f70265a86a87d922e18488571809d2472","modified":1584889016000},{"_id":"themes/halo/layout/404.ejs","hash":"40c4af57aef2b77611042782e9f3b395f217408f","modified":1584889016000},{"_id":"themes/halo/config/.DS_Store","hash":"aafce6910427299e8feea8fb98eb9263b1a8b09f","modified":1588474084155},{"_id":"themes/halo/layout/about.ejs","hash":"6880c19150455c7557a7dad10ebff9fd7e597eca","modified":1584889016000},{"_id":"themes/halo/layout/archive.ejs","hash":"9b6281b0a91d3bf84b6a95ea733dbb3d9e50c8cd","modified":1584889016000},{"_id":"themes/halo/layout/articles.ejs","hash":"11f4ec2e4c256db8f5557632ba63536c3834fc71","modified":1584889016000},{"_id":"themes/halo/layout/categories.ejs","hash":"a00c71cd430cb32de9b169b032fcca42c300c25f","modified":1584889016000},{"_id":"themes/halo/layout/category.ejs","hash":"79f712004602b29e33261892209bdb7fd0c9c5a3","modified":1584889016000},{"_id":"themes/halo/layout/contact.ejs","hash":"2747bfcf3cbf832ec7cc118ca4da557d42f98e69","modified":1584889016000},{"_id":"themes/halo/layout/data.ejs","hash":"d66e1268665899b96ed1d5448c9723423d767b17","modified":1584889016000},{"_id":"themes/halo/layout/friends.ejs","hash":"4cb216b2a650ad5d2942047a65d0883a188c2abb","modified":1584889016000},{"_id":"themes/halo/layout/index.ejs","hash":"c920ba7ed5ee400114203753339e6cb842504235","modified":1584889016000},{"_id":"themes/halo/layout/layout.ejs","hash":"ce45c5a45f8fb2b00ab46fdae82b055b0fd4e96d","modified":1588487367273},{"_id":"themes/halo/layout/post.ejs","hash":"b7dce0ba56a434f3e74d283088cb4e15b23714c9","modified":1584889016000},{"_id":"themes/halo/layout/project.ejs","hash":"986f3efe5835d4d92010ed17fe0181190cc10f94","modified":1584889016000},{"_id":"themes/halo/layout/tag.ejs","hash":"5d2be230887c40f62b4cea31720ef77d317f108c","modified":1584889016000},{"_id":"themes/halo/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1584889016000},{"_id":"themes/halo/layout/timeline.ejs","hash":"ee7b661196043c26c31dee6b84a35e38a5950d54","modified":1584889016000},{"_id":"themes/halo/source/.DS_Store","hash":"b1c7e3b9430c0cac2bcea6ed2c8a3dafecc87e59","modified":1588483854970},{"_id":"themes/halo/source/favicon.ico","hash":"f17210fc20d90f14b32781d1ebc0c1f38f4c492f","modified":1584889016000},{"_id":"source/_posts/yuque/6600f4fa-1e97-4ef7-b40f-cb9ec89924e1.md","hash":"ba047711527fbe3477d5609f53613d1e2d2f79a6","modified":1588608234584},{"_id":"source/_posts/yuque/98bfbbe4-3078-488c-a1ad-907e638fce65.md","hash":"4de03a3d4cec234de47702ba9f7404573fdfcc50","modified":1588489891798},{"_id":"source/_posts/yuque/dqugvo.md","hash":"d7c37a281f8c22b790c371a2cae378efa49f5944","modified":1588489891807},{"_id":"source/_posts/yuque/diqcug.md","hash":"ced8654478c115ce7495a96ee5406d7fb104bc8d","modified":1588489891753},{"_id":"source/_posts/yuque/du3fal.md","hash":"0f5250bab7efc3e5b700ab4e1248baa699fa1b23","modified":1588489891537},{"_id":"source/_posts/yuque/ee03pk.md","hash":"f7f83dfa563088c572e52d9a57c395fb44bdec96","modified":1588489891760},{"_id":"source/_posts/yuque/egko8o.md","hash":"545ec7a4de0d18d0aee02c316f4a6d2273c7ebd0","modified":1588489891420},{"_id":"source/_posts/yuque/fn26h0.md","hash":"384f837877f0075d4c793dd8eceb20757d9e786d","modified":1588489891790},{"_id":"source/_posts/yuque/huan-ying-shi-yong-mweb.md","hash":"6d758dab95e2d3aedd403f5637b5bfff28fb4cea","modified":1588489891393},{"_id":"source/_posts/yuque/iwxsk5.md","hash":"6661529ca6844041bd872d5f45cbf66c471624ff","modified":1588489891353},{"_id":"source/_posts/yuque/lyup3r.md","hash":"8e8c40d805459278dc02ee35796b263656405326","modified":1588489891360},{"_id":"source/_posts/yuque/pdrp5a.md","hash":"644f7946d6f0849d7df1ab8366eb76877ba79dfb","modified":1588489891724},{"_id":"source/_posts/yuque/wcgfp5.md","hash":"eeaaba12396047b284880cb27f1452c2e3988f1e","modified":1588489891700},{"_id":"themes/halo/config/scaffolds/draft.md","hash":"204ab550ddffa92051ea0eb2484a78d84dac3693","modified":1584889016000},{"_id":"themes/halo/config/scaffolds/page.md","hash":"f0af1cb10f27d859caa51c8e3704469d9ed842a6","modified":1584889016000},{"_id":"themes/halo/config/scaffolds/post.md","hash":"255b683c86c72249c0b438a1bec7c13f824b0898","modified":1584889016000},{"_id":"themes/halo/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1584889016000},{"_id":"themes/halo/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1584889016000},{"_id":"themes/halo/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1584889016000},{"_id":"themes/halo/layout/_partial/bg-cover-content.ejs","hash":"323ac8cde4c2f92d0c4b9ca51ead888ffad00de7","modified":1584889016000},{"_id":"themes/halo/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1584889016000},{"_id":"themes/halo/layout/_partial/disqus.ejs","hash":"a0f53d1a9b579d52e52ccad8c6e330bf3b89547e","modified":1584889016000},{"_id":"themes/halo/layout/_partial/gitalk.ejs","hash":"e603a4ed4d152a34081b7cf6cd8f55c6f0464c1e","modified":1584889016000},{"_id":"themes/halo/layout/_partial/footer.ejs","hash":"0e08f1f3009217fec5103234ded150fa481cc61b","modified":1584889016000},{"_id":"themes/halo/layout/_partial/github-link.ejs","hash":"3abb42b899aa60342b3f5380863ed481eb4e1183","modified":1584889016000},{"_id":"themes/halo/layout/_partial/gitment.ejs","hash":"acd9c115f51a55d5392baa5e0b4b290bcd364068","modified":1584889016000},{"_id":"themes/halo/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1584889016000},{"_id":"themes/halo/layout/_partial/head.ejs","hash":"efbe97d015c337924d1b34fc12b6c9d9417dbd94","modified":1584889016000},{"_id":"themes/halo/layout/_partial/header.ejs","hash":"ec7132c45e384d75199430b6ca084012d202952d","modified":1584889016000},{"_id":"themes/halo/layout/_partial/index-cover.ejs","hash":"d0ead8b58101c13c43e79f00310a62e05a49724d","modified":1584889016000},{"_id":"themes/halo/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1584889016000},{"_id":"themes/halo/layout/_partial/mobile-nav.ejs","hash":"eef28b2331d2e844f046c4e60e3e2a9dcc5065c9","modified":1584889016000},{"_id":"themes/halo/layout/_partial/navigation.ejs","hash":"5ff6fdfe973619120a9eda4505bbff4545e39ff0","modified":1584889016000},{"_id":"themes/halo/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1584889016000},{"_id":"themes/halo/layout/_partial/post-cover.ejs","hash":"b0f362fe5a0f1431ff0085d5253c6d0a5e4a595d","modified":1584889016000},{"_id":"themes/halo/layout/_partial/post-detail-toc.ejs","hash":"58d4322eadff283e1e85f797f695eed9a60f6988","modified":1584889016000},{"_id":"themes/halo/layout/_partial/post-detail.ejs","hash":"1f4c4bef77228cb436863177beb998b9502d527f","modified":1584889016000},{"_id":"themes/halo/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1584889016000},{"_id":"themes/halo/layout/_partial/prev-next.ejs","hash":"9d5f9112e9dfb2af3efda8afe282643841e78e32","modified":1584889016000},{"_id":"themes/halo/layout/_partial/reprint-statement.ejs","hash":"447821260fdc0e373fc9944e89ea4cc4d8ee372d","modified":1584889016000},{"_id":"themes/halo/layout/_partial/reward.ejs","hash":"b837e0f2197da28c82f12c232e6a96f794b304da","modified":1584889016000},{"_id":"themes/halo/layout/_partial/search.ejs","hash":"04bf9aee8aa462eb098cffd06e9735043ead008e","modified":1584889016000},{"_id":"themes/halo/layout/_partial/share.ejs","hash":"905441a53bb443fcdcba989f31903d9a7a8940e0","modified":1584889016000},{"_id":"themes/halo/layout/_partial/social-link.ejs","hash":"8aa7cbbf763da1c0eb98a5edd46e83e3cbf203d3","modified":1584889016000},{"_id":"themes/halo/layout/_partial/valine.ejs","hash":"afb4aee72d9a5a4f2adf6cd759620ca3e60d59e7","modified":1584889016000},{"_id":"themes/halo/layout/_widget/category-cloud.ejs","hash":"424ef5db791264a79c1f3338e7c43a2f445cb2ab","modified":1584889016000},{"_id":"themes/halo/layout/_widget/dream.ejs","hash":"ba83115ce66f4328601e567aa30f50d1410b9bfa","modified":1584889016000},{"_id":"themes/halo/layout/_widget/category-radar.ejs","hash":"c44b96da5490817cb34936e7f24aa6287cd8392c","modified":1584889016000},{"_id":"themes/halo/layout/_widget/music.ejs","hash":"ee9669a40dd5555d60a2058c6efbf622fe28035b","modified":1584889016000},{"_id":"themes/halo/layout/_widget/my-gallery.ejs","hash":"dcef4f288073b2189e5f8f5c341f1f44604a3883","modified":1584889016000},{"_id":"themes/halo/layout/_widget/my-skills.ejs","hash":"aa97d6c6c36348339a42a4b78caf631901c5d5a7","modified":1584889016000},{"_id":"themes/halo/layout/_widget/post-calendar.ejs","hash":"7588cc30007d94b31019fa805162e587a27a460b","modified":1584889016000},{"_id":"themes/halo/layout/_widget/my-projects.ejs","hash":"dbd8df5146bd6e873535e24f09dd7cf04e17a4e4","modified":1584889016000},{"_id":"themes/halo/layout/_widget/post-charts-article.ejs","hash":"8372a9eadfa306eb572cf43d073ce13571680f2f","modified":1584889016000},{"_id":"themes/halo/layout/_widget/post-charts-categories.ejs","hash":"ca3d4450bd6bf066ef87621db35258c1658c1775","modified":1584889016000},{"_id":"themes/halo/layout/_widget/post-charts-tags.ejs","hash":"73eb984de047931919b7b7ba12c86b531e808b39","modified":1584889016000},{"_id":"themes/halo/layout/_widget/post-charts.ejs","hash":"004c9b827d5a6a1b189f44fad9484166083b0556","modified":1584889016000},{"_id":"themes/halo/layout/_widget/recommend.ejs","hash":"a40f466dc96cedfcde66b89acdc0a2fa8a8dfefe","modified":1584889016000},{"_id":"themes/halo/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1584889016000},{"_id":"themes/halo/layout/_widget/tag-wordcloud.ejs","hash":"8435f746d28b666ce99d4f3cf062e980bf4a5893","modified":1584889016000},{"_id":"themes/halo/layout/_widget/video.ejs","hash":"6dd0dc43878c1a8f766282a840ebb568afb6101e","modified":1584889016000},{"_id":"themes/halo/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1584889016000},{"_id":"themes/halo/source/js/matery.js","hash":"07ed4f743a497d7850b3fdda2a5d9beccc5a8fb5","modified":1584889016000},{"_id":"themes/halo/source/js/search.js","hash":"499e11786efbb04815b54a1de317cc8606a37555","modified":1584889016000},{"_id":"themes/halo/source/css/my.css","hash":"fa05e67d4434d0b22a15577722bda781f992509b","modified":1584889016000},{"_id":"themes/halo/source/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1584889016000},{"_id":"themes/halo/source/css/matery.css","hash":"48a60015145328c334e96b480025f33124c87036","modified":1584889016000},{"_id":"themes/halo/source/medias/.DS_Store","hash":"a171b90a26a0b29695f40aacfeebdc4ed801f556","modified":1588488747897},{"_id":"themes/halo/source/medias/avatar.png","hash":"9fd9bf38735a3da377f694dde1ef70061e1a7bd7","modified":1584889016000},{"_id":"themes/halo/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1584889016000},{"_id":"themes/halo/source/medias/icp.png","hash":"5d1a1f3051c8a4ad70afa0a5488dfa7f0bb27bd5","modified":1584889016000},{"_id":"themes/halo/source/medias/logo.png","hash":"9fd9bf38735a3da377f694dde1ef70061e1a7bd7","modified":1584889016000},{"_id":"themes/halo/config/source/404/index.md","hash":"783b0a48c7e88d32286273e0c084422c874548fb","modified":1584889016000},{"_id":"themes/halo/config/source/_data/friends.json","hash":"210be53b23ee855669bf98a805721bb5712a504f","modified":1588488160723},{"_id":"themes/halo/config/source/_posts/hello-world.md","hash":"7c91fe216a55c5a33f5ed102a3d1651b53dd30b7","modified":1584889016000},{"_id":"themes/halo/config/source/about/index.md","hash":"aaba7d919ffdab6b8f755d334238b5b5f1fb98ee","modified":1584889016000},{"_id":"themes/halo/config/source/articles/index.md","hash":"7b1f0f8b0e986892a8646c545f87f7eb8b30d5b6","modified":1584889016000},{"_id":"themes/halo/config/source/categories/index.md","hash":"e92c6197e79a02f2b9aaca568a80d7686486e94e","modified":1584889016000},{"_id":"themes/halo/config/source/data/index.md","hash":"24602300d3c0414783b4601f3b6aa0de2d28cfb9","modified":1584889016000},{"_id":"themes/halo/config/source/friends/index.md","hash":"3080fc45f950d5266ad9065cb5e474d2913de51e","modified":1584889016000},{"_id":"themes/halo/config/source/tags/index.md","hash":"ac197d79246a034fb5bf0afa0a90ce00fcfbf4e6","modified":1584889016000},{"_id":"themes/halo/config/source/timeline/index.md","hash":"8f39dcb344255c049cef832c4e457835c57d19c4","modified":1584889016000},{"_id":"themes/halo/config/source/_data/musics.json","hash":"46588a16b735cfb95b8083e39e2b9f6dec517dcb","modified":1584889016000},{"_id":"themes/halo/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1584889016000},{"_id":"themes/halo/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1584889016000},{"_id":"themes/halo/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1584889016000},{"_id":"themes/halo/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1584889016000},{"_id":"themes/halo/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1584889016000},{"_id":"themes/halo/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1584889016000},{"_id":"themes/halo/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1584889016000},{"_id":"themes/halo/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1584889016000},{"_id":"themes/halo/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1584889016000},{"_id":"themes/halo/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1584889016000},{"_id":"themes/halo/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1584889016000},{"_id":"themes/halo/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1584889016000},{"_id":"themes/halo/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1584889016000},{"_id":"themes/halo/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1584889016000},{"_id":"themes/halo/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1584889016000},{"_id":"themes/halo/source/libs/gitalk/gitalk.css","hash":"3aac1db83b0135c521187254ff302d125cc30706","modified":1584889016000},{"_id":"themes/halo/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1584889016000},{"_id":"themes/halo/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1584889016000},{"_id":"themes/halo/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1584889016000},{"_id":"themes/halo/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1584889016000},{"_id":"themes/halo/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1584889016000},{"_id":"themes/halo/source/libs/others/clickfire.js","hash":"496a3352098a0bc12688a7c3d1686f0a216459c7","modified":1584889016000},{"_id":"themes/halo/source/libs/others/clicklove.js","hash":"ee834dfc42e9b505017f9db8692d588a701f2883","modified":1584889016000},{"_id":"themes/halo/source/libs/others/cursor.js","hash":"c530c0f0145dc9c6eed3e6a031bedcadd5e6c71e","modified":1584889016000},{"_id":"themes/halo/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1584889016000},{"_id":"themes/halo/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1584889016000},{"_id":"themes/halo/source/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/13.jpg","hash":"66706dfde7d910182c2f1dbadd0e9e917630b8dd","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/15.jpg","hash":"5cf9fc64d5d74ab6ba69bb8bff580fdc22ba32d0","modified":1584889016000},{"_id":"themes/halo/source/medias/avatar.jpeg","hash":"729376453be67983da4ece71a6fc8952584fee2f","modified":1584889016000},{"_id":"themes/halo/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/2.jpg","hash":"16f1d89cdba4dce935ac0f12599e0fcfda543a93","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/21.jpg","hash":"d70b088850c3565e5b5bb9eb8fe4abe688c964cf","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/22.jpg","hash":"bf5b59d193e5ca089a7fff034c222bfa2c4dc41f","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/23.jpg","hash":"ed5ac9f616d3b99af5188a10b1761884c37e93e5","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/5.jpg","hash":"c3c1f36a1b1886037db604f151f335cd4599e970","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/7.jpg","hash":"a0246a4a560438938489cdd154e35f172b3f31b0","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/8.jpg","hash":"5a46ca4ab4c4ab2101a2af77a31a8878bccc483c","modified":1584889016000},{"_id":"themes/halo/source/medias/reward/qq.png","hash":"0ba5937eeeb2750934e6655b6ea8b3b799040ee9","modified":1588483561782},{"_id":"themes/halo/source/medias/reward/alipay.jpg","hash":"3aded4473d968f710c41b671da105882aecc2c69","modified":1588484134925},{"_id":"themes/halo/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1584889016000},{"_id":"themes/halo/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1584889016000},{"_id":"themes/halo/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1584889016000},{"_id":"themes/halo/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1584889016000},{"_id":"themes/halo/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1584889016000},{"_id":"themes/halo/source/medias/banner/0.jpg","hash":"1f2ec55fe7825475fde2601573bb622f0bf2acba","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/0.jpg","hash":"2066cdda98ad0035071cd4aa7bd696eb078c0b6d","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/10.jpg","hash":"838e704942de076c60894d14e5f280e2724b6f68","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/1.jpg","hash":"d16e28bd23ea3a63643826dde5eea6b7a9bdda5d","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/11.jpg","hash":"9ed45f95b83626e3d91d6c405eb8bfe6fcb9736a","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/12.jpg","hash":"047be4239dd7e0be83243ee6b49a392a61f16b9a","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/16.jpg","hash":"9cac6b80b0cc8959fc8aabfbd1adcab79ebebfc9","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/18.jpg","hash":"ae23fdfaa59bc57b7ed49e90c5d59e4b68e1eea5","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/19.jpg","hash":"57bc7c804b78b5cceb4eb1f9e51b734b75151b71","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/17.jpg","hash":"f168ca5b046d10a878a7b0bcfab540e2c4428887","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/20.jpg","hash":"8271c4a327632b566ea62f546c083d08a0528e72","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/3.jpg","hash":"5e879652e032f02961a331b598a50b60ebe80a39","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/4.jpg","hash":"4eea5bdb5724ef1ed65790e481eda0d2fb176bf0","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/6.jpg","hash":"c63ff64bdd5f6c82da8804c7248fc519d23eaf0b","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/9.jpg","hash":"815c84778b721e3606c2bd7c099c7de7c53251ba","modified":1584889016000},{"_id":"themes/halo/source/medias/reward/wechat.png","hash":"75500c4d54641b815216c3e2f9dcb600de044c44","modified":1588483115848},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1584889016000},{"_id":"themes/halo/source/libs/gitalk/gitalk.min.js","hash":"734f56442e62fe55f677e8ccae7f175445667767","modified":1584889016000},{"_id":"themes/halo/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1584889016000},{"_id":"themes/halo/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1584889016000},{"_id":"themes/halo/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1584889016000},{"_id":"themes/halo/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1584889016000},{"_id":"themes/halo/source/libs/lightGallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1584889016000},{"_id":"themes/halo/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1584889016000},{"_id":"themes/halo/source/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1584889016000},{"_id":"themes/halo/source/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1584889016000},{"_id":"themes/halo/source/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1584889016000},{"_id":"themes/halo/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1584889016000},{"_id":"themes/halo/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1584889016000},{"_id":"themes/halo/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1584889016000},{"_id":"themes/halo/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1584889016000},{"_id":"themes/halo/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1584889016000},{"_id":"themes/halo/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1584889016000},{"_id":"themes/halo/source/libs/share/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1584889016000},{"_id":"themes/halo/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1584889016000},{"_id":"themes/halo/source/libs/materialize/materialize.min.css","hash":"80ae4aa0dba3634dd9bf59586d541d2dd8d8191c","modified":1584889016000},{"_id":"themes/halo/source/medias/banner/3.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1584889016000},{"_id":"themes/halo/source/medias/banner/1.jpg","hash":"c3d5ab183b39a7140941b8375e29498f9d24f343","modified":1584889016000},{"_id":"themes/halo/source/medias/banner/2.jpg","hash":"8d3c8391ff161eec70f66d69e5545a9468cc52ef","modified":1584889016000},{"_id":"themes/halo/source/medias/banner/5.jpg","hash":"4a08deec1dd5b4f1490e8fc23adfb75a0f88b0c4","modified":1584889016000},{"_id":"themes/halo/source/medias/banner/6.jpg","hash":"106694b7b34bf924eab5849d166be9b395668f83","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1584889016000},{"_id":"themes/halo/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1584889016000},{"_id":"themes/halo/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"229afff648cbd17de80176e0feb969c7f514be7e","modified":1584889016000},{"_id":"themes/halo/source/medias/featureimages/14.jpg","hash":"8aeb816faca2d5eaea4cce9e881d6ff87b8c7cf1","modified":1584889016000},{"_id":"themes/halo/source/medias/banner/4.jpg","hash":"56850c3139cbd72a0eff0c35d8fac32c9c66dd6a","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1584889016000},{"_id":"themes/halo/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"25612c76ded31c497effe46454d8d2bb36fb99d6","modified":1584889016000},{"_id":"themes/halo/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"2c026711e4dd6b6d805cc19c0e4a572e6239a05b","modified":1584889016000},{"_id":"public/go.html","hash":"1ff789177002bf5834887df2e3be4f79be55b82e","modified":1588489904163},{"_id":"public/sitemap.xml","hash":"c33f045de2bfb6a92d4ab973dd0a52755aba4299","modified":1588608244356},{"_id":"public/atom.xml","hash":"739750e73006422fe15d3703d893dc2e494a84e8","modified":1588608244356},{"_id":"public/404/index.html","hash":"3ba03e6d8b419956ed5d4479d15a7af359709273","modified":1588608244356},{"_id":"public/about/index.html","hash":"71e1f80ddad6d6eafd346dfb98dc294760776c90","modified":1588608244356},{"_id":"public/categories/index.html","hash":"28aeccd22525008eca0fe1ff26bc1f8559a640a5","modified":1588608244356},{"_id":"public/articles/index.html","hash":"8b4d2a8fc58ddc8b54a9a032be7be399ff2daa26","modified":1588608244356},{"_id":"public/data/index.html","hash":"22bcbe0795ea302099da3e1ad887bf0aff0d8937","modified":1588608244356},{"_id":"public/friends/index.html","hash":"c8c7a97760d777e20ab4892c97fe32a8c4f9a782","modified":1588608244356},{"_id":"public/timeline/index.html","hash":"337ad5146dd28586065593b6111a55e486a149f3","modified":1588608244356},{"_id":"public/tags/index.html","hash":"ae88708df2d04ae96e99c3263c67702e893d8d32","modified":1588608244356},{"_id":"public/2020/05/03/yuque/iwxsk5/index.html","hash":"812d0a197e70d3f0a0c6199087da429af9d51291","modified":1588608244356},{"_id":"public/2020/05/02/yuque/lyup3r/index.html","hash":"f571b171b28ab6889f3b294f129ce567056f380d","modified":1588602241602},{"_id":"public/2020/05/02/yuque/huan-ying-shi-yong-mweb/index.html","hash":"9b1195fb64fd08967ea57dd6c2ea80de4fa85000","modified":1588608244356},{"_id":"public/2020/05/02/yuque/egko8o/index.html","hash":"be79dfbd161bdd0d92c550aed42368deeae733bd","modified":1588608244356},{"_id":"public/2020/05/02/yuque/6600f4fa-1e97-4ef7-b40f-cb9ec89924e1/index.html","hash":"a26b4fb610f172100821ac6661d2e68c074f7252","modified":1588608244356},{"_id":"public/2020/05/01/yuque/du3fal/index.html","hash":"a81ec14f492f9f07f94a3129fcbe66033fddb06a","modified":1588608244356},{"_id":"public/2020/05/01/yuque/wcgfp5/index.html","hash":"9011067e5ab25948be59bac081c1ce3ad4f0b9ad","modified":1588608244356},{"_id":"public/2020/05/01/yuque/pdrp5a/index.html","hash":"f8cc1a386e86ee1f31a6c2a44303a9e17514b6e7","modified":1588608244356},{"_id":"public/2020/05/01/yuque/diqcug/index.html","hash":"cf889ba6443f411311d87c9b3ededb947e52cbd8","modified":1588608244356},{"_id":"public/2020/05/01/yuque/ee03pk/index.html","hash":"a9453ced29de74836663857d6bec64fa8d787cd5","modified":1588608244356},{"_id":"public/2020/05/01/yuque/fn26h0/index.html","hash":"06aa6c88b22b4d7dc636ac70ff0a7cc49c0f52b5","modified":1588608244356},{"_id":"public/2020/05/01/yuque/98bfbbe4-3078-488c-a1ad-907e638fce65/index.html","hash":"24d0923a45e86b7e3e1007ff18e211d8526da158","modified":1588608244356},{"_id":"public/2020/04/30/yuque/dqugvo/index.html","hash":"e3ea16cf00cd006dcf9ac56ac4f58a6a84c86b01","modified":1588608244356},{"_id":"public/archives/index.html","hash":"b3e349cb3e9ad3af87b08b4986271cdcf1c3206a","modified":1588608244356},{"_id":"public/archives/page/2/index.html","hash":"b3e349cb3e9ad3af87b08b4986271cdcf1c3206a","modified":1588608244356},{"_id":"public/archives/page/3/index.html","hash":"b3e349cb3e9ad3af87b08b4986271cdcf1c3206a","modified":1588608244356},{"_id":"public/archives/2020/index.html","hash":"39b4367cdb3ce471cda740233eed99c85034f5ee","modified":1588608244356},{"_id":"public/archives/2020/page/2/index.html","hash":"39b4367cdb3ce471cda740233eed99c85034f5ee","modified":1588608244356},{"_id":"public/archives/2020/page/3/index.html","hash":"39b4367cdb3ce471cda740233eed99c85034f5ee","modified":1588608244356},{"_id":"public/archives/2020/04/index.html","hash":"eb9f62da4f07fe411852734e7e27973f0aa1430d","modified":1588608244356},{"_id":"public/archives/2020/05/index.html","hash":"de0c91e0dadac5058f457f3e34a9efe08f692ffb","modified":1588608244356},{"_id":"public/archives/2020/05/page/2/index.html","hash":"de0c91e0dadac5058f457f3e34a9efe08f692ffb","modified":1588608244356},{"_id":"public/index.html","hash":"1d1bb68b5c1aa98e861130e8ca8f972b2df42434","modified":1588608244356},{"_id":"public/page/2/index.html","hash":"8d176310f0618bb590a07a62515ce9aa46b7f342","modified":1588608244356},{"_id":"public/page/3/index.html","hash":"54ab37ad41f28a8fe19208c7473df1f155c6e2d6","modified":1588608244356},{"_id":"public/favicon.ico","hash":"f17210fc20d90f14b32781d1ebc0c1f38f4c492f","modified":1588489904163},{"_id":"public/medias/avatar.png","hash":"9fd9bf38735a3da377f694dde1ef70061e1a7bd7","modified":1588489904163},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1588489904163},{"_id":"public/medias/icp.png","hash":"5d1a1f3051c8a4ad70afa0a5488dfa7f0bb27bd5","modified":1588489904163},{"_id":"public/medias/logo.png","hash":"9fd9bf38735a3da377f694dde1ef70061e1a7bd7","modified":1588489904163},{"_id":"public/medias/featureimages/13.jpg","hash":"66706dfde7d910182c2f1dbadd0e9e917630b8dd","modified":1588489904163},{"_id":"public/medias/featureimages/15.jpg","hash":"5cf9fc64d5d74ab6ba69bb8bff580fdc22ba32d0","modified":1588489904163},{"_id":"public/medias/featureimages/2.jpg","hash":"16f1d89cdba4dce935ac0f12599e0fcfda543a93","modified":1588489904163},{"_id":"public/medias/featureimages/23.jpg","hash":"ed5ac9f616d3b99af5188a10b1761884c37e93e5","modified":1588489904163},{"_id":"public/medias/featureimages/22.jpg","hash":"bf5b59d193e5ca089a7fff034c222bfa2c4dc41f","modified":1588489904163},{"_id":"public/medias/featureimages/21.jpg","hash":"d70b088850c3565e5b5bb9eb8fe4abe688c964cf","modified":1588489904163},{"_id":"public/medias/featureimages/5.jpg","hash":"c3c1f36a1b1886037db604f151f335cd4599e970","modified":1588489904163},{"_id":"public/medias/reward/qq.png","hash":"0ba5937eeeb2750934e6655b6ea8b3b799040ee9","modified":1588489904163},{"_id":"public/medias/featureimages/7.jpg","hash":"a0246a4a560438938489cdd154e35f172b3f31b0","modified":1588489904163},{"_id":"public/medias/featureimages/8.jpg","hash":"5a46ca4ab4c4ab2101a2af77a31a8878bccc483c","modified":1588489904163},{"_id":"public/medias/reward/alipay.jpg","hash":"3aded4473d968f710c41b671da105882aecc2c69","modified":1588489904163},{"_id":"public/medias/featureimages/16.jpg","hash":"9cac6b80b0cc8959fc8aabfbd1adcab79ebebfc9","modified":1588489904163},{"_id":"public/medias/reward/wechat.png","hash":"75500c4d54641b815216c3e2f9dcb600de044c44","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"439c8afd3373acb4a73135a34e220464a89cd5e2","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"0f4bd02942a54a6b3200d9078adff88c2812e751","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"59439d3ad31d856d78ec3e2bd9f1eafa2c7a581c","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"f6f653b4ea8fc487bdb590d39d5a726258a55f40","modified":1588489904163},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1588489904163},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1588489904163},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1588489904163},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1588489904163},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1588489904163},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1588489904163},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1588489904163},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1588489904163},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1588489904163},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1588489904163},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1588489904163},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1588489904163},{"_id":"public/medias/avatar.jpeg","hash":"729376453be67983da4ece71a6fc8952584fee2f","modified":1588489904163},{"_id":"public/medias/banner/0.jpg","hash":"1f2ec55fe7825475fde2601573bb622f0bf2acba","modified":1588489904163},{"_id":"public/medias/featureimages/0.jpg","hash":"2066cdda98ad0035071cd4aa7bd696eb078c0b6d","modified":1588489904163},{"_id":"public/medias/featureimages/10.jpg","hash":"838e704942de076c60894d14e5f280e2724b6f68","modified":1588489904163},{"_id":"public/medias/featureimages/1.jpg","hash":"d16e28bd23ea3a63643826dde5eea6b7a9bdda5d","modified":1588489904163},{"_id":"public/medias/featureimages/11.jpg","hash":"9ed45f95b83626e3d91d6c405eb8bfe6fcb9736a","modified":1588489904163},{"_id":"public/medias/featureimages/12.jpg","hash":"047be4239dd7e0be83243ee6b49a392a61f16b9a","modified":1588489904163},{"_id":"public/medias/featureimages/18.jpg","hash":"ae23fdfaa59bc57b7ed49e90c5d59e4b68e1eea5","modified":1588489904163},{"_id":"public/medias/featureimages/20.jpg","hash":"8271c4a327632b566ea62f546c083d08a0528e72","modified":1588489904163},{"_id":"public/medias/featureimages/19.jpg","hash":"57bc7c804b78b5cceb4eb1f9e51b734b75151b71","modified":1588489904163},{"_id":"public/medias/featureimages/17.jpg","hash":"f168ca5b046d10a878a7b0bcfab540e2c4428887","modified":1588489904163},{"_id":"public/medias/featureimages/3.jpg","hash":"5e879652e032f02961a331b598a50b60ebe80a39","modified":1588489904163},{"_id":"public/medias/featureimages/6.jpg","hash":"c63ff64bdd5f6c82da8804c7248fc519d23eaf0b","modified":1588489904163},{"_id":"public/medias/featureimages/9.jpg","hash":"815c84778b721e3606c2bd7c099c7de7c53251ba","modified":1588489904163},{"_id":"public/medias/featureimages/4.jpg","hash":"4eea5bdb5724ef1ed65790e481eda0d2fb176bf0","modified":1588489904163},{"_id":"public/medias/banner/2.jpg","hash":"8d3c8391ff161eec70f66d69e5545a9468cc52ef","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"a46bd47ff0a90b812aafafda587d095cdb844271","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"22f9e7d5226408eb2d0a11e118257a3ca22b8670","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"91cbeeaceb644a971241c08362898599d6d968ce","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"92803b8753ceda573c6906774677c5a7081d2fbb","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"18838f5260317da3c5ed29bf844ac8a4f7ad0529","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"9c081b88b106c6c04ecb895ba7ba7d3dcb3b55ac","modified":1588489904163},{"_id":"public/medias/featureimages/14.jpg","hash":"8aeb816faca2d5eaea4cce9e881d6ff87b8c7cf1","modified":1588489904163},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1588489904163},{"_id":"public/js/search.js","hash":"499e11786efbb04815b54a1de317cc8606a37555","modified":1588489904163},{"_id":"public/css/my.css","hash":"fa05e67d4434d0b22a15577722bda781f992509b","modified":1588489904163},{"_id":"public/js/matery.js","hash":"07ed4f743a497d7850b3fdda2a5d9beccc5a8fb5","modified":1588489904163},{"_id":"public/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1588489904163},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1588489904163},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1588489904163},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1588489904163},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1588489904163},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1588489904163},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1588489904163},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1588489904163},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1588489904163},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1588489904163},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1588489904163},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1588489904163},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1588489904163},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1588489904163},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1588489904163},{"_id":"public/libs/others/clicklove.js","hash":"ee834dfc42e9b505017f9db8692d588a701f2883","modified":1588489904163},{"_id":"public/libs/others/clickfire.js","hash":"496a3352098a0bc12688a7c3d1686f0a216459c7","modified":1588489904163},{"_id":"public/libs/others/cursor.js","hash":"c530c0f0145dc9c6eed3e6a031bedcadd5e6c71e","modified":1588489904163},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1588489904163},{"_id":"public/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1588489904163},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1588489904163},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1588489904163},{"_id":"public/css/matery.css","hash":"48a60015145328c334e96b480025f33124c87036","modified":1588489904163},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1588489904163},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1588489904163},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1588489904163},{"_id":"public/libs/gitalk/gitalk.css","hash":"3aac1db83b0135c521187254ff302d125cc30706","modified":1588489904163},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1588489904163},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1588489904163},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1588489904163},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1588489904163},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1588489904163},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1588489904163},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1588489904163},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1588489904163},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"734f56442e62fe55f677e8ccae7f175445667767","modified":1588489904163},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1588489904163},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1588489904163},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1588489904163},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1588489904163},{"_id":"public/libs/materialize/materialize.min.css","hash":"580459a012f556fba86438953062013a94b201af","modified":1588489904163},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1588489904163},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1588489904163},{"_id":"public/libs/awesome/css/all.css","hash":"ecc41e32ad2696877a1656749841f3b5543bbe3d","modified":1588489904163},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1588489904163},{"_id":"public/medias/banner/3.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1588489904163},{"_id":"public/medias/banner/1.jpg","hash":"c3d5ab183b39a7140941b8375e29498f9d24f343","modified":1588489904163},{"_id":"public/medias/banner/5.jpg","hash":"4a08deec1dd5b4f1490e8fc23adfb75a0f88b0c4","modified":1588489904163},{"_id":"public/medias/banner/6.jpg","hash":"106694b7b34bf924eab5849d166be9b395668f83","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"229afff648cbd17de80176e0feb969c7f514be7e","modified":1588489904163},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"cab8e84ae5682d1d556e234df9c790985888def8","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"9521ed12274c2cbc910cea77657116fcf6545da3","modified":1588489904163},{"_id":"public/medias/banner/4.jpg","hash":"56850c3139cbd72a0eff0c35d8fac32c9c66dd6a","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"25612c76ded31c497effe46454d8d2bb36fb99d6","modified":1588489904163},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"2c026711e4dd6b6d805cc19c0e4a572e6239a05b","modified":1588489904163},{"_id":"source/.DS_Store","hash":"24daafaa0e900e7fff55c49524cec21218abb4f3","modified":1588601351471},{"_id":"source/_posts/.DS_Store","hash":"422250341941246af0ca07067d793cb91517113e","modified":1588601351470},{"_id":"source/_posts/yuque/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1588601356477},{"_id":"source/_posts/yuque/be983r.md","hash":"4857c4cdc54d952135135f0599406e7d7c52b479","modified":1588608234467},{"_id":"public/2020/05/04/yuque/be983r/index.html","hash":"ed6dc65210f23d50f03f1a8c5ad62b9329348233","modified":1588608244356}],"Category":[],"Data":[{"_id":"friends","data":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}]},{"_id":"musics","data":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}],"Page":[{"title":"404","date":"2019-12-31T16:00:00.000Z","type":"404","layout":"404","description":"你访问的页面已经去吃肉肉了~~","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2020-01-01 00:00:00\ntype: \"404\"\nlayout: \"404\"\ndescription: \"你访问的页面已经去吃肉肉了~~\"\n---","updated":"2020-03-22T14:56:56.000Z","path":"404/index.html","comments":1,"_id":"ck9qpvip20000x0nl8edjdm0u","content":"","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":""},{"title":"about","date":"2019-12-31T16:00:00.000Z","type":"about","layout":"about","_content":"\n# 关于自己\n\n- 技术宅一枚，喜欢折腾各种电子产品、钻研各种技术。也喜欢音乐、电影、吃吃吃等娱乐。\n\n# 关于博客\n写这个博客的目的就是分享一些软件技巧、技术相关、折腾经历、生活记录等。\n\n\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-01-01 00:00:00\ntype: \"about\"\nlayout: \"about\"\n---\n\n# 关于自己\n\n- 技术宅一枚，喜欢折腾各种电子产品、钻研各种技术。也喜欢音乐、电影、吃吃吃等娱乐。\n\n# 关于博客\n写这个博客的目的就是分享一些软件技巧、技术相关、折腾经历、生活记录等。\n\n\n\n","updated":"2020-03-22T14:56:56.000Z","path":"about/index.html","comments":1,"_id":"ck9qpvip70002x0nle8zt8aei","content":"<h1 id=\"关于自己\"><a href=\"#关于自己\" class=\"headerlink\" title=\"关于自己\"></a>关于自己</h1><ul>\n<li>技术宅一枚，喜欢折腾各种电子产品、钻研各种技术。也喜欢音乐、电影、吃吃吃等娱乐。</li>\n</ul>\n<h1 id=\"关于博客\"><a href=\"#关于博客\" class=\"headerlink\" title=\"关于博客\"></a>关于博客</h1><p>写这个博客的目的就是分享一些软件技巧、技术相关、折腾经历、生活记录等。</p>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h1 id=\"关于自己\"><a href=\"#关于自己\" class=\"headerlink\" title=\"关于自己\"></a>关于自己</h1><ul>\n<li>技术宅一枚，喜欢折腾各种电子产品、钻研各种技术。也喜欢音乐、电影、吃吃吃等娱乐。</li>\n</ul>\n<h1 id=\"关于博客\"><a href=\"#关于博客\" class=\"headerlink\" title=\"关于博客\"></a>关于博客</h1><p>写这个博客的目的就是分享一些软件技巧、技术相关、折腾经历、生活记录等。</p>\n"},{"title":"categories","date":"2019-12-31T16:00:00.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-01-01 00:00:00\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2020-03-22T14:56:56.000Z","path":"categories/index.html","comments":1,"_id":"ck9qpvip80003x0nlh3vm8gtr","content":"","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":""},{"title":"articles","date":"2019-12-31T16:00:00.000Z","type":"articles","layout":"articles","_content":"","source":"articles/index.md","raw":"---\ntitle: articles\ndate: 2020-01-01 00:00:00\ntype: \"articles\"\nlayout: \"articles\"\n---\n","updated":"2020-03-22T14:56:56.000Z","path":"articles/index.html","comments":1,"_id":"ck9qpvip90004x0nl4t5ybzg3","content":"","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":""},{"title":"data","date":"2019-12-31T16:00:00.000Z","type":"data","layout":"data","_content":"","source":"data/index.md","raw":"---\ntitle: data\ndate: 2020-01-01 00:00:00\ntype: \"data\"\nlayout: \"data\"\n---\n","updated":"2020-03-22T14:56:56.000Z","path":"data/index.html","comments":1,"_id":"ck9qpvip90005x0nlf4s33sl7","content":"","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":""},{"title":"friends","date":"2019-12-31T16:00:00.000Z","type":"friends","layout":"friends","_content":"## <center>交 换 友 链 </center>\n\n---\n\n<!-- ### 添加友链说明：\n\n- 添加上我的链接。信息请参照`友链格式`。\n\n- 直接按照`友链格式`评论，正常添加我会回复。\n\n- 不定期检查友链是否失效，如失效或者修改请直接在申请的评论回复即可。\n\n- 若单方面长时间不添加或者删除本站友链，本站将不再保留贵站友链。 -->\n\n<!-- #### 友链格式:\n\n- 博客名称： HONGWEI\n- 博客头像： https://www.zhwei.cn/favicon.ico \n- 博客地址： https://www.zhwei.cn/ \n- 博客介绍： 电脑技术、软件教程、代码资料、学习经验、兴趣爱好\n\n```json\n{\n    \"name\": \"HONGWEI\",\n    \"avatar\": \"HONGWEI\",\n    \"url\": \"https://www.zhwei.cn/\",\n    \"introduction\": \"写如诗的内容，分享温而不沸的生活。\",\n    \"title\": 前去参观\n}\n``` -->","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2020-01-01 00:00:00\ntype: \"friends\"\nlayout: \"friends\"\n\n---\n## <center>交 换 友 链 </center>\n\n---\n\n<!-- ### 添加友链说明：\n\n- 添加上我的链接。信息请参照`友链格式`。\n\n- 直接按照`友链格式`评论，正常添加我会回复。\n\n- 不定期检查友链是否失效，如失效或者修改请直接在申请的评论回复即可。\n\n- 若单方面长时间不添加或者删除本站友链，本站将不再保留贵站友链。 -->\n\n<!-- #### 友链格式:\n\n- 博客名称： HONGWEI\n- 博客头像： https://www.zhwei.cn/favicon.ico \n- 博客地址： https://www.zhwei.cn/ \n- 博客介绍： 电脑技术、软件教程、代码资料、学习经验、兴趣爱好\n\n```json\n{\n    \"name\": \"HONGWEI\",\n    \"avatar\": \"HONGWEI\",\n    \"url\": \"https://www.zhwei.cn/\",\n    \"introduction\": \"写如诗的内容，分享温而不沸的生活。\",\n    \"title\": 前去参观\n}\n``` -->","updated":"2020-05-03T06:47:46.698Z","path":"friends/index.html","comments":1,"_id":"ck9qpvipa0006x0nl3pyf9sqg","content":"<h2 id=\"交-换-友-链\"><a href=\"#交-换-友-链\" class=\"headerlink\" title=\"交 换 友 链 \"></a><center>交 换 友 链 </center></h2><hr>\n<!-- ### 添加友链说明：\n\n- 添加上我的链接。信息请参照`友链格式`。\n\n- 直接按照`友链格式`评论，正常添加我会回复。\n\n- 不定期检查友链是否失效，如失效或者修改请直接在申请的评论回复即可。\n\n- 若单方面长时间不添加或者删除本站友链，本站将不再保留贵站友链。 -->\n\n<!-- #### 友链格式:\n\n- 博客名称： HONGWEI\n- 博客头像： https://www.zhwei.cn/favicon.ico \n- 博客地址： https://www.zhwei.cn/ \n- 博客介绍： 电脑技术、软件教程、代码资料、学习经验、兴趣爱好\n\n```json\n{\n    \"name\": \"HONGWEI\",\n    \"avatar\": \"HONGWEI\",\n    \"url\": \"https://www.zhwei.cn/\",\n    \"introduction\": \"写如诗的内容，分享温而不沸的生活。\",\n    \"title\": 前去参观\n}\n``` -->","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h2 id=\"交-换-友-链\"><a href=\"#交-换-友-链\" class=\"headerlink\" title=\"交 换 友 链 \"></a><center>交 换 友 链 </center></h2><hr>\n<!-- ### 添加友链说明：\n\n- 添加上我的链接。信息请参照`友链格式`。\n\n- 直接按照`友链格式`评论，正常添加我会回复。\n\n- 不定期检查友链是否失效，如失效或者修改请直接在申请的评论回复即可。\n\n- 若单方面长时间不添加或者删除本站友链，本站将不再保留贵站友链。 -->\n\n<!-- #### 友链格式:\n\n- 博客名称： HONGWEI\n- 博客头像： https://www.zhwei.cn/favicon.ico \n- 博客地址： https://www.zhwei.cn/ \n- 博客介绍： 电脑技术、软件教程、代码资料、学习经验、兴趣爱好\n\n```json\n{\n    \"name\": \"HONGWEI\",\n    \"avatar\": \"HONGWEI\",\n    \"url\": \"https://www.zhwei.cn/\",\n    \"introduction\": \"写如诗的内容，分享温而不沸的生活。\",\n    \"title\": 前去参观\n}\n``` -->"},{"title":"timeline","date":"2019-12-31T16:00:00.000Z","type":"timeline","layout":"timeline","_content":"\n","source":"timeline/index.md","raw":"---\ntitle: timeline\ndate: 2020-01-01 00:00:00\ntype: \"timeline\"\nlayout: \"timeline\"\n---\n\n","updated":"2020-03-22T14:56:56.000Z","path":"timeline/index.html","comments":1,"_id":"ck9qpviq00007x0nl4ozsaydq","content":"","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":""},{"title":"tags","date":"2019-12-31T16:00:00.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-01-01 00:00:00\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2020-03-22T14:56:56.000Z","path":"tags/index.html","comments":1,"_id":"ck9qpviq00008x0nlfrf08cmi","content":"","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":""}],"Post":[{"title":"My First Blog Post","_content":"","source":"_drafts/My-First-Blog-Post.md","raw":"---\ntitle: My First Blog Post\ntags:\n---\n","slug":"My-First-Blog-Post","published":0,"date":"2020-05-03T02:38:26.610Z","updated":"2020-05-03T02:38:26.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qpvip50001x0nlh7v1h285","content":"","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":""},{"title":"给文件添加一个.gitignore","urlname":"du3fal","date":"2020-05-01T11:48:14.000Z","_content":"\n## 1.WHY?\n\n.gitignore 文件只要在这个文件中申明那些文件你不希望添加到 git 中去，这样当你使用`git add .`这些文件就会被自动忽略掉\n\n## 2.忽略文件的原则\n\n- 忽略操作系统自动生成的文件，比如缩略图等；\n- 忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如 Java 编译产生的.class 文件；\n- 忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。\n\n## 3.使用方法\n\n首先，在你的工作区新建一个名称为`.gitignore`的文件。\n然后，把要忽略的文件名填进去，Git 就会自动忽略这些文件。\n不需要从头写.gitignore 文件，GitHub 已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：[https://github.com/github/gitignore](https://link.jianshu.com?t=https://github.com/github/gitignore)\n\n## 4.例子\n\n比如你的项目是 java 项目，`.java`文件编译后会生成`.class`文件，这些文件多数情况下是不想被传到仓库中的文件。这时候你可以直接适用 github 的.gitignore 文件模板。[https://github.com/github/gitignore/blob/master/Java.gitignore](https://link.jianshu.com?t=https://github.com/github/gitignore/blob/master/Java.gitignore) 将这些忽略文件信息复制到你的.gitignore 文件中去：\n\n```\n*.class\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n# Package Files #\n*.jar\n*.war\n*.ear\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n```\n\n可以看到 github 为我们提供了最流行的.gitignore 文件配置。\n保存.ignore 文件后我们查看下 git status，检查下是否还有我们不需要的文件会被添加到 git 中去：\n\n```\n$ git status\nOn branch master\nInitial commit\nChanges to be committed:\n  (use \"git rm --cached <file>...\" to unstage)\n        new file:   .gitignore\n        new file:   HelloWorld.java\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n        Config.ini\n```\n\n比如我的项目目录下有一个 Config.ini 文件，这个是个本地配置文件我不希望上传到 git 中去，我们可以在 gitignore 文件中添加这样的配置：\n\n```javascript\nConfig.ini;\n```\n\n或者你想忽略所有的.ini 文件你可以这样写：\n\n```javascript\n*.ini\n```\n\n如果有些文件已经被你忽略了，当你使用`git add`时是无法添加的，比如我忽略了`*.class`，现在我想把`HelloWorld.class`添加到 git 中去：\n\n```javascript\n$ git add HelloWorld.class\nThe following paths are ignored by one of your .gitignore files:\nHelloWorld.class\nUse -f if you really want to add them.\n```\n\ngit 会提示我们这个文件已经被我们忽略了，需要加上`-f`参数才能强制添加到 git 中去：\n\n```javascript\n$ git status\nOn branch master\nInitial commit\nChanges to be committed:\n  (use \"git rm --cached <file>...\" to unstage)\n        new file:   .gitignore\n        new file:   HelloWorld.class\n        new file:   HelloWorld.java\n```\n\n这样就能强制添加到缓存中去了。\n如果我们意外的将想要忽略的文件添加到缓存中去了，我们可以使用`rm`命令将其从中移除：\n\n```javascript\n$ git rm HelloWorld.class --cached\nrm 'HelloWorld.class'\n```\n\n如果你已经把不想上传的文件上传到了 git 仓库，那么你必须先从远程仓库删了它，我们可以从远程仓库直接删除然后 pull 代码到本地仓库这些文件就会本删除，或者从本地删除这些文件并且在.gitignore 文件中添加这些你想忽略的文件，然后再 push 到远程仓库。\n\n## 5.查看 gitignore 规则\n\n如果你发下`.gitignore`写得有问题，需要找出来到底哪个规则写错了，可以用`git check-ignore`命令检查：\n\n```javascript\n$ git check-ignore -v HelloWorld.class\n.gitignore:1:*.class    HelloWorld.class\n```\n\n可以看到`HelloWorld.class`匹配到了我们的第一条`*.class`的忽略规则所以文件被忽略了。\n\n## 6.忽略规则文件语法\n\n### a.忽略指定文件/目录\n\n```javascript\n# 忽略指定文件\nHelloWrold.class\n# 忽略指定文件夹\nbin/\nbin/gen/\n```\n\n### b.通配符忽略规则\n\n通配符规则如下：\n\n```javascript\n# 忽略.class的所有文件\n*.class\n# 忽略名称中末尾为ignore的文件夹\n*ignore/\n# 忽略名称中间包含ignore的文件夹\n*ignore*/\n```\n","source":"_posts/yuque/du3fal.md","raw":"---\ntitle: 给文件添加一个.gitignore\nurlname: du3fal\ndate: 2020-05-01 19:48:14 +0800\ntags: []\ncategories: []\n---\n\n## 1.WHY?\n\n.gitignore 文件只要在这个文件中申明那些文件你不希望添加到 git 中去，这样当你使用`git add .`这些文件就会被自动忽略掉\n\n## 2.忽略文件的原则\n\n- 忽略操作系统自动生成的文件，比如缩略图等；\n- 忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如 Java 编译产生的.class 文件；\n- 忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。\n\n## 3.使用方法\n\n首先，在你的工作区新建一个名称为`.gitignore`的文件。\n然后，把要忽略的文件名填进去，Git 就会自动忽略这些文件。\n不需要从头写.gitignore 文件，GitHub 已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：[https://github.com/github/gitignore](https://link.jianshu.com?t=https://github.com/github/gitignore)\n\n## 4.例子\n\n比如你的项目是 java 项目，`.java`文件编译后会生成`.class`文件，这些文件多数情况下是不想被传到仓库中的文件。这时候你可以直接适用 github 的.gitignore 文件模板。[https://github.com/github/gitignore/blob/master/Java.gitignore](https://link.jianshu.com?t=https://github.com/github/gitignore/blob/master/Java.gitignore) 将这些忽略文件信息复制到你的.gitignore 文件中去：\n\n```\n*.class\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n# Package Files #\n*.jar\n*.war\n*.ear\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n```\n\n可以看到 github 为我们提供了最流行的.gitignore 文件配置。\n保存.ignore 文件后我们查看下 git status，检查下是否还有我们不需要的文件会被添加到 git 中去：\n\n```\n$ git status\nOn branch master\nInitial commit\nChanges to be committed:\n  (use \"git rm --cached <file>...\" to unstage)\n        new file:   .gitignore\n        new file:   HelloWorld.java\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n        Config.ini\n```\n\n比如我的项目目录下有一个 Config.ini 文件，这个是个本地配置文件我不希望上传到 git 中去，我们可以在 gitignore 文件中添加这样的配置：\n\n```javascript\nConfig.ini;\n```\n\n或者你想忽略所有的.ini 文件你可以这样写：\n\n```javascript\n*.ini\n```\n\n如果有些文件已经被你忽略了，当你使用`git add`时是无法添加的，比如我忽略了`*.class`，现在我想把`HelloWorld.class`添加到 git 中去：\n\n```javascript\n$ git add HelloWorld.class\nThe following paths are ignored by one of your .gitignore files:\nHelloWorld.class\nUse -f if you really want to add them.\n```\n\ngit 会提示我们这个文件已经被我们忽略了，需要加上`-f`参数才能强制添加到 git 中去：\n\n```javascript\n$ git status\nOn branch master\nInitial commit\nChanges to be committed:\n  (use \"git rm --cached <file>...\" to unstage)\n        new file:   .gitignore\n        new file:   HelloWorld.class\n        new file:   HelloWorld.java\n```\n\n这样就能强制添加到缓存中去了。\n如果我们意外的将想要忽略的文件添加到缓存中去了，我们可以使用`rm`命令将其从中移除：\n\n```javascript\n$ git rm HelloWorld.class --cached\nrm 'HelloWorld.class'\n```\n\n如果你已经把不想上传的文件上传到了 git 仓库，那么你必须先从远程仓库删了它，我们可以从远程仓库直接删除然后 pull 代码到本地仓库这些文件就会本删除，或者从本地删除这些文件并且在.gitignore 文件中添加这些你想忽略的文件，然后再 push 到远程仓库。\n\n## 5.查看 gitignore 规则\n\n如果你发下`.gitignore`写得有问题，需要找出来到底哪个规则写错了，可以用`git check-ignore`命令检查：\n\n```javascript\n$ git check-ignore -v HelloWorld.class\n.gitignore:1:*.class    HelloWorld.class\n```\n\n可以看到`HelloWorld.class`匹配到了我们的第一条`*.class`的忽略规则所以文件被忽略了。\n\n## 6.忽略规则文件语法\n\n### a.忽略指定文件/目录\n\n```javascript\n# 忽略指定文件\nHelloWrold.class\n# 忽略指定文件夹\nbin/\nbin/gen/\n```\n\n### b.通配符忽略规则\n\n通配符规则如下：\n\n```javascript\n# 忽略.class的所有文件\n*.class\n# 忽略名称中末尾为ignore的文件夹\n*ignore/\n# 忽略名称中间包含ignore的文件夹\n*ignore*/\n```\n","slug":"yuque/du3fal","published":1,"updated":"2020-05-04T14:22:50.687Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skraus00004jnlfu6rbfqz","content":"<h2 id=\"1-WHY\"><a href=\"#1-WHY\" class=\"headerlink\" title=\"1.WHY?\"></a>1.WHY?</h2><p>.gitignore 文件只要在这个文件中申明那些文件你不希望添加到 git 中去，这样当你使用<code>git add .</code>这些文件就会被自动忽略掉</p>\n<h2 id=\"2-忽略文件的原则\"><a href=\"#2-忽略文件的原则\" class=\"headerlink\" title=\"2.忽略文件的原则\"></a>2.忽略文件的原则</h2><ul>\n<li>忽略操作系统自动生成的文件，比如缩略图等；</li>\n<li>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如 Java 编译产生的.class 文件；</li>\n<li>忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。</li>\n</ul>\n<h2 id=\"3-使用方法\"><a href=\"#3-使用方法\" class=\"headerlink\" title=\"3.使用方法\"></a>3.使用方法</h2><p>首先，在你的工作区新建一个名称为<code>.gitignore</code>的文件。<br>然后，把要忽略的文件名填进去，Git 就会自动忽略这些文件。<br>不需要从头写.gitignore 文件，GitHub 已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：<a href=\"https://link.jianshu.com?t=https://github.com/github/gitignore\" target=\"_blank\" rel=\"noopener\">https://github.com/github/gitignore</a></p>\n<h2 id=\"4-例子\"><a href=\"#4-例子\" class=\"headerlink\" title=\"4.例子\"></a>4.例子</h2><p>比如你的项目是 java 项目，<code>.java</code>文件编译后会生成<code>.class</code>文件，这些文件多数情况下是不想被传到仓库中的文件。这时候你可以直接适用 github 的.gitignore 文件模板。<a href=\"https://link.jianshu.com?t=https://github.com/github/gitignore/blob/master/Java.gitignore\" target=\"_blank\" rel=\"noopener\">https://github.com/github/gitignore/blob/master/Java.gitignore</a> 将这些忽略文件信息复制到你的.gitignore 文件中去：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.class</span><br><span class=\"line\"># Mobile Tools for Java (J2ME)</span><br><span class=\"line\">.mtj.tmp&#x2F;</span><br><span class=\"line\"># Package Files #</span><br><span class=\"line\">*.jar</span><br><span class=\"line\">*.war</span><br><span class=\"line\">*.ear</span><br><span class=\"line\"># virtual machine crash logs, see http:&#x2F;&#x2F;www.java.com&#x2F;en&#x2F;download&#x2F;help&#x2F;error_hotspot.xml</span><br><span class=\"line\">hs_err_pid*</span><br></pre></td></tr></table></figure>\n\n<p>可以看到 github 为我们提供了最流行的.gitignore 文件配置。<br>保存.ignore 文件后我们查看下 git status，检查下是否还有我们不需要的文件会被添加到 git 中去：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Initial commit</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\">        new file:   .gitignore</span><br><span class=\"line\">        new file:   HelloWorld.java</span><br><span class=\"line\">Untracked files:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class=\"line\">        Config.ini</span><br></pre></td></tr></table></figure>\n\n<p>比如我的项目目录下有一个 Config.ini 文件，这个是个本地配置文件我不希望上传到 git 中去，我们可以在 gitignore 文件中添加这样的配置：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Config.ini;</span><br></pre></td></tr></table></figure>\n\n<p>或者你想忽略所有的.ini 文件你可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.ini</span><br></pre></td></tr></table></figure>\n\n<p>如果有些文件已经被你忽略了，当你使用<code>git add</code>时是无法添加的，比如我忽略了<code>*.class</code>，现在我想把<code>HelloWorld.class</code>添加到 git 中去：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add HelloWorld.class</span><br><span class=\"line\">The following paths are ignored by one <span class=\"keyword\">of</span> your .gitignore files:</span><br><span class=\"line\">HelloWorld.class</span><br><span class=\"line\">Use -f <span class=\"keyword\">if</span> you really want to add them.</span><br></pre></td></tr></table></figure>\n\n<p>git 会提示我们这个文件已经被我们忽略了，需要加上<code>-f</code>参数才能强制添加到 git 中去：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Initial commit</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use <span class=\"string\">\"git rm --cached &lt;file&gt;...\"</span> to unstage)</span><br><span class=\"line\">        <span class=\"keyword\">new</span> file:   .gitignore</span><br><span class=\"line\">        <span class=\"keyword\">new</span> file:   HelloWorld.class</span><br><span class=\"line\">        <span class=\"keyword\">new</span> file:   HelloWorld.java</span><br></pre></td></tr></table></figure>\n\n<p>这样就能强制添加到缓存中去了。<br>如果我们意外的将想要忽略的文件添加到缓存中去了，我们可以使用<code>rm</code>命令将其从中移除：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git rm HelloWorld.class --cached</span><br><span class=\"line\">rm <span class=\"string\">'HelloWorld.class'</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你已经把不想上传的文件上传到了 git 仓库，那么你必须先从远程仓库删了它，我们可以从远程仓库直接删除然后 pull 代码到本地仓库这些文件就会本删除，或者从本地删除这些文件并且在.gitignore 文件中添加这些你想忽略的文件，然后再 push 到远程仓库。</p>\n<h2 id=\"5-查看-gitignore-规则\"><a href=\"#5-查看-gitignore-规则\" class=\"headerlink\" title=\"5.查看 gitignore 规则\"></a>5.查看 gitignore 规则</h2><p>如果你发下<code>.gitignore</code>写得有问题，需要找出来到底哪个规则写错了，可以用<code>git check-ignore</code>命令检查：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git check-ignore -v HelloWorld.class</span><br><span class=\"line\">.gitignore:<span class=\"number\">1</span>:*.class    HelloWorld.class</span><br></pre></td></tr></table></figure>\n\n<p>可以看到<code>HelloWorld.class</code>匹配到了我们的第一条<code>*.class</code>的忽略规则所以文件被忽略了。</p>\n<h2 id=\"6-忽略规则文件语法\"><a href=\"#6-忽略规则文件语法\" class=\"headerlink\" title=\"6.忽略规则文件语法\"></a>6.忽略规则文件语法</h2><h3 id=\"a-忽略指定文件-目录\"><a href=\"#a-忽略指定文件-目录\" class=\"headerlink\" title=\"a.忽略指定文件/目录\"></a>a.忽略指定文件/目录</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 忽略指定文件</span><br><span class=\"line\">HelloWrold.class</span><br><span class=\"line\"># 忽略指定文件夹</span><br><span class=\"line\">bin/</span><br><span class=\"line\">bin/gen/</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"b-通配符忽略规则\"><a href=\"#b-通配符忽略规则\" class=\"headerlink\" title=\"b.通配符忽略规则\"></a>b.通配符忽略规则</h3><p>通配符规则如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 忽略.class的所有文件</span><br><span class=\"line\">*.class</span><br><span class=\"line\"># 忽略名称中末尾为ignore的文件夹</span><br><span class=\"line\">*ignore/</span><br><span class=\"line\"># 忽略名称中间包含ignore的文件夹</span><br><span class=\"line\">*ignore*<span class=\"regexp\">/</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h2 id=\"1-WHY\"><a href=\"#1-WHY\" class=\"headerlink\" title=\"1.WHY?\"></a>1.WHY?</h2><p>.gitignore 文件只要在这个文件中申明那些文件你不希望添加到 git 中去，这样当你使用<code>git add .</code>这些文件就会被自动忽略掉</p>\n<h2 id=\"2-忽略文件的原则\"><a href=\"#2-忽略文件的原则\" class=\"headerlink\" title=\"2.忽略文件的原则\"></a>2.忽略文件的原则</h2><ul>\n<li>忽略操作系统自动生成的文件，比如缩略图等；</li>\n<li>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如 Java 编译产生的.class 文件；</li>\n<li>忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。</li>\n</ul>\n<h2 id=\"3-使用方法\"><a href=\"#3-使用方法\" class=\"headerlink\" title=\"3.使用方法\"></a>3.使用方法</h2><p>首先，在你的工作区新建一个名称为<code>.gitignore</code>的文件。<br>然后，把要忽略的文件名填进去，Git 就会自动忽略这些文件。<br>不需要从头写.gitignore 文件，GitHub 已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：<a href=\"https://link.jianshu.com?t=https://github.com/github/gitignore\" target=\"_blank\" rel=\"noopener\">https://github.com/github/gitignore</a></p>\n<h2 id=\"4-例子\"><a href=\"#4-例子\" class=\"headerlink\" title=\"4.例子\"></a>4.例子</h2><p>比如你的项目是 java 项目，<code>.java</code>文件编译后会生成<code>.class</code>文件，这些文件多数情况下是不想被传到仓库中的文件。这时候你可以直接适用 github 的.gitignore 文件模板。<a href=\"https://link.jianshu.com?t=https://github.com/github/gitignore/blob/master/Java.gitignore\" target=\"_blank\" rel=\"noopener\">https://github.com/github/gitignore/blob/master/Java.gitignore</a> 将这些忽略文件信息复制到你的.gitignore 文件中去：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.class</span><br><span class=\"line\"># Mobile Tools for Java (J2ME)</span><br><span class=\"line\">.mtj.tmp&#x2F;</span><br><span class=\"line\"># Package Files #</span><br><span class=\"line\">*.jar</span><br><span class=\"line\">*.war</span><br><span class=\"line\">*.ear</span><br><span class=\"line\"># virtual machine crash logs, see http:&#x2F;&#x2F;www.java.com&#x2F;en&#x2F;download&#x2F;help&#x2F;error_hotspot.xml</span><br><span class=\"line\">hs_err_pid*</span><br></pre></td></tr></table></figure>\n\n<p>可以看到 github 为我们提供了最流行的.gitignore 文件配置。<br>保存.ignore 文件后我们查看下 git status，检查下是否还有我们不需要的文件会被添加到 git 中去：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Initial commit</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)</span><br><span class=\"line\">        new file:   .gitignore</span><br><span class=\"line\">        new file:   HelloWorld.java</span><br><span class=\"line\">Untracked files:</span><br><span class=\"line\">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class=\"line\">        Config.ini</span><br></pre></td></tr></table></figure>\n\n<p>比如我的项目目录下有一个 Config.ini 文件，这个是个本地配置文件我不希望上传到 git 中去，我们可以在 gitignore 文件中添加这样的配置：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Config.ini;</span><br></pre></td></tr></table></figure>\n\n<p>或者你想忽略所有的.ini 文件你可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*.ini</span><br></pre></td></tr></table></figure>\n\n<p>如果有些文件已经被你忽略了，当你使用<code>git add</code>时是无法添加的，比如我忽略了<code>*.class</code>，现在我想把<code>HelloWorld.class</code>添加到 git 中去：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add HelloWorld.class</span><br><span class=\"line\">The following paths are ignored by one <span class=\"keyword\">of</span> your .gitignore files:</span><br><span class=\"line\">HelloWorld.class</span><br><span class=\"line\">Use -f <span class=\"keyword\">if</span> you really want to add them.</span><br></pre></td></tr></table></figure>\n\n<p>git 会提示我们这个文件已经被我们忽略了，需要加上<code>-f</code>参数才能强制添加到 git 中去：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Initial commit</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use <span class=\"string\">\"git rm --cached &lt;file&gt;...\"</span> to unstage)</span><br><span class=\"line\">        <span class=\"keyword\">new</span> file:   .gitignore</span><br><span class=\"line\">        <span class=\"keyword\">new</span> file:   HelloWorld.class</span><br><span class=\"line\">        <span class=\"keyword\">new</span> file:   HelloWorld.java</span><br></pre></td></tr></table></figure>\n\n<p>这样就能强制添加到缓存中去了。<br>如果我们意外的将想要忽略的文件添加到缓存中去了，我们可以使用<code>rm</code>命令将其从中移除：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git rm HelloWorld.class --cached</span><br><span class=\"line\">rm <span class=\"string\">'HelloWorld.class'</span></span><br></pre></td></tr></table></figure>\n\n<p>如果你已经把不想上传的文件上传到了 git 仓库，那么你必须先从远程仓库删了它，我们可以从远程仓库直接删除然后 pull 代码到本地仓库这些文件就会本删除，或者从本地删除这些文件并且在.gitignore 文件中添加这些你想忽略的文件，然后再 push 到远程仓库。</p>\n<h2 id=\"5-查看-gitignore-规则\"><a href=\"#5-查看-gitignore-规则\" class=\"headerlink\" title=\"5.查看 gitignore 规则\"></a>5.查看 gitignore 规则</h2><p>如果你发下<code>.gitignore</code>写得有问题，需要找出来到底哪个规则写错了，可以用<code>git check-ignore</code>命令检查：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git check-ignore -v HelloWorld.class</span><br><span class=\"line\">.gitignore:<span class=\"number\">1</span>:*.class    HelloWorld.class</span><br></pre></td></tr></table></figure>\n\n<p>可以看到<code>HelloWorld.class</code>匹配到了我们的第一条<code>*.class</code>的忽略规则所以文件被忽略了。</p>\n<h2 id=\"6-忽略规则文件语法\"><a href=\"#6-忽略规则文件语法\" class=\"headerlink\" title=\"6.忽略规则文件语法\"></a>6.忽略规则文件语法</h2><h3 id=\"a-忽略指定文件-目录\"><a href=\"#a-忽略指定文件-目录\" class=\"headerlink\" title=\"a.忽略指定文件/目录\"></a>a.忽略指定文件/目录</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 忽略指定文件</span><br><span class=\"line\">HelloWrold.class</span><br><span class=\"line\"># 忽略指定文件夹</span><br><span class=\"line\">bin/</span><br><span class=\"line\">bin/gen/</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"b-通配符忽略规则\"><a href=\"#b-通配符忽略规则\" class=\"headerlink\" title=\"b.通配符忽略规则\"></a>b.通配符忽略规则</h3><p>通配符规则如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 忽略.class的所有文件</span><br><span class=\"line\">*.class</span><br><span class=\"line\"># 忽略名称中末尾为ignore的文件夹</span><br><span class=\"line\">*ignore/</span><br><span class=\"line\"># 忽略名称中间包含ignore的文件夹</span><br><span class=\"line\">*ignore*<span class=\"regexp\">/</span></span><br></pre></td></tr></table></figure>\n"},{"title":"4&gt;mac 上使用 vi","urlname":"ee03pk","date":"2020-05-01T03:20:53.000Z","_content":"\n上一篇博客提到 mac 进入 vi 编辑界面，复制 ssh key。这篇就是介绍如何保存退出 vi。\n\n如果是 vi，则：\n**Esc** 退出编辑模式，输入以下命令：\n**:wq** 保存后退出 vi，若为 :wq! 则为强制储存后退出（常用）\n**:w** 保存但不退出（常用）\n**:w!** 若文件属性为『只读』时，强制写入该档案\n**:q** 离开 vi （常用）\n**:q!** 若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。\n**:e!** 将档案还原到最原始的状态！\n","source":"_posts/yuque/ee03pk.md","raw":"---\ntitle: 4&gt;mac 上使用 vi\nurlname: ee03pk\ndate: 2020-05-01 11:20:53 +0800\ntags: []\ncategories: []\n---\n\n上一篇博客提到 mac 进入 vi 编辑界面，复制 ssh key。这篇就是介绍如何保存退出 vi。\n\n如果是 vi，则：\n**Esc** 退出编辑模式，输入以下命令：\n**:wq** 保存后退出 vi，若为 :wq! 则为强制储存后退出（常用）\n**:w** 保存但不退出（常用）\n**:w!** 若文件属性为『只读』时，强制写入该档案\n**:q** 离开 vi （常用）\n**:q!** 若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。\n**:e!** 将档案还原到最原始的状态！\n","slug":"yuque/ee03pk","published":1,"updated":"2020-05-04T14:22:50.913Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skrauz00014jnl5xls6kkx","content":"<p>上一篇博客提到 mac 进入 vi 编辑界面，复制 ssh key。这篇就是介绍如何保存退出 vi。</p>\n<p>如果是 vi，则：<br><strong>Esc</strong> 退出编辑模式，输入以下命令：<br><strong>:wq</strong> 保存后退出 vi，若为 :wq! 则为强制储存后退出（常用）<br><strong>:w</strong> 保存但不退出（常用）<br><strong>:w!</strong> 若文件属性为『只读』时，强制写入该档案<br><strong>:q</strong> 离开 vi （常用）<br><strong>:q!</strong> 若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。<br><strong>:e!</strong> 将档案还原到最原始的状态！</p>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<p>上一篇博客提到 mac 进入 vi 编辑界面，复制 ssh key。这篇就是介绍如何保存退出 vi。</p>\n<p>如果是 vi，则：<br><strong>Esc</strong> 退出编辑模式，输入以下命令：<br><strong>:wq</strong> 保存后退出 vi，若为 :wq! 则为强制储存后退出（常用）<br><strong>:w</strong> 保存但不退出（常用）<br><strong>:w!</strong> 若文件属性为『只读』时，强制写入该档案<br><strong>:q</strong> 离开 vi （常用）<br><strong>:q!</strong> 若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。<br><strong>:e!</strong> 将档案还原到最原始的状态！</p>\n"},{"title":"5&gt;hexo文档部署到 Github和 coding","urlname":"diqcug","date":"2020-05-01T06:05:53.000Z","_content":"\n## 1：打开项目根目录下的 \\_config.yml 配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588313278812-df6c1515-c7b2-4988-ab07-98655129341a.png#align=left&display=inline&height=144&margin=%5Bobject%20Object%5D&name=image.png&originHeight=288&originWidth=1052&size=44477&status=done&style=none&width=526)\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588333533439-ce902a29-c0fc-49e0-90a7-90e71ce9c3aa.png#align=left&display=inline&height=120&margin=%5Bobject%20Object%5D&name=image.png&originHeight=240&originWidth=972&size=33032&status=done&style=none&width=486)\n如果不部署到 coding，就只写 github 就行。\n\n```javascript\ndeploy: type: git;\nrepo: github: //github.com/Leader755/leader755.github.io.git\nhttps: coding: //e.coding.net/Leader755/leader755.coding.git\nhttps: branch: master;\n```\n\n## 2：要安装一个部署插件 [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)。\n\n```javascript\nnpm install hexo-deployer-git --save\n```\n\n## 3：发布到 github\n\n最后执行以下命令就可以部署上传啦，以下 g 是 generate 缩写，d 是 deploy 缩写：\n\n```javascript\nhexo g -d\n```\n\n稍等一会，在浏览器访问网址： [https://你的用户名.github.io](https://xn--6qqv7i14ofosyrb.github.io/) 就会看到你的博客啦！！\n\n## 4.写作并发布\n\n### 1.直接写作（情况）\n\n博客搭好了，就开始写文章了，这里简单介绍一下，详细的文档可以看 [hexo](https://hexo.io/zh-cn/) 官网。\n新建文章，输入以下命令即可\n\n```javascript\nhexo new '文章标题'\n```\n\n执行完成后可以在 /source/\\_posts 下看到一个“文章标题.md”的文章文件啦。.md 就是 Markdown 格式的文件，具体用法可以在网上找一下，语法还是比较简单的。\n在 Markdown 文章里面输入你的文章内容\n\n### 2.存查稿(情况)\n\n#### 1.首先查看 sources 文件下是否有\\_drafts 文件夹\n\n**  \\_drafts(草稿文章缓存区)，\\_posts(正式文章缓存区)**\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588313764893-f9511ad0-1933-4c23-becd-bc162c0e8f3e.png#align=left&display=inline&height=149&margin=%5Bobject%20Object%5D&name=image.png&originHeight=298&originWidth=782&size=24987&status=done&style=none&width=391)\n\n如果没有该文件夹或者报错，则运行：\n\n```javascript\nhexo new draft \"My First Blog Post\"\n```\n\n#### 2.将草稿文章推送到正式区\n\n```javascript\nhexo publish \"My First Blog Post\"\n```\n\n### 2.打包\n\n```javascript\nhexo g\n```\n\n### 3.运行本地 hexo\n\n```javascript\nhexo s\n```\n\n### 4.部署到 github 和 coding\n\n因为 github 和 coding 使用了同一个公钥，所以推送时会触发多个仓库。\n\n```javascript\n//部署前先清理一下缓存命令\nhexo clean\n\n//部署\nhexo g -d\n```\n","source":"_posts/yuque/diqcug.md","raw":"---\ntitle: 5&gt;hexo文档部署到 Github和 coding\nurlname: diqcug\ndate: 2020-05-01 14:05:53 +0800\ntags: []\ncategories: []\n---\n\n## 1：打开项目根目录下的 \\_config.yml 配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588313278812-df6c1515-c7b2-4988-ab07-98655129341a.png#align=left&display=inline&height=144&margin=%5Bobject%20Object%5D&name=image.png&originHeight=288&originWidth=1052&size=44477&status=done&style=none&width=526)\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588333533439-ce902a29-c0fc-49e0-90a7-90e71ce9c3aa.png#align=left&display=inline&height=120&margin=%5Bobject%20Object%5D&name=image.png&originHeight=240&originWidth=972&size=33032&status=done&style=none&width=486)\n如果不部署到 coding，就只写 github 就行。\n\n```javascript\ndeploy: type: git;\nrepo: github: //github.com/Leader755/leader755.github.io.git\nhttps: coding: //e.coding.net/Leader755/leader755.coding.git\nhttps: branch: master;\n```\n\n## 2：要安装一个部署插件 [hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)。\n\n```javascript\nnpm install hexo-deployer-git --save\n```\n\n## 3：发布到 github\n\n最后执行以下命令就可以部署上传啦，以下 g 是 generate 缩写，d 是 deploy 缩写：\n\n```javascript\nhexo g -d\n```\n\n稍等一会，在浏览器访问网址： [https://你的用户名.github.io](https://xn--6qqv7i14ofosyrb.github.io/) 就会看到你的博客啦！！\n\n## 4.写作并发布\n\n### 1.直接写作（情况）\n\n博客搭好了，就开始写文章了，这里简单介绍一下，详细的文档可以看 [hexo](https://hexo.io/zh-cn/) 官网。\n新建文章，输入以下命令即可\n\n```javascript\nhexo new '文章标题'\n```\n\n执行完成后可以在 /source/\\_posts 下看到一个“文章标题.md”的文章文件啦。.md 就是 Markdown 格式的文件，具体用法可以在网上找一下，语法还是比较简单的。\n在 Markdown 文章里面输入你的文章内容\n\n### 2.存查稿(情况)\n\n#### 1.首先查看 sources 文件下是否有\\_drafts 文件夹\n\n**  \\_drafts(草稿文章缓存区)，\\_posts(正式文章缓存区)**\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588313764893-f9511ad0-1933-4c23-becd-bc162c0e8f3e.png#align=left&display=inline&height=149&margin=%5Bobject%20Object%5D&name=image.png&originHeight=298&originWidth=782&size=24987&status=done&style=none&width=391)\n\n如果没有该文件夹或者报错，则运行：\n\n```javascript\nhexo new draft \"My First Blog Post\"\n```\n\n#### 2.将草稿文章推送到正式区\n\n```javascript\nhexo publish \"My First Blog Post\"\n```\n\n### 2.打包\n\n```javascript\nhexo g\n```\n\n### 3.运行本地 hexo\n\n```javascript\nhexo s\n```\n\n### 4.部署到 github 和 coding\n\n因为 github 和 coding 使用了同一个公钥，所以推送时会触发多个仓库。\n\n```javascript\n//部署前先清理一下缓存命令\nhexo clean\n\n//部署\nhexo g -d\n```\n","slug":"yuque/diqcug","published":1,"updated":"2020-05-04T14:22:50.904Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skrav100024jnl29w854cl","content":"<h2 id=\"1：打开项目根目录下的-config-yml-配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：\"><a href=\"#1：打开项目根目录下的-config-yml-配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：\" class=\"headerlink\" title=\"1：打开项目根目录下的 _config.yml 配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：\"></a>1：打开项目根目录下的 _config.yml 配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588313278812-df6c1515-c7b2-4988-ab07-98655129341a.png#align=left&display=inline&height=144&margin=%5Bobject%20Object%5D&name=image.png&originHeight=288&originWidth=1052&size=44477&status=done&style=none&width=526\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588333533439-ce902a29-c0fc-49e0-90a7-90e71ce9c3aa.png#align=left&display=inline&height=120&margin=%5Bobject%20Object%5D&name=image.png&originHeight=240&originWidth=972&size=33032&status=done&style=none&width=486\" alt=\"image.png\"><br>如果不部署到 coding，就只写 github 就行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy: type: git;</span><br><span class=\"line\">repo: github: <span class=\"comment\">//github.com/Leader755/leader755.github.io.git</span></span><br><span class=\"line\">https: coding: <span class=\"comment\">//e.coding.net/Leader755/leader755.coding.git</span></span><br><span class=\"line\">https: branch: master;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2：要安装一个部署插件-hexo-deployer-git。\"><a href=\"#2：要安装一个部署插件-hexo-deployer-git。\" class=\"headerlink\" title=\"2：要安装一个部署插件 hexo-deployer-git。\"></a>2：要安装一个部署插件 <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>。</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3：发布到-github\"><a href=\"#3：发布到-github\" class=\"headerlink\" title=\"3：发布到 github\"></a>3：发布到 github</h2><p>最后执行以下命令就可以部署上传啦，以下 g 是 generate 缩写，d 是 deploy 缩写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n\n<p>稍等一会，在浏览器访问网址： <a href=\"https://xn--6qqv7i14ofosyrb.github.io/\" target=\"_blank\" rel=\"noopener\">https://你的用户名.github.io</a> 就会看到你的博客啦！！</p>\n<h2 id=\"4-写作并发布\"><a href=\"#4-写作并发布\" class=\"headerlink\" title=\"4.写作并发布\"></a>4.写作并发布</h2><h3 id=\"1-直接写作（情况）\"><a href=\"#1-直接写作（情况）\" class=\"headerlink\" title=\"1.直接写作（情况）\"></a>1.直接写作（情况）</h3><p>博客搭好了，就开始写文章了，这里简单介绍一下，详细的文档可以看 <a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">hexo</a> 官网。<br>新建文章，输入以下命令即可</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo <span class=\"keyword\">new</span> <span class=\"string\">'文章标题'</span></span><br></pre></td></tr></table></figure>\n\n<p>执行完成后可以在 /source/_posts 下看到一个“文章标题.md”的文章文件啦。.md 就是 Markdown 格式的文件，具体用法可以在网上找一下，语法还是比较简单的。<br>在 Markdown 文章里面输入你的文章内容</p>\n<h3 id=\"2-存查稿-情况\"><a href=\"#2-存查稿-情况\" class=\"headerlink\" title=\"2.存查稿(情况)\"></a>2.存查稿(情况)</h3><h4 id=\"1-首先查看-sources-文件下是否有-drafts-文件夹\"><a href=\"#1-首先查看-sources-文件下是否有-drafts-文件夹\" class=\"headerlink\" title=\"1.首先查看 sources 文件下是否有_drafts 文件夹\"></a>1.首先查看 sources 文件下是否有_drafts 文件夹</h4><p>**  _drafts(草稿文章缓存区)，_posts(正式文章缓存区)**<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588313764893-f9511ad0-1933-4c23-becd-bc162c0e8f3e.png#align=left&display=inline&height=149&margin=%5Bobject%20Object%5D&name=image.png&originHeight=298&originWidth=782&size=24987&status=done&style=none&width=391\" alt=\"image.png\"></p>\n<p>如果没有该文件夹或者报错，则运行：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo <span class=\"keyword\">new</span> draft <span class=\"string\">\"My First Blog Post\"</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-将草稿文章推送到正式区\"><a href=\"#2-将草稿文章推送到正式区\" class=\"headerlink\" title=\"2.将草稿文章推送到正式区\"></a>2.将草稿文章推送到正式区</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo publish <span class=\"string\">\"My First Blog Post\"</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-打包\"><a href=\"#2-打包\" class=\"headerlink\" title=\"2.打包\"></a>2.打包</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-运行本地-hexo\"><a href=\"#3-运行本地-hexo\" class=\"headerlink\" title=\"3.运行本地 hexo\"></a>3.运行本地 hexo</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-部署到-github-和-coding\"><a href=\"#4-部署到-github-和-coding\" class=\"headerlink\" title=\"4.部署到 github 和 coding\"></a>4.部署到 github 和 coding</h3><p>因为 github 和 coding 使用了同一个公钥，所以推送时会触发多个仓库。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//部署前先清理一下缓存命令</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//部署</span></span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h2 id=\"1：打开项目根目录下的-config-yml-配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：\"><a href=\"#1：打开项目根目录下的-config-yml-配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：\" class=\"headerlink\" title=\"1：打开项目根目录下的 _config.yml 配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：\"></a>1：打开项目根目录下的 _config.yml 配置文件配置参数。拉到文件末尾，填上如下配置（也可同时部署到多个仓库，后面再说）：</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588313278812-df6c1515-c7b2-4988-ab07-98655129341a.png#align=left&display=inline&height=144&margin=%5Bobject%20Object%5D&name=image.png&originHeight=288&originWidth=1052&size=44477&status=done&style=none&width=526\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588333533439-ce902a29-c0fc-49e0-90a7-90e71ce9c3aa.png#align=left&display=inline&height=120&margin=%5Bobject%20Object%5D&name=image.png&originHeight=240&originWidth=972&size=33032&status=done&style=none&width=486\" alt=\"image.png\"><br>如果不部署到 coding，就只写 github 就行。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy: type: git;</span><br><span class=\"line\">repo: github: <span class=\"comment\">//github.com/Leader755/leader755.github.io.git</span></span><br><span class=\"line\">https: coding: <span class=\"comment\">//e.coding.net/Leader755/leader755.coding.git</span></span><br><span class=\"line\">https: branch: master;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2：要安装一个部署插件-hexo-deployer-git。\"><a href=\"#2：要安装一个部署插件-hexo-deployer-git。\" class=\"headerlink\" title=\"2：要安装一个部署插件 hexo-deployer-git。\"></a>2：要安装一个部署插件 <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"noopener\">hexo-deployer-git</a>。</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3：发布到-github\"><a href=\"#3：发布到-github\" class=\"headerlink\" title=\"3：发布到 github\"></a>3：发布到 github</h2><p>最后执行以下命令就可以部署上传啦，以下 g 是 generate 缩写，d 是 deploy 缩写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n\n<p>稍等一会，在浏览器访问网址： <a href=\"https://xn--6qqv7i14ofosyrb.github.io/\" target=\"_blank\" rel=\"noopener\">https://你的用户名.github.io</a> 就会看到你的博客啦！！</p>\n<h2 id=\"4-写作并发布\"><a href=\"#4-写作并发布\" class=\"headerlink\" title=\"4.写作并发布\"></a>4.写作并发布</h2><h3 id=\"1-直接写作（情况）\"><a href=\"#1-直接写作（情况）\" class=\"headerlink\" title=\"1.直接写作（情况）\"></a>1.直接写作（情况）</h3><p>博客搭好了，就开始写文章了，这里简单介绍一下，详细的文档可以看 <a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">hexo</a> 官网。<br>新建文章，输入以下命令即可</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo <span class=\"keyword\">new</span> <span class=\"string\">'文章标题'</span></span><br></pre></td></tr></table></figure>\n\n<p>执行完成后可以在 /source/_posts 下看到一个“文章标题.md”的文章文件啦。.md 就是 Markdown 格式的文件，具体用法可以在网上找一下，语法还是比较简单的。<br>在 Markdown 文章里面输入你的文章内容</p>\n<h3 id=\"2-存查稿-情况\"><a href=\"#2-存查稿-情况\" class=\"headerlink\" title=\"2.存查稿(情况)\"></a>2.存查稿(情况)</h3><h4 id=\"1-首先查看-sources-文件下是否有-drafts-文件夹\"><a href=\"#1-首先查看-sources-文件下是否有-drafts-文件夹\" class=\"headerlink\" title=\"1.首先查看 sources 文件下是否有_drafts 文件夹\"></a>1.首先查看 sources 文件下是否有_drafts 文件夹</h4><p>**  _drafts(草稿文章缓存区)，_posts(正式文章缓存区)**<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588313764893-f9511ad0-1933-4c23-becd-bc162c0e8f3e.png#align=left&display=inline&height=149&margin=%5Bobject%20Object%5D&name=image.png&originHeight=298&originWidth=782&size=24987&status=done&style=none&width=391\" alt=\"image.png\"></p>\n<p>如果没有该文件夹或者报错，则运行：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo <span class=\"keyword\">new</span> draft <span class=\"string\">\"My First Blog Post\"</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-将草稿文章推送到正式区\"><a href=\"#2-将草稿文章推送到正式区\" class=\"headerlink\" title=\"2.将草稿文章推送到正式区\"></a>2.将草稿文章推送到正式区</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo publish <span class=\"string\">\"My First Blog Post\"</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-打包\"><a href=\"#2-打包\" class=\"headerlink\" title=\"2.打包\"></a>2.打包</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-运行本地-hexo\"><a href=\"#3-运行本地-hexo\" class=\"headerlink\" title=\"3.运行本地 hexo\"></a>3.运行本地 hexo</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-部署到-github-和-coding\"><a href=\"#4-部署到-github-和-coding\" class=\"headerlink\" title=\"4.部署到 github 和 coding\"></a>4.部署到 github 和 coding</h3><p>因为 github 和 coding 使用了同一个公钥，所以推送时会触发多个仓库。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//部署前先清理一下缓存命令</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//部署</span></span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n"},{"title":"1&gt;搭建本地的 hexo 的博客","urlname":"dqugvo","date":"2020-04-30T15:44:24.000Z","_content":"\n## 1>官方文档   [https://github.com/hexojs/hexo](https://github.com/hexojs/hexo)\n\n## 2>搭建博客\n\n### 1.全局安装 hexo，创建博客\n\n```javascript\nnpm install hexo-cli -g\n```\n\n### 2.初始化\n\n```javascript\nhexo init blog\n```\n\n### 3.启动本地 hexo-server\n\n```javascript\nhexo server\n```\n\n## 4.新建一个 hexo 博客，富文本 makedown 文档\n\n```javascript\n$ hexo new \"Hello Hexo\"\n```\n\n## 5.打包发布到 hexo\n\n```\n//打包发布 hexo\nhexo generate\n\n\n//重启服务(可以看到新增的文档)\nhexo server\n\n```\n\n## 6.packge.json 的命令行（备份文件）\n\n```javascript\n\"scripts\": {\n    \"build\": \"hexo generate\",\n    \"clean\": \"hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"server\": \"hexo server\"\n  },\n```\n","source":"_posts/yuque/dqugvo.md","raw":"---\ntitle: 1&gt;搭建本地的 hexo 的博客\nurlname: dqugvo\ndate: 2020-04-30 23:44:24 +0800\ntags: []\ncategories: []\n---\n\n## 1>官方文档   [https://github.com/hexojs/hexo](https://github.com/hexojs/hexo)\n\n## 2>搭建博客\n\n### 1.全局安装 hexo，创建博客\n\n```javascript\nnpm install hexo-cli -g\n```\n\n### 2.初始化\n\n```javascript\nhexo init blog\n```\n\n### 3.启动本地 hexo-server\n\n```javascript\nhexo server\n```\n\n## 4.新建一个 hexo 博客，富文本 makedown 文档\n\n```javascript\n$ hexo new \"Hello Hexo\"\n```\n\n## 5.打包发布到 hexo\n\n```\n//打包发布 hexo\nhexo generate\n\n\n//重启服务(可以看到新增的文档)\nhexo server\n\n```\n\n## 6.packge.json 的命令行（备份文件）\n\n```javascript\n\"scripts\": {\n    \"build\": \"hexo generate\",\n    \"clean\": \"hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"server\": \"hexo server\"\n  },\n```\n","slug":"yuque/dqugvo","published":1,"updated":"2020-05-04T14:22:50.962Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skrav200034jnlc3cc3ylr","content":"<h2 id=\"1-gt-官方文档-https-github-com-hexojs-hexo\"><a href=\"#1-gt-官方文档-https-github-com-hexojs-hexo\" class=\"headerlink\" title=\"1&gt;官方文档   https://github.com/hexojs/hexo\"></a>1&gt;官方文档   <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo</a></h2><h2 id=\"2-gt-搭建博客\"><a href=\"#2-gt-搭建博客\" class=\"headerlink\" title=\"2&gt;搭建博客\"></a>2&gt;搭建博客</h2><h3 id=\"1-全局安装-hexo，创建博客\"><a href=\"#1-全局安装-hexo，创建博客\" class=\"headerlink\" title=\"1.全局安装 hexo，创建博客\"></a>1.全局安装 hexo，创建博客</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-初始化\"><a href=\"#2-初始化\" class=\"headerlink\" title=\"2.初始化\"></a>2.初始化</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-启动本地-hexo-server\"><a href=\"#3-启动本地-hexo-server\" class=\"headerlink\" title=\"3.启动本地 hexo-server\"></a>3.启动本地 hexo-server</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-新建一个-hexo-博客，富文本-makedown-文档\"><a href=\"#4-新建一个-hexo-博客，富文本-makedown-文档\" class=\"headerlink\" title=\"4.新建一个 hexo 博客，富文本 makedown 文档\"></a>4.新建一个 hexo 博客，富文本 makedown 文档</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo <span class=\"keyword\">new</span> <span class=\"string\">\"Hello Hexo\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-打包发布到-hexo\"><a href=\"#5-打包发布到-hexo\" class=\"headerlink\" title=\"5.打包发布到 hexo\"></a>5.打包发布到 hexo</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;打包发布 hexo</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;重启服务(可以看到新增的文档)</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-packge-json-的命令行（备份文件）\"><a href=\"#6-packge-json-的命令行（备份文件）\" class=\"headerlink\" title=\"6.packge.json 的命令行（备份文件）\"></a>6.packge.json 的命令行（备份文件）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"hexo generate\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"clean\"</span>: <span class=\"string\">\"hexo clean\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"deploy\"</span>: <span class=\"string\">\"hexo deploy\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>: <span class=\"string\">\"hexo server\"</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h2 id=\"1-gt-官方文档-https-github-com-hexojs-hexo\"><a href=\"#1-gt-官方文档-https-github-com-hexojs-hexo\" class=\"headerlink\" title=\"1&gt;官方文档   https://github.com/hexojs/hexo\"></a>1&gt;官方文档   <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">https://github.com/hexojs/hexo</a></h2><h2 id=\"2-gt-搭建博客\"><a href=\"#2-gt-搭建博客\" class=\"headerlink\" title=\"2&gt;搭建博客\"></a>2&gt;搭建博客</h2><h3 id=\"1-全局安装-hexo，创建博客\"><a href=\"#1-全局安装-hexo，创建博客\" class=\"headerlink\" title=\"1.全局安装 hexo，创建博客\"></a>1.全局安装 hexo，创建博客</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-初始化\"><a href=\"#2-初始化\" class=\"headerlink\" title=\"2.初始化\"></a>2.初始化</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-启动本地-hexo-server\"><a href=\"#3-启动本地-hexo-server\" class=\"headerlink\" title=\"3.启动本地 hexo-server\"></a>3.启动本地 hexo-server</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-新建一个-hexo-博客，富文本-makedown-文档\"><a href=\"#4-新建一个-hexo-博客，富文本-makedown-文档\" class=\"headerlink\" title=\"4.新建一个 hexo 博客，富文本 makedown 文档\"></a>4.新建一个 hexo 博客，富文本 makedown 文档</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo <span class=\"keyword\">new</span> <span class=\"string\">\"Hello Hexo\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-打包发布到-hexo\"><a href=\"#5-打包发布到-hexo\" class=\"headerlink\" title=\"5.打包发布到 hexo\"></a>5.打包发布到 hexo</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;打包发布 hexo</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;重启服务(可以看到新增的文档)</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-packge-json-的命令行（备份文件）\"><a href=\"#6-packge-json-的命令行（备份文件）\" class=\"headerlink\" title=\"6.packge.json 的命令行（备份文件）\"></a>6.packge.json 的命令行（备份文件）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"hexo generate\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"clean\"</span>: <span class=\"string\">\"hexo clean\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"deploy\"</span>: <span class=\"string\">\"hexo deploy\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>: <span class=\"string\">\"hexo server\"</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n"},{"title":"8&gt;语雀文档同步到 hexo","urlname":"egko8o","date":"2020-05-01T23:37:20.000Z","_content":"\n## [1](https://www.yuque.com/login?platform=wechat&inviteToken=d250cce7a9bfb322880f20b1d1c4cdc4e59fa5e9f65dd25b1c2d2e774a076c56).去官网注册账号\n\n[点我去官网](https://www.yuque.com/login?platform=wechat&inviteToken=d250cce7a9bfb322880f20b1d1c4cdc4e59fa5e9f65dd25b1c2d2e774a076c56)\n\n## 2.创建知识库\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588478034103-86a7c5cc-71cb-4fd5-ba96-5eee9a2e8a2f.png#align=left&display=inline&height=321&margin=%5Bobject%20Object%5D&name=image.png&originHeight=642&originWidth=726&size=55017&status=done&style=none&width=363)\n\n## 3.点击当前知识库的设置\n\n获取当前知识库的登录名和路径\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588477857012-0a0094c3-e542-429d-bb28-20cd6d29c941.png#align=left&display=inline&height=531&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1062&originWidth=1828&size=124676&status=done&style=none&width=914)\n\n## 4.在将语雀文档同步到 hexo\n\n```javascript\n//先安装 yuque-hexo\nnpm install yuque-hexo --save\n```\n\n### 1) 修改 package.json，增加配置:\n\n```javascript\n\"yuqueConfig\": {\n    \"postPath\": \"source/_posts/yuque\",\n    \"cachePath\": \"yuque.json\",\n    \"mdNameFormat\": \"title\",\n    \"adapter\": \"hexo\",\n    \"concurrency\": 5,\n    \"baseUrl\": \"https://www.yuque.com/api/v2\",\n    \"login\": \"leader755\",\n    \"repo\": \"blog\",\n    \"token\": \"在语雀上申请的 token\",\n    \"onlyPublished\": false,\n    \"onlyPublic\": false\n  },\n```\n\n| 参数名        | 含义                                 | 默认值               |\n| ------------- | ------------------------------------ | -------------------- |\n| postPath      | 文档同步后生成的路径                 | source/\\_posts/yuque |\n| cachePath     | 文档下载缓存文件                     | yuque.json           |\n| mdNameFormat  | 文件名命名方式 (title / slug)        | title                |\n| adapter       | 文档生成格式 (hexo/markdown)         | hexo                 |\n| concurrency   | 下载文章并发数                       | 5                    |\n| baseUrl       | 语雀 API 地址                        | -                    |\n| login         | 语雀 login (group), 也称为个人路径   | -                    |\n| repo          | 语雀仓库短名称，也称为语雀知识库路径 | -                    |\n| onlyPublished | 只展示已经发布的文章                 | false                |\n| onlyPublic    | 只展示公开文章                       | false                |\n\n> slug 是语雀的永久链接名，一般是几个随机字母。\n\n### 2)在 package.json 添加 scripts\n\n```javascript\n//添加以下命令行\n{\n  \"sync\": \"yuque-hexo sync\",\n  \"clean:yuque\": \"yuque-hexo clean\"\n}\n```\n\n目前为止 scripts 命令行为\n\n```javascript\n\"scripts\": {\n    \"build\": \"hexo generate\",\n    \"clean\": \"hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"server\": \"hexo server\",\n    \"sync\": \"yuque-hexo sync\",\n    \"clean:yuque\": \"yuque-hexo clean\"\n  },\n```\n\n### 3）关于在语雀上申请 token\n\n点击账户个人-->设置 -->Token-->新建 token\n\n## 5.同步语雀文档到本地 hexo\n\n```javascript\n//同步文档\nyuque-hexo sync\n\n//清除本地缓存\nyuque-hexo clean\n```\n","source":"_posts/yuque/egko8o.md","raw":"---\ntitle: 8&gt;语雀文档同步到 hexo\nurlname: egko8o\ndate: 2020-05-02 07:37:20 +0800\ntags: []\ncategories: []\n---\n\n## [1](https://www.yuque.com/login?platform=wechat&inviteToken=d250cce7a9bfb322880f20b1d1c4cdc4e59fa5e9f65dd25b1c2d2e774a076c56).去官网注册账号\n\n[点我去官网](https://www.yuque.com/login?platform=wechat&inviteToken=d250cce7a9bfb322880f20b1d1c4cdc4e59fa5e9f65dd25b1c2d2e774a076c56)\n\n## 2.创建知识库\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588478034103-86a7c5cc-71cb-4fd5-ba96-5eee9a2e8a2f.png#align=left&display=inline&height=321&margin=%5Bobject%20Object%5D&name=image.png&originHeight=642&originWidth=726&size=55017&status=done&style=none&width=363)\n\n## 3.点击当前知识库的设置\n\n获取当前知识库的登录名和路径\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588477857012-0a0094c3-e542-429d-bb28-20cd6d29c941.png#align=left&display=inline&height=531&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1062&originWidth=1828&size=124676&status=done&style=none&width=914)\n\n## 4.在将语雀文档同步到 hexo\n\n```javascript\n//先安装 yuque-hexo\nnpm install yuque-hexo --save\n```\n\n### 1) 修改 package.json，增加配置:\n\n```javascript\n\"yuqueConfig\": {\n    \"postPath\": \"source/_posts/yuque\",\n    \"cachePath\": \"yuque.json\",\n    \"mdNameFormat\": \"title\",\n    \"adapter\": \"hexo\",\n    \"concurrency\": 5,\n    \"baseUrl\": \"https://www.yuque.com/api/v2\",\n    \"login\": \"leader755\",\n    \"repo\": \"blog\",\n    \"token\": \"在语雀上申请的 token\",\n    \"onlyPublished\": false,\n    \"onlyPublic\": false\n  },\n```\n\n| 参数名        | 含义                                 | 默认值               |\n| ------------- | ------------------------------------ | -------------------- |\n| postPath      | 文档同步后生成的路径                 | source/\\_posts/yuque |\n| cachePath     | 文档下载缓存文件                     | yuque.json           |\n| mdNameFormat  | 文件名命名方式 (title / slug)        | title                |\n| adapter       | 文档生成格式 (hexo/markdown)         | hexo                 |\n| concurrency   | 下载文章并发数                       | 5                    |\n| baseUrl       | 语雀 API 地址                        | -                    |\n| login         | 语雀 login (group), 也称为个人路径   | -                    |\n| repo          | 语雀仓库短名称，也称为语雀知识库路径 | -                    |\n| onlyPublished | 只展示已经发布的文章                 | false                |\n| onlyPublic    | 只展示公开文章                       | false                |\n\n> slug 是语雀的永久链接名，一般是几个随机字母。\n\n### 2)在 package.json 添加 scripts\n\n```javascript\n//添加以下命令行\n{\n  \"sync\": \"yuque-hexo sync\",\n  \"clean:yuque\": \"yuque-hexo clean\"\n}\n```\n\n目前为止 scripts 命令行为\n\n```javascript\n\"scripts\": {\n    \"build\": \"hexo generate\",\n    \"clean\": \"hexo clean\",\n    \"deploy\": \"hexo deploy\",\n    \"server\": \"hexo server\",\n    \"sync\": \"yuque-hexo sync\",\n    \"clean:yuque\": \"yuque-hexo clean\"\n  },\n```\n\n### 3）关于在语雀上申请 token\n\n点击账户个人-->设置 -->Token-->新建 token\n\n## 5.同步语雀文档到本地 hexo\n\n```javascript\n//同步文档\nyuque-hexo sync\n\n//清除本地缓存\nyuque-hexo clean\n```\n","slug":"yuque/egko8o","published":1,"updated":"2020-05-04T14:22:50.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skrav300044jnl6zf4huxl","content":"<h2 id=\"1-去官网注册账号\"><a href=\"#1-去官网注册账号\" class=\"headerlink\" title=\"1.去官网注册账号\"></a><a href=\"https://www.yuque.com/login?platform=wechat&inviteToken=d250cce7a9bfb322880f20b1d1c4cdc4e59fa5e9f65dd25b1c2d2e774a076c56\" target=\"_blank\" rel=\"noopener\">1</a>.去官网注册账号</h2><p><a href=\"https://www.yuque.com/login?platform=wechat&inviteToken=d250cce7a9bfb322880f20b1d1c4cdc4e59fa5e9f65dd25b1c2d2e774a076c56\" target=\"_blank\" rel=\"noopener\">点我去官网</a></p>\n<h2 id=\"2-创建知识库\"><a href=\"#2-创建知识库\" class=\"headerlink\" title=\"2.创建知识库\"></a>2.创建知识库</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588478034103-86a7c5cc-71cb-4fd5-ba96-5eee9a2e8a2f.png#align=left&display=inline&height=321&margin=%5Bobject%20Object%5D&name=image.png&originHeight=642&originWidth=726&size=55017&status=done&style=none&width=363\" alt=\"image.png\"></p>\n<h2 id=\"3-点击当前知识库的设置\"><a href=\"#3-点击当前知识库的设置\" class=\"headerlink\" title=\"3.点击当前知识库的设置\"></a>3.点击当前知识库的设置</h2><p>获取当前知识库的登录名和路径<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588477857012-0a0094c3-e542-429d-bb28-20cd6d29c941.png#align=left&display=inline&height=531&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1062&originWidth=1828&size=124676&status=done&style=none&width=914\" alt=\"image.png\"></p>\n<h2 id=\"4-在将语雀文档同步到-hexo\"><a href=\"#4-在将语雀文档同步到-hexo\" class=\"headerlink\" title=\"4.在将语雀文档同步到 hexo\"></a>4.在将语雀文档同步到 hexo</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//先安装 yuque-hexo</span></span><br><span class=\"line\">npm install yuque-hexo --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-修改-package-json，增加配置\"><a href=\"#1-修改-package-json，增加配置\" class=\"headerlink\" title=\"1) 修改 package.json，增加配置:\"></a>1) 修改 package.json，增加配置:</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"yuqueConfig\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"postPath\"</span>: <span class=\"string\">\"source/_posts/yuque\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"cachePath\"</span>: <span class=\"string\">\"yuque.json\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"mdNameFormat\"</span>: <span class=\"string\">\"title\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"adapter\"</span>: <span class=\"string\">\"hexo\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"concurrency\"</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">    <span class=\"string\">\"baseUrl\"</span>: <span class=\"string\">\"https://www.yuque.com/api/v2\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"login\"</span>: <span class=\"string\">\"leader755\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"repo\"</span>: <span class=\"string\">\"blog\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"token\"</span>: <span class=\"string\">\"在语雀上申请的 token\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"onlyPublished\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"string\">\"onlyPublic\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>含义</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>postPath</td>\n<td>文档同步后生成的路径</td>\n<td>source/_posts/yuque</td>\n</tr>\n<tr>\n<td>cachePath</td>\n<td>文档下载缓存文件</td>\n<td>yuque.json</td>\n</tr>\n<tr>\n<td>mdNameFormat</td>\n<td>文件名命名方式 (title / slug)</td>\n<td>title</td>\n</tr>\n<tr>\n<td>adapter</td>\n<td>文档生成格式 (hexo/markdown)</td>\n<td>hexo</td>\n</tr>\n<tr>\n<td>concurrency</td>\n<td>下载文章并发数</td>\n<td>5</td>\n</tr>\n<tr>\n<td>baseUrl</td>\n<td>语雀 API 地址</td>\n<td>-</td>\n</tr>\n<tr>\n<td>login</td>\n<td>语雀 login (group), 也称为个人路径</td>\n<td>-</td>\n</tr>\n<tr>\n<td>repo</td>\n<td>语雀仓库短名称，也称为语雀知识库路径</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onlyPublished</td>\n<td>只展示已经发布的文章</td>\n<td>false</td>\n</tr>\n<tr>\n<td>onlyPublic</td>\n<td>只展示公开文章</td>\n<td>false</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>slug 是语雀的永久链接名，一般是几个随机字母。</p>\n</blockquote>\n<h3 id=\"2-在-package-json-添加-scripts\"><a href=\"#2-在-package-json-添加-scripts\" class=\"headerlink\" title=\"2)在 package.json 添加 scripts\"></a>2)在 package.json 添加 scripts</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//添加以下命令行</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"sync\"</span>: <span class=\"string\">\"yuque-hexo sync\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"clean:yuque\"</span>: <span class=\"string\">\"yuque-hexo clean\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>目前为止 scripts 命令行为</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"hexo generate\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"clean\"</span>: <span class=\"string\">\"hexo clean\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"deploy\"</span>: <span class=\"string\">\"hexo deploy\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>: <span class=\"string\">\"hexo server\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"sync\"</span>: <span class=\"string\">\"yuque-hexo sync\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"clean:yuque\"</span>: <span class=\"string\">\"yuque-hexo clean\"</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3）关于在语雀上申请-token\"><a href=\"#3）关于在语雀上申请-token\" class=\"headerlink\" title=\"3）关于在语雀上申请 token\"></a>3）关于在语雀上申请 token</h3><p>点击账户个人–&gt;设置 –&gt;Token–&gt;新建 token</p>\n<h2 id=\"5-同步语雀文档到本地-hexo\"><a href=\"#5-同步语雀文档到本地-hexo\" class=\"headerlink\" title=\"5.同步语雀文档到本地 hexo\"></a>5.同步语雀文档到本地 hexo</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//同步文档</span></span><br><span class=\"line\">yuque-hexo sync</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//清除本地缓存</span></span><br><span class=\"line\">yuque-hexo clean</span><br></pre></td></tr></table></figure>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h2 id=\"1-去官网注册账号\"><a href=\"#1-去官网注册账号\" class=\"headerlink\" title=\"1.去官网注册账号\"></a><a href=\"https://www.yuque.com/login?platform=wechat&inviteToken=d250cce7a9bfb322880f20b1d1c4cdc4e59fa5e9f65dd25b1c2d2e774a076c56\" target=\"_blank\" rel=\"noopener\">1</a>.去官网注册账号</h2><p><a href=\"https://www.yuque.com/login?platform=wechat&inviteToken=d250cce7a9bfb322880f20b1d1c4cdc4e59fa5e9f65dd25b1c2d2e774a076c56\" target=\"_blank\" rel=\"noopener\">点我去官网</a></p>\n<h2 id=\"2-创建知识库\"><a href=\"#2-创建知识库\" class=\"headerlink\" title=\"2.创建知识库\"></a>2.创建知识库</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588478034103-86a7c5cc-71cb-4fd5-ba96-5eee9a2e8a2f.png#align=left&display=inline&height=321&margin=%5Bobject%20Object%5D&name=image.png&originHeight=642&originWidth=726&size=55017&status=done&style=none&width=363\" alt=\"image.png\"></p>\n<h2 id=\"3-点击当前知识库的设置\"><a href=\"#3-点击当前知识库的设置\" class=\"headerlink\" title=\"3.点击当前知识库的设置\"></a>3.点击当前知识库的设置</h2><p>获取当前知识库的登录名和路径<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588477857012-0a0094c3-e542-429d-bb28-20cd6d29c941.png#align=left&display=inline&height=531&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1062&originWidth=1828&size=124676&status=done&style=none&width=914\" alt=\"image.png\"></p>\n<h2 id=\"4-在将语雀文档同步到-hexo\"><a href=\"#4-在将语雀文档同步到-hexo\" class=\"headerlink\" title=\"4.在将语雀文档同步到 hexo\"></a>4.在将语雀文档同步到 hexo</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//先安装 yuque-hexo</span></span><br><span class=\"line\">npm install yuque-hexo --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-修改-package-json，增加配置\"><a href=\"#1-修改-package-json，增加配置\" class=\"headerlink\" title=\"1) 修改 package.json，增加配置:\"></a>1) 修改 package.json，增加配置:</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"yuqueConfig\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"postPath\"</span>: <span class=\"string\">\"source/_posts/yuque\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"cachePath\"</span>: <span class=\"string\">\"yuque.json\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"mdNameFormat\"</span>: <span class=\"string\">\"title\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"adapter\"</span>: <span class=\"string\">\"hexo\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"concurrency\"</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">    <span class=\"string\">\"baseUrl\"</span>: <span class=\"string\">\"https://www.yuque.com/api/v2\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"login\"</span>: <span class=\"string\">\"leader755\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"repo\"</span>: <span class=\"string\">\"blog\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"token\"</span>: <span class=\"string\">\"在语雀上申请的 token\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"onlyPublished\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"string\">\"onlyPublic\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>含义</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>postPath</td>\n<td>文档同步后生成的路径</td>\n<td>source/_posts/yuque</td>\n</tr>\n<tr>\n<td>cachePath</td>\n<td>文档下载缓存文件</td>\n<td>yuque.json</td>\n</tr>\n<tr>\n<td>mdNameFormat</td>\n<td>文件名命名方式 (title / slug)</td>\n<td>title</td>\n</tr>\n<tr>\n<td>adapter</td>\n<td>文档生成格式 (hexo/markdown)</td>\n<td>hexo</td>\n</tr>\n<tr>\n<td>concurrency</td>\n<td>下载文章并发数</td>\n<td>5</td>\n</tr>\n<tr>\n<td>baseUrl</td>\n<td>语雀 API 地址</td>\n<td>-</td>\n</tr>\n<tr>\n<td>login</td>\n<td>语雀 login (group), 也称为个人路径</td>\n<td>-</td>\n</tr>\n<tr>\n<td>repo</td>\n<td>语雀仓库短名称，也称为语雀知识库路径</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onlyPublished</td>\n<td>只展示已经发布的文章</td>\n<td>false</td>\n</tr>\n<tr>\n<td>onlyPublic</td>\n<td>只展示公开文章</td>\n<td>false</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>slug 是语雀的永久链接名，一般是几个随机字母。</p>\n</blockquote>\n<h3 id=\"2-在-package-json-添加-scripts\"><a href=\"#2-在-package-json-添加-scripts\" class=\"headerlink\" title=\"2)在 package.json 添加 scripts\"></a>2)在 package.json 添加 scripts</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//添加以下命令行</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"sync\"</span>: <span class=\"string\">\"yuque-hexo sync\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"clean:yuque\"</span>: <span class=\"string\">\"yuque-hexo clean\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>目前为止 scripts 命令行为</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"hexo generate\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"clean\"</span>: <span class=\"string\">\"hexo clean\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"deploy\"</span>: <span class=\"string\">\"hexo deploy\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"server\"</span>: <span class=\"string\">\"hexo server\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"sync\"</span>: <span class=\"string\">\"yuque-hexo sync\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"clean:yuque\"</span>: <span class=\"string\">\"yuque-hexo clean\"</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3）关于在语雀上申请-token\"><a href=\"#3）关于在语雀上申请-token\" class=\"headerlink\" title=\"3）关于在语雀上申请 token\"></a>3）关于在语雀上申请 token</h3><p>点击账户个人–&gt;设置 –&gt;Token–&gt;新建 token</p>\n<h2 id=\"5-同步语雀文档到本地-hexo\"><a href=\"#5-同步语雀文档到本地-hexo\" class=\"headerlink\" title=\"5.同步语雀文档到本地 hexo\"></a>5.同步语雀文档到本地 hexo</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//同步文档</span></span><br><span class=\"line\">yuque-hexo sync</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//清除本地缓存</span></span><br><span class=\"line\">yuque-hexo clean</span><br></pre></td></tr></table></figure>\n"},{"title":"2&gt;一键搭建 github 博客","urlname":"98bfbbe4-3078-488c-a1ad-907e638fce65","date":"2020-05-01T02:27:19.000Z","_content":"\n### 创建 GitHub Pages\n\n我们托管静态博客，使用的就是 GitHub Pages 的功能，首先我们需要创建一个个人主页，点击右上角的加号，选择 new repositories，进入创建页面。有的是说 username.github.io   但是我用着就是不行，说需要等待 10 分钟，username.github.com 下面的做法，不用等待，而且访问的地址是 username.github.io\n\n![](https://img-blog.csdn.net/20160515225516517?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1230&margin=%5Bobject%20Object%5D&originHeight=1230&originWidth=2546&status=done&style=none&width=2546)\n\n这样我们以后可以通过 username.github.io 来访问你的主页，点击 Create repository 创建成功，然后点击侧边栏的 setting，进入设置页面：\n\n![](https://img-blog.csdn.net/20160515225531939?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1232&margin=%5Bobject%20Object%5D&originHeight=1232&originWidth=2538&status=done&style=none&width=2538)\n\n点击设置成主页，跳转后无需填写信息直接点击`Continue to Layouts`为主页选择一个主题：\n\n![](https://img-blog.csdn.net/20160515225550330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1230&margin=%5Bobject%20Object%5D&originHeight=1230&originWidth=2506&status=done&style=none&width=2506)\n\n点击`publish pages`就创建个人主页成功了，这也是我们托管自己博客的仓库，你可以通过`username.github.io`来先浏览刚生成的个人主页。\n","source":"_posts/yuque/98bfbbe4-3078-488c-a1ad-907e638fce65.md","raw":"---\ntitle: 2&gt;一键搭建 github 博客\nurlname: 98bfbbe4-3078-488c-a1ad-907e638fce65\ndate: 2020-05-01 10:27:19 +0800\ntags: []\ncategories: []\n---\n\n### 创建 GitHub Pages\n\n我们托管静态博客，使用的就是 GitHub Pages 的功能，首先我们需要创建一个个人主页，点击右上角的加号，选择 new repositories，进入创建页面。有的是说 username.github.io   但是我用着就是不行，说需要等待 10 分钟，username.github.com 下面的做法，不用等待，而且访问的地址是 username.github.io\n\n![](https://img-blog.csdn.net/20160515225516517?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1230&margin=%5Bobject%20Object%5D&originHeight=1230&originWidth=2546&status=done&style=none&width=2546)\n\n这样我们以后可以通过 username.github.io 来访问你的主页，点击 Create repository 创建成功，然后点击侧边栏的 setting，进入设置页面：\n\n![](https://img-blog.csdn.net/20160515225531939?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1232&margin=%5Bobject%20Object%5D&originHeight=1232&originWidth=2538&status=done&style=none&width=2538)\n\n点击设置成主页，跳转后无需填写信息直接点击`Continue to Layouts`为主页选择一个主题：\n\n![](https://img-blog.csdn.net/20160515225550330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1230&margin=%5Bobject%20Object%5D&originHeight=1230&originWidth=2506&status=done&style=none&width=2506)\n\n点击`publish pages`就创建个人主页成功了，这也是我们托管自己博客的仓库，你可以通过`username.github.io`来先浏览刚生成的个人主页。\n","slug":"yuque/98bfbbe4-3078-488c-a1ad-907e638fce65","published":1,"updated":"2020-05-04T14:22:50.952Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skrav300054jnl5r46ebzp","content":"<h3 id=\"创建-GitHub-Pages\"><a href=\"#创建-GitHub-Pages\" class=\"headerlink\" title=\"创建 GitHub Pages\"></a>创建 GitHub Pages</h3><p>我们托管静态博客，使用的就是 GitHub Pages 的功能，首先我们需要创建一个个人主页，点击右上角的加号，选择 new repositories，进入创建页面。有的是说 username.github.io   但是我用着就是不行，说需要等待 10 分钟，username.github.com 下面的做法，不用等待，而且访问的地址是 username.github.io</p>\n<p><img src=\"https://img-blog.csdn.net/20160515225516517?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1230&margin=%5Bobject%20Object%5D&originHeight=1230&originWidth=2546&status=done&style=none&width=2546\" alt=\"\"></p>\n<p>这样我们以后可以通过 username.github.io 来访问你的主页，点击 Create repository 创建成功，然后点击侧边栏的 setting，进入设置页面：</p>\n<p><img src=\"https://img-blog.csdn.net/20160515225531939?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1232&margin=%5Bobject%20Object%5D&originHeight=1232&originWidth=2538&status=done&style=none&width=2538\" alt=\"\"></p>\n<p>点击设置成主页，跳转后无需填写信息直接点击<code>Continue to Layouts</code>为主页选择一个主题：</p>\n<p><img src=\"https://img-blog.csdn.net/20160515225550330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1230&margin=%5Bobject%20Object%5D&originHeight=1230&originWidth=2506&status=done&style=none&width=2506\" alt=\"\"></p>\n<p>点击<code>publish pages</code>就创建个人主页成功了，这也是我们托管自己博客的仓库，你可以通过<code>username.github.io</code>来先浏览刚生成的个人主页。</p>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h3 id=\"创建-GitHub-Pages\"><a href=\"#创建-GitHub-Pages\" class=\"headerlink\" title=\"创建 GitHub Pages\"></a>创建 GitHub Pages</h3><p>我们托管静态博客，使用的就是 GitHub Pages 的功能，首先我们需要创建一个个人主页，点击右上角的加号，选择 new repositories，进入创建页面。有的是说 username.github.io   但是我用着就是不行，说需要等待 10 分钟，username.github.com 下面的做法，不用等待，而且访问的地址是 username.github.io</p>\n<p><img src=\"https://img-blog.csdn.net/20160515225516517?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1230&margin=%5Bobject%20Object%5D&originHeight=1230&originWidth=2546&status=done&style=none&width=2546\" alt=\"\"></p>\n<p>这样我们以后可以通过 username.github.io 来访问你的主页，点击 Create repository 创建成功，然后点击侧边栏的 setting，进入设置页面：</p>\n<p><img src=\"https://img-blog.csdn.net/20160515225531939?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1232&margin=%5Bobject%20Object%5D&originHeight=1232&originWidth=2538&status=done&style=none&width=2538\" alt=\"\"></p>\n<p>点击设置成主页，跳转后无需填写信息直接点击<code>Continue to Layouts</code>为主页选择一个主题：</p>\n<p><img src=\"https://img-blog.csdn.net/20160515225550330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center#align=left&display=inline&height=1230&margin=%5Bobject%20Object%5D&originHeight=1230&originWidth=2506&status=done&style=none&width=2506\" alt=\"\"></p>\n<p>点击<code>publish pages</code>就创建个人主页成功了，这也是我们托管自己博客的仓库，你可以通过<code>username.github.io</code>来先浏览刚生成的个人主页。</p>\n"},{"title":"hexo使用的问题指南","urlname":"iwxsk5","date":"2020-05-03T03:13:51.000Z","_content":"\n### 1.hexo g -d 会报错\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588475689582-0959dce9-cdf9-4e4f-937b-175fcab6f7ce.png#align=left&display=inline&height=127&margin=%5Bobject%20Object%5D&name=image.png&originHeight=254&originWidth=1160&size=179534&status=done&style=none&width=580)\nwin 本地仓库：将 https 改为 ssh\n\n```javascript\ndeploy：\n   type：git\n   repo：git@github.com:Leader755/leader755.github.io.git\n   branch：master\n```\n\nmac:\n","source":"_posts/yuque/iwxsk5.md","raw":"---\ntitle: hexo使用的问题指南\nurlname: iwxsk5\ndate: 2020-05-03 11:13:51 +0800\ntags: []\ncategories: []\n---\n\n### 1.hexo g -d 会报错\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588475689582-0959dce9-cdf9-4e4f-937b-175fcab6f7ce.png#align=left&display=inline&height=127&margin=%5Bobject%20Object%5D&name=image.png&originHeight=254&originWidth=1160&size=179534&status=done&style=none&width=580)\nwin 本地仓库：将 https 改为 ssh\n\n```javascript\ndeploy：\n   type：git\n   repo：git@github.com:Leader755/leader755.github.io.git\n   branch：master\n```\n\nmac:\n","slug":"yuque/iwxsk5","published":1,"updated":"2020-05-04T14:22:50.494Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skrav400064jnl7hy16npu","content":"<h3 id=\"1-hexo-g-d-会报错\"><a href=\"#1-hexo-g-d-会报错\" class=\"headerlink\" title=\"1.hexo g -d 会报错\"></a>1.hexo g -d 会报错</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588475689582-0959dce9-cdf9-4e4f-937b-175fcab6f7ce.png#align=left&display=inline&height=127&margin=%5Bobject%20Object%5D&name=image.png&originHeight=254&originWidth=1160&size=179534&status=done&style=none&width=580\" alt=\"image.png\"><br>win 本地仓库：将 https 改为 ssh</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy：</span><br><span class=\"line\">   type：git</span><br><span class=\"line\">   repo：git@github.com:Leader755/leader755.github.io.git</span><br><span class=\"line\">   branch：master</span><br></pre></td></tr></table></figure>\n\n<p>mac:</p>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h3 id=\"1-hexo-g-d-会报错\"><a href=\"#1-hexo-g-d-会报错\" class=\"headerlink\" title=\"1.hexo g -d 会报错\"></a>1.hexo g -d 会报错</h3><p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588475689582-0959dce9-cdf9-4e4f-937b-175fcab6f7ce.png#align=left&display=inline&height=127&margin=%5Bobject%20Object%5D&name=image.png&originHeight=254&originWidth=1160&size=179534&status=done&style=none&width=580\" alt=\"image.png\"><br>win 本地仓库：将 https 改为 ssh</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy：</span><br><span class=\"line\">   type：git</span><br><span class=\"line\">   repo：git@github.com:Leader755/leader755.github.io.git</span><br><span class=\"line\">   branch：master</span><br></pre></td></tr></table></figure>\n\n<p>mac:</p>\n"},{"title":"欢迎使用 MWeb","urlname":"huan-ying-shi-yong-mweb","date":"2020-05-02T06:08:52.000Z","_content":"\nMWeb 是专业的 Markdown 写作、记笔记、静态博客生成软件，目前已支持 Mac，iPad 和 iPhone。MWeb 有以下特色：\n\n## 软件本身：\n\n- 使用原生的 macOS 技术打造，追求与系统的完美结合。\n- 原则上，首先是追求界面简洁和高性能，然后才是强大易用，功能全面。\n\n## Markdown 语法：\n\n- 使用 GitHub Flavored Markdown 语法，简称 GFM 语法。\n- 支持表格、TOC、LaTeX、代码块、任务列表、脚注等。\n- 画图库支持 mermaid, viz, ECharts, PlantUML, Sequence, Flow。\n\n## Markdown 辅助：\n\n- 支持截图并粘贴、复制并粘贴、拖拽等方式插入图片并直接显示在编辑器内。\n- 在兼容 Markdown 语法的情况下支持设置图片宽度。\n- 好用的表格插入和 LaTeX 书写辅助。\n\n## Markdown 输出：\n\n- 支持导出为图片、HTML、Epub、PDF、RTF、Docx。\n- 支持发布到 WordPress、支持 Metaweblog API 协议的服务、Wordpress.com、印象笔记（Evernote）、Blogger、Medium、Tumblr、语雀、Ghost、少数派 Matrix。\n- 图片上传服务（图床）支持 Imgur、七牛云、又拍云、腾讯云 COS、阿里云 OSS、SM.MS 和自定义的图床服务。\n\n## Markdown 笔记：\n\n- 强大的文档库支持分类树和标签管理文档，文档可归类于多个分类，可以把分类整个导出为 Epub、PDF 和生成静态网站。非常合适用于笔记、个人知识收集、管理和输出。\n- 快速笔记：随意增加笔记及图片等素材，支持以天为单位把增加的素材组合在一个文档内，方便整理及记录历史收集情况。\n- 快速搜索：目前已支持全局快捷键调出搜索。\n\n## 外部 Markdown 文档：\n\n- 外部 Markdown 文档使用外部模式管理。外部模式使用目录树的方式编辑和管理你的 Markdown 文档，还能很好的支持 GitBook、Jekyll、Hexo 等等编辑和图片插入。\n\n## MWeb 文档：\n\n如果要更详细了解 MWeb，建议你一定要去看一下官网的帮助文档，网址为：[https://zh.mweb.im/help.html](https://zh.mweb.im/help.html)。我们建议在使用文档库之前，一定要阅读一下 [MWeb 文档库详细介绍](https://zh.mweb.im/mweb-library.html) 这篇文章，以便更好的使用文档库。\n","source":"_posts/yuque/huan-ying-shi-yong-mweb.md","raw":"---\ntitle: 欢迎使用 MWeb\nurlname: huan-ying-shi-yong-mweb\ndate: 2020-05-02 14:08:52 +0800\ntags: []\ncategories: []\n---\n\nMWeb 是专业的 Markdown 写作、记笔记、静态博客生成软件，目前已支持 Mac，iPad 和 iPhone。MWeb 有以下特色：\n\n## 软件本身：\n\n- 使用原生的 macOS 技术打造，追求与系统的完美结合。\n- 原则上，首先是追求界面简洁和高性能，然后才是强大易用，功能全面。\n\n## Markdown 语法：\n\n- 使用 GitHub Flavored Markdown 语法，简称 GFM 语法。\n- 支持表格、TOC、LaTeX、代码块、任务列表、脚注等。\n- 画图库支持 mermaid, viz, ECharts, PlantUML, Sequence, Flow。\n\n## Markdown 辅助：\n\n- 支持截图并粘贴、复制并粘贴、拖拽等方式插入图片并直接显示在编辑器内。\n- 在兼容 Markdown 语法的情况下支持设置图片宽度。\n- 好用的表格插入和 LaTeX 书写辅助。\n\n## Markdown 输出：\n\n- 支持导出为图片、HTML、Epub、PDF、RTF、Docx。\n- 支持发布到 WordPress、支持 Metaweblog API 协议的服务、Wordpress.com、印象笔记（Evernote）、Blogger、Medium、Tumblr、语雀、Ghost、少数派 Matrix。\n- 图片上传服务（图床）支持 Imgur、七牛云、又拍云、腾讯云 COS、阿里云 OSS、SM.MS 和自定义的图床服务。\n\n## Markdown 笔记：\n\n- 强大的文档库支持分类树和标签管理文档，文档可归类于多个分类，可以把分类整个导出为 Epub、PDF 和生成静态网站。非常合适用于笔记、个人知识收集、管理和输出。\n- 快速笔记：随意增加笔记及图片等素材，支持以天为单位把增加的素材组合在一个文档内，方便整理及记录历史收集情况。\n- 快速搜索：目前已支持全局快捷键调出搜索。\n\n## 外部 Markdown 文档：\n\n- 外部 Markdown 文档使用外部模式管理。外部模式使用目录树的方式编辑和管理你的 Markdown 文档，还能很好的支持 GitBook、Jekyll、Hexo 等等编辑和图片插入。\n\n## MWeb 文档：\n\n如果要更详细了解 MWeb，建议你一定要去看一下官网的帮助文档，网址为：[https://zh.mweb.im/help.html](https://zh.mweb.im/help.html)。我们建议在使用文档库之前，一定要阅读一下 [MWeb 文档库详细介绍](https://zh.mweb.im/mweb-library.html) 这篇文章，以便更好的使用文档库。\n","slug":"yuque/huan-ying-shi-yong-mweb","published":1,"updated":"2020-05-04T14:22:50.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skrav400074jnl19eeh88v","content":"<p>MWeb 是专业的 Markdown 写作、记笔记、静态博客生成软件，目前已支持 Mac，iPad 和 iPhone。MWeb 有以下特色：</p>\n<h2 id=\"软件本身：\"><a href=\"#软件本身：\" class=\"headerlink\" title=\"软件本身：\"></a>软件本身：</h2><ul>\n<li>使用原生的 macOS 技术打造，追求与系统的完美结合。</li>\n<li>原则上，首先是追求界面简洁和高性能，然后才是强大易用，功能全面。</li>\n</ul>\n<h2 id=\"Markdown-语法：\"><a href=\"#Markdown-语法：\" class=\"headerlink\" title=\"Markdown 语法：\"></a>Markdown 语法：</h2><ul>\n<li>使用 GitHub Flavored Markdown 语法，简称 GFM 语法。</li>\n<li>支持表格、TOC、LaTeX、代码块、任务列表、脚注等。</li>\n<li>画图库支持 mermaid, viz, ECharts, PlantUML, Sequence, Flow。</li>\n</ul>\n<h2 id=\"Markdown-辅助：\"><a href=\"#Markdown-辅助：\" class=\"headerlink\" title=\"Markdown 辅助：\"></a>Markdown 辅助：</h2><ul>\n<li>支持截图并粘贴、复制并粘贴、拖拽等方式插入图片并直接显示在编辑器内。</li>\n<li>在兼容 Markdown 语法的情况下支持设置图片宽度。</li>\n<li>好用的表格插入和 LaTeX 书写辅助。</li>\n</ul>\n<h2 id=\"Markdown-输出：\"><a href=\"#Markdown-输出：\" class=\"headerlink\" title=\"Markdown 输出：\"></a>Markdown 输出：</h2><ul>\n<li>支持导出为图片、HTML、Epub、PDF、RTF、Docx。</li>\n<li>支持发布到 WordPress、支持 Metaweblog API 协议的服务、Wordpress.com、印象笔记（Evernote）、Blogger、Medium、Tumblr、语雀、Ghost、少数派 Matrix。</li>\n<li>图片上传服务（图床）支持 Imgur、七牛云、又拍云、腾讯云 COS、阿里云 OSS、SM.MS 和自定义的图床服务。</li>\n</ul>\n<h2 id=\"Markdown-笔记：\"><a href=\"#Markdown-笔记：\" class=\"headerlink\" title=\"Markdown 笔记：\"></a>Markdown 笔记：</h2><ul>\n<li>强大的文档库支持分类树和标签管理文档，文档可归类于多个分类，可以把分类整个导出为 Epub、PDF 和生成静态网站。非常合适用于笔记、个人知识收集、管理和输出。</li>\n<li>快速笔记：随意增加笔记及图片等素材，支持以天为单位把增加的素材组合在一个文档内，方便整理及记录历史收集情况。</li>\n<li>快速搜索：目前已支持全局快捷键调出搜索。</li>\n</ul>\n<h2 id=\"外部-Markdown-文档：\"><a href=\"#外部-Markdown-文档：\" class=\"headerlink\" title=\"外部 Markdown 文档：\"></a>外部 Markdown 文档：</h2><ul>\n<li>外部 Markdown 文档使用外部模式管理。外部模式使用目录树的方式编辑和管理你的 Markdown 文档，还能很好的支持 GitBook、Jekyll、Hexo 等等编辑和图片插入。</li>\n</ul>\n<h2 id=\"MWeb-文档：\"><a href=\"#MWeb-文档：\" class=\"headerlink\" title=\"MWeb 文档：\"></a>MWeb 文档：</h2><p>如果要更详细了解 MWeb，建议你一定要去看一下官网的帮助文档，网址为：<a href=\"https://zh.mweb.im/help.html\" target=\"_blank\" rel=\"noopener\">https://zh.mweb.im/help.html</a>。我们建议在使用文档库之前，一定要阅读一下 <a href=\"https://zh.mweb.im/mweb-library.html\" target=\"_blank\" rel=\"noopener\">MWeb 文档库详细介绍</a> 这篇文章，以便更好的使用文档库。</p>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<p>MWeb 是专业的 Markdown 写作、记笔记、静态博客生成软件，目前已支持 Mac，iPad 和 iPhone。MWeb 有以下特色：</p>\n<h2 id=\"软件本身：\"><a href=\"#软件本身：\" class=\"headerlink\" title=\"软件本身：\"></a>软件本身：</h2><ul>\n<li>使用原生的 macOS 技术打造，追求与系统的完美结合。</li>\n<li>原则上，首先是追求界面简洁和高性能，然后才是强大易用，功能全面。</li>\n</ul>\n<h2 id=\"Markdown-语法：\"><a href=\"#Markdown-语法：\" class=\"headerlink\" title=\"Markdown 语法：\"></a>Markdown 语法：</h2><ul>\n<li>使用 GitHub Flavored Markdown 语法，简称 GFM 语法。</li>\n<li>支持表格、TOC、LaTeX、代码块、任务列表、脚注等。</li>\n<li>画图库支持 mermaid, viz, ECharts, PlantUML, Sequence, Flow。</li>\n</ul>\n<h2 id=\"Markdown-辅助：\"><a href=\"#Markdown-辅助：\" class=\"headerlink\" title=\"Markdown 辅助：\"></a>Markdown 辅助：</h2><ul>\n<li>支持截图并粘贴、复制并粘贴、拖拽等方式插入图片并直接显示在编辑器内。</li>\n<li>在兼容 Markdown 语法的情况下支持设置图片宽度。</li>\n<li>好用的表格插入和 LaTeX 书写辅助。</li>\n</ul>\n<h2 id=\"Markdown-输出：\"><a href=\"#Markdown-输出：\" class=\"headerlink\" title=\"Markdown 输出：\"></a>Markdown 输出：</h2><ul>\n<li>支持导出为图片、HTML、Epub、PDF、RTF、Docx。</li>\n<li>支持发布到 WordPress、支持 Metaweblog API 协议的服务、Wordpress.com、印象笔记（Evernote）、Blogger、Medium、Tumblr、语雀、Ghost、少数派 Matrix。</li>\n<li>图片上传服务（图床）支持 Imgur、七牛云、又拍云、腾讯云 COS、阿里云 OSS、SM.MS 和自定义的图床服务。</li>\n</ul>\n<h2 id=\"Markdown-笔记：\"><a href=\"#Markdown-笔记：\" class=\"headerlink\" title=\"Markdown 笔记：\"></a>Markdown 笔记：</h2><ul>\n<li>强大的文档库支持分类树和标签管理文档，文档可归类于多个分类，可以把分类整个导出为 Epub、PDF 和生成静态网站。非常合适用于笔记、个人知识收集、管理和输出。</li>\n<li>快速笔记：随意增加笔记及图片等素材，支持以天为单位把增加的素材组合在一个文档内，方便整理及记录历史收集情况。</li>\n<li>快速搜索：目前已支持全局快捷键调出搜索。</li>\n</ul>\n<h2 id=\"外部-Markdown-文档：\"><a href=\"#外部-Markdown-文档：\" class=\"headerlink\" title=\"外部 Markdown 文档：\"></a>外部 Markdown 文档：</h2><ul>\n<li>外部 Markdown 文档使用外部模式管理。外部模式使用目录树的方式编辑和管理你的 Markdown 文档，还能很好的支持 GitBook、Jekyll、Hexo 等等编辑和图片插入。</li>\n</ul>\n<h2 id=\"MWeb-文档：\"><a href=\"#MWeb-文档：\" class=\"headerlink\" title=\"MWeb 文档：\"></a>MWeb 文档：</h2><p>如果要更详细了解 MWeb，建议你一定要去看一下官网的帮助文档，网址为：<a href=\"https://zh.mweb.im/help.html\" target=\"_blank\" rel=\"noopener\">https://zh.mweb.im/help.html</a>。我们建议在使用文档库之前，一定要阅读一下 <a href=\"https://zh.mweb.im/mweb-library.html\" target=\"_blank\" rel=\"noopener\">MWeb 文档库详细介绍</a> 这篇文章，以便更好的使用文档库。</p>\n"},{"title":"3&gt;mac上生成SSH key与GitHub通信","urlname":"fn26h0","date":"2020-05-01T03:01:26.000Z","_content":"\n## 1.检查 SSH key 是否存在\n\n在终端输入：\n\n```javascript\nls -al ~/.ssh\n```\n\n如果没有，终端显示如下：\n\n> No such file or directory\n\n如果已经存在，则会显示 id_rsa 和 id_rsa.pub\n\n## 2.生成新的 SSH key\n\n#### 1.设置 username 和 email（github 每次 commit 都会记录他们）\n\n```javascript\ngit config --global user.name \"Leader755\"\ngit config --global user.email \"1181012791@qq.com\"\n```\n\n#### 2.通过终端命令创建 ssh key\n\n```javascript\n//其中 your_email@example.com 为你在 GitHub 注册时的邮箱\n'ssh-keygen -t rsa -C \"1181012791@qq.com\"\n```\n\n[Bad escape character ‘ygen’ 错误原因!](https://www.cnblogs.com/jarod99/p/7251361.html)\n\n> ssh-keygen -t rsa -C “邮箱”\n> ssh-keygen 命令中间没有空格，如果在 ssh 后面加上空格，会得到 Bad escape character ‘ygen’.的错误。\n\n成功后终端显示如下：\n\n> Generating public/private rsa key pair.\n> Enter file in which to save the key (/Users/xxx/.ssh/id_rsa):\n\n提示你保存 .ssh/id_rsa 的路径，这里直接 enter\n\n> Created directory '/Users/xxx/.ssh'.\n> Enter passphrase (empty for no passphrase):\n\n提示输入 passphrase，每次与 GitHub 通信都会要求输入 passphrase，以避免某些「失误」，建议输入\n**这里有个问题需要注意，那就是当你在这里输入密码，以后在连接 gitHub 去 push 代码的时候都需要输入密码，非常蛋疼，所以在这里最好直接回车过即可，不用输入密码。\\*\\***()\\*\\*\n\n#### 3.即连续 enter 3 次，就会生成 key。\n\n成功后终端显示：\n\n> Your identification has been saved in /Users/xxx/.ssh/id_rsa.\n> Your public key has been saved in /Users/xxx/.ssh/id_rsa.pub.\n> The key fingerprint is:\n> 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48 your_email@example.com\n> The key's randomart image is:（后面图形省略）\n\n## 3.添加 key 到 SSH\n\n输入命令：\n\n```javascript\nssh-add ~/.ssh/id_rsa\n```\n\n此时会要求输入 passphrase，输入步骤二中填的 passphrase\n成功后，终端显示：\n\n> Identity added: /Users/xxx/.ssh/id_rsa (/Users/xxx/.ssh/id_rsa)\n\n最后，在 /Users/xxx/.ssh/ 生成两个文件，id_rsa 和 id_rsa.pub\n此时，SSH key 已经生成成功\n\n## 4.添加 SSH key 到 GitHub 和 coding\n\n#### 1.复制 id_rsa.pub 中的所有内容,\n\n打开 id_rsa.pub，终端命令：\n\n>\n\n```javascript\nvim ~/.ssh/id_rsa.pub\n```\n\n手动复制以 ssh-rsa 到以 your_email@example.com 结尾的所有内容\n\n或者直接输入命令复制 id_rsa.pub 中的所有内容，终端命令：\n\n```javascript\npbcopy < ~/.ssh/_adirs.pub;\n```\n\n## 5.登录 GitHub 和 coding\n\n#### github：打开个人 Settings-->SSH keys-->Add SSH key\n\n#### coding：打开个人设置-->SSH 公钥 -->新增公钥  \n\nTitle 随便写\nKey 粘贴之前复制的内容\n这样 SSH key 就添加的 GitHub 或者 coding.\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588333300890-a4b759da-4e1d-4837-8cc3-c2c3b1fa1f01.png#align=left&display=inline&height=565&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1130&originWidth=1902&size=254444&status=done&style=none&width=951)\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588333326072-e78c1bf9-ed79-4811-bbc9-a203e423b57a.png#align=left&display=inline&height=560&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1120&originWidth=1946&size=357795&status=done&style=none&width=973)\n\n## 6.检测 SSH key\n\n输入命令：\n\n```javascript\nssh git@github.com\n```\n\n此时会验证 SSH key 是否可以访问 GitHub\n成功显示如下：\n\n> Hi your_name! You've successfully authenticated, but GitHub does not provide shell access.\n> Connection to github.com closed.\n\n> 以上为提示内容，不过这里还是有一个需要注意的地方，如果没有上面的成功提示输出的话也不要害怕，我们可以先自己在本地建立一个 gitHub 仓库，然后进行 push 操作，如果 push 成功那么设置是成功的，如果 push 不上去的话再去检查。\n\n## 7.使用 git 去创建一个 ssh key 就完成了\n","source":"_posts/yuque/fn26h0.md","raw":"---\ntitle: 3&gt;mac上生成SSH key与GitHub通信\nurlname: fn26h0\ndate: 2020-05-01 11:01:26 +0800\ntags: []\ncategories: []\n---\n\n## 1.检查 SSH key 是否存在\n\n在终端输入：\n\n```javascript\nls -al ~/.ssh\n```\n\n如果没有，终端显示如下：\n\n> No such file or directory\n\n如果已经存在，则会显示 id_rsa 和 id_rsa.pub\n\n## 2.生成新的 SSH key\n\n#### 1.设置 username 和 email（github 每次 commit 都会记录他们）\n\n```javascript\ngit config --global user.name \"Leader755\"\ngit config --global user.email \"1181012791@qq.com\"\n```\n\n#### 2.通过终端命令创建 ssh key\n\n```javascript\n//其中 your_email@example.com 为你在 GitHub 注册时的邮箱\n'ssh-keygen -t rsa -C \"1181012791@qq.com\"\n```\n\n[Bad escape character ‘ygen’ 错误原因!](https://www.cnblogs.com/jarod99/p/7251361.html)\n\n> ssh-keygen -t rsa -C “邮箱”\n> ssh-keygen 命令中间没有空格，如果在 ssh 后面加上空格，会得到 Bad escape character ‘ygen’.的错误。\n\n成功后终端显示如下：\n\n> Generating public/private rsa key pair.\n> Enter file in which to save the key (/Users/xxx/.ssh/id_rsa):\n\n提示你保存 .ssh/id_rsa 的路径，这里直接 enter\n\n> Created directory '/Users/xxx/.ssh'.\n> Enter passphrase (empty for no passphrase):\n\n提示输入 passphrase，每次与 GitHub 通信都会要求输入 passphrase，以避免某些「失误」，建议输入\n**这里有个问题需要注意，那就是当你在这里输入密码，以后在连接 gitHub 去 push 代码的时候都需要输入密码，非常蛋疼，所以在这里最好直接回车过即可，不用输入密码。\\*\\***()\\*\\*\n\n#### 3.即连续 enter 3 次，就会生成 key。\n\n成功后终端显示：\n\n> Your identification has been saved in /Users/xxx/.ssh/id_rsa.\n> Your public key has been saved in /Users/xxx/.ssh/id_rsa.pub.\n> The key fingerprint is:\n> 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48 your_email@example.com\n> The key's randomart image is:（后面图形省略）\n\n## 3.添加 key 到 SSH\n\n输入命令：\n\n```javascript\nssh-add ~/.ssh/id_rsa\n```\n\n此时会要求输入 passphrase，输入步骤二中填的 passphrase\n成功后，终端显示：\n\n> Identity added: /Users/xxx/.ssh/id_rsa (/Users/xxx/.ssh/id_rsa)\n\n最后，在 /Users/xxx/.ssh/ 生成两个文件，id_rsa 和 id_rsa.pub\n此时，SSH key 已经生成成功\n\n## 4.添加 SSH key 到 GitHub 和 coding\n\n#### 1.复制 id_rsa.pub 中的所有内容,\n\n打开 id_rsa.pub，终端命令：\n\n>\n\n```javascript\nvim ~/.ssh/id_rsa.pub\n```\n\n手动复制以 ssh-rsa 到以 your_email@example.com 结尾的所有内容\n\n或者直接输入命令复制 id_rsa.pub 中的所有内容，终端命令：\n\n```javascript\npbcopy < ~/.ssh/_adirs.pub;\n```\n\n## 5.登录 GitHub 和 coding\n\n#### github：打开个人 Settings-->SSH keys-->Add SSH key\n\n#### coding：打开个人设置-->SSH 公钥 -->新增公钥  \n\nTitle 随便写\nKey 粘贴之前复制的内容\n这样 SSH key 就添加的 GitHub 或者 coding.\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588333300890-a4b759da-4e1d-4837-8cc3-c2c3b1fa1f01.png#align=left&display=inline&height=565&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1130&originWidth=1902&size=254444&status=done&style=none&width=951)\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588333326072-e78c1bf9-ed79-4811-bbc9-a203e423b57a.png#align=left&display=inline&height=560&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1120&originWidth=1946&size=357795&status=done&style=none&width=973)\n\n## 6.检测 SSH key\n\n输入命令：\n\n```javascript\nssh git@github.com\n```\n\n此时会验证 SSH key 是否可以访问 GitHub\n成功显示如下：\n\n> Hi your_name! You've successfully authenticated, but GitHub does not provide shell access.\n> Connection to github.com closed.\n\n> 以上为提示内容，不过这里还是有一个需要注意的地方，如果没有上面的成功提示输出的话也不要害怕，我们可以先自己在本地建立一个 gitHub 仓库，然后进行 push 操作，如果 push 成功那么设置是成功的，如果 push 不上去的话再去检查。\n\n## 7.使用 git 去创建一个 ssh key 就完成了\n","slug":"yuque/fn26h0","published":1,"updated":"2020-05-04T14:22:50.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skrav500084jnl8bsmg9k4","content":"<h2 id=\"1-检查-SSH-key-是否存在\"><a href=\"#1-检查-SSH-key-是否存在\" class=\"headerlink\" title=\"1.检查 SSH key 是否存在\"></a>1.检查 SSH key 是否存在</h2><p>在终端输入：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -al ~<span class=\"regexp\">/.ssh</span></span><br></pre></td></tr></table></figure>\n\n<p>如果没有，终端显示如下：</p>\n<blockquote>\n<p>No such file or directory</p>\n</blockquote>\n<p>如果已经存在，则会显示 id_rsa 和 id_rsa.pub</p>\n<h2 id=\"2-生成新的-SSH-key\"><a href=\"#2-生成新的-SSH-key\" class=\"headerlink\" title=\"2.生成新的 SSH key\"></a>2.生成新的 SSH key</h2><h4 id=\"1-设置-username-和-email（github-每次-commit-都会记录他们）\"><a href=\"#1-设置-username-和-email（github-每次-commit-都会记录他们）\" class=\"headerlink\" title=\"1.设置 username 和 email（github 每次 commit 都会记录他们）\"></a>1.设置 username 和 email（github 每次 commit 都会记录他们）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"Leader755\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"1181012791@qq.com\"</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-通过终端命令创建-ssh-key\"><a href=\"#2-通过终端命令创建-ssh-key\" class=\"headerlink\" title=\"2.通过终端命令创建 ssh key\"></a>2.通过终端命令创建 ssh key</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//其中 your_email@example.com 为你在 GitHub 注册时的邮箱</span></span><br><span class=\"line\"><span class=\"string\">'ssh-keygen -t rsa -C \"1181012791@qq.com\"</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://www.cnblogs.com/jarod99/p/7251361.html\" target=\"_blank\" rel=\"noopener\">Bad escape character ‘ygen’ 错误原因!</a></p>\n<blockquote>\n<p>ssh-keygen -t rsa -C “邮箱”<br>ssh-keygen 命令中间没有空格，如果在 ssh 后面加上空格，会得到 Bad escape character ‘ygen’.的错误。</p>\n</blockquote>\n<p>成功后终端显示如下：</p>\n<blockquote>\n<p>Generating public/private rsa key pair.<br>Enter file in which to save the key (/Users/xxx/.ssh/id_rsa):</p>\n</blockquote>\n<p>提示你保存 .ssh/id_rsa 的路径，这里直接 enter</p>\n<blockquote>\n<p>Created directory ‘/Users/xxx/.ssh’.<br>Enter passphrase (empty for no passphrase):</p>\n</blockquote>\n<p>提示输入 passphrase，每次与 GitHub 通信都会要求输入 passphrase，以避免某些「失误」，建议输入<br><strong>这里有个问题需要注意，那就是当你在这里输入密码，以后在连接 gitHub 去 push 代码的时候都需要输入密码，非常蛋疼，所以在这里最好直接回车过即可，不用输入密码。**</strong>()**</p>\n<h4 id=\"3-即连续-enter-3-次，就会生成-key。\"><a href=\"#3-即连续-enter-3-次，就会生成-key。\" class=\"headerlink\" title=\"3.即连续 enter 3 次，就会生成 key。\"></a>3.即连续 enter 3 次，就会生成 key。</h4><p>成功后终端显示：</p>\n<blockquote>\n<p>Your identification has been saved in /Users/xxx/.ssh/id_rsa.<br>Your public key has been saved in /Users/xxx/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48 <a href=\"mailto:your_email@example.com\">your_email@example.com</a><br>The key’s randomart image is:（后面图形省略）</p>\n</blockquote>\n<h2 id=\"3-添加-key-到-SSH\"><a href=\"#3-添加-key-到-SSH\" class=\"headerlink\" title=\"3.添加 key 到 SSH\"></a>3.添加 key 到 SSH</h2><p>输入命令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add ~<span class=\"regexp\">/.ssh/i</span>d_rsa</span><br></pre></td></tr></table></figure>\n\n<p>此时会要求输入 passphrase，输入步骤二中填的 passphrase<br>成功后，终端显示：</p>\n<blockquote>\n<p>Identity added: /Users/xxx/.ssh/id_rsa (/Users/xxx/.ssh/id_rsa)</p>\n</blockquote>\n<p>最后，在 /Users/xxx/.ssh/ 生成两个文件，id_rsa 和 id_rsa.pub<br>此时，SSH key 已经生成成功</p>\n<h2 id=\"4-添加-SSH-key-到-GitHub-和-coding\"><a href=\"#4-添加-SSH-key-到-GitHub-和-coding\" class=\"headerlink\" title=\"4.添加 SSH key 到 GitHub 和 coding\"></a>4.添加 SSH key 到 GitHub 和 coding</h2><h4 id=\"1-复制-id-rsa-pub-中的所有内容\"><a href=\"#1-复制-id-rsa-pub-中的所有内容\" class=\"headerlink\" title=\"1.复制 id_rsa.pub 中的所有内容,\"></a>1.复制 id_rsa.pub 中的所有内容,</h4><p>打开 id_rsa.pub，终端命令：</p>\n<blockquote>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~<span class=\"regexp\">/.ssh/i</span>d_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<p>手动复制以 ssh-rsa 到以 <a href=\"mailto:your_email@example.com\">your_email@example.com</a> 结尾的所有内容</p>\n<p>或者直接输入命令复制 id_rsa.pub 中的所有内容，终端命令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pbcopy &lt; ~<span class=\"regexp\">/.ssh/</span>_adirs.pub;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-登录-GitHub-和-coding\"><a href=\"#5-登录-GitHub-和-coding\" class=\"headerlink\" title=\"5.登录 GitHub 和 coding\"></a>5.登录 GitHub 和 coding</h2><h4 id=\"github：打开个人-Settings–-gt-SSH-keys–-gt-Add-SSH-key\"><a href=\"#github：打开个人-Settings–-gt-SSH-keys–-gt-Add-SSH-key\" class=\"headerlink\" title=\"github：打开个人 Settings–&gt;SSH keys–&gt;Add SSH key\"></a>github：打开个人 Settings–&gt;SSH keys–&gt;Add SSH key</h4><h4 id=\"coding：打开个人设置–-gt-SSH-公钥-–-gt-新增公钥\"><a href=\"#coding：打开个人设置–-gt-SSH-公钥-–-gt-新增公钥\" class=\"headerlink\" title=\"coding：打开个人设置–&gt;SSH 公钥 –&gt;新增公钥\"></a>coding：打开个人设置–&gt;SSH 公钥 –&gt;新增公钥</h4><p>Title 随便写<br>Key 粘贴之前复制的内容<br>这样 SSH key 就添加的 GitHub 或者 coding.<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588333300890-a4b759da-4e1d-4837-8cc3-c2c3b1fa1f01.png#align=left&display=inline&height=565&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1130&originWidth=1902&size=254444&status=done&style=none&width=951\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588333326072-e78c1bf9-ed79-4811-bbc9-a203e423b57a.png#align=left&display=inline&height=560&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1120&originWidth=1946&size=357795&status=done&style=none&width=973\" alt=\"image.png\"></p>\n<h2 id=\"6-检测-SSH-key\"><a href=\"#6-检测-SSH-key\" class=\"headerlink\" title=\"6.检测 SSH key\"></a>6.检测 SSH key</h2><p>输入命令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>此时会验证 SSH key 是否可以访问 GitHub<br>成功显示如下：</p>\n<blockquote>\n<p>Hi your_name! You’ve successfully authenticated, but GitHub does not provide shell access.<br>Connection to github.com closed.</p>\n</blockquote>\n<blockquote>\n<p>以上为提示内容，不过这里还是有一个需要注意的地方，如果没有上面的成功提示输出的话也不要害怕，我们可以先自己在本地建立一个 gitHub 仓库，然后进行 push 操作，如果 push 成功那么设置是成功的，如果 push 不上去的话再去检查。</p>\n</blockquote>\n<h2 id=\"7-使用-git-去创建一个-ssh-key-就完成了\"><a href=\"#7-使用-git-去创建一个-ssh-key-就完成了\" class=\"headerlink\" title=\"7.使用 git 去创建一个 ssh key 就完成了\"></a>7.使用 git 去创建一个 ssh key 就完成了</h2>","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h2 id=\"1-检查-SSH-key-是否存在\"><a href=\"#1-检查-SSH-key-是否存在\" class=\"headerlink\" title=\"1.检查 SSH key 是否存在\"></a>1.检查 SSH key 是否存在</h2><p>在终端输入：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -al ~<span class=\"regexp\">/.ssh</span></span><br></pre></td></tr></table></figure>\n\n<p>如果没有，终端显示如下：</p>\n<blockquote>\n<p>No such file or directory</p>\n</blockquote>\n<p>如果已经存在，则会显示 id_rsa 和 id_rsa.pub</p>\n<h2 id=\"2-生成新的-SSH-key\"><a href=\"#2-生成新的-SSH-key\" class=\"headerlink\" title=\"2.生成新的 SSH key\"></a>2.生成新的 SSH key</h2><h4 id=\"1-设置-username-和-email（github-每次-commit-都会记录他们）\"><a href=\"#1-设置-username-和-email（github-每次-commit-都会记录他们）\" class=\"headerlink\" title=\"1.设置 username 和 email（github 每次 commit 都会记录他们）\"></a>1.设置 username 和 email（github 每次 commit 都会记录他们）</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"Leader755\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"1181012791@qq.com\"</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-通过终端命令创建-ssh-key\"><a href=\"#2-通过终端命令创建-ssh-key\" class=\"headerlink\" title=\"2.通过终端命令创建 ssh key\"></a>2.通过终端命令创建 ssh key</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//其中 your_email@example.com 为你在 GitHub 注册时的邮箱</span></span><br><span class=\"line\"><span class=\"string\">'ssh-keygen -t rsa -C \"1181012791@qq.com\"</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://www.cnblogs.com/jarod99/p/7251361.html\" target=\"_blank\" rel=\"noopener\">Bad escape character ‘ygen’ 错误原因!</a></p>\n<blockquote>\n<p>ssh-keygen -t rsa -C “邮箱”<br>ssh-keygen 命令中间没有空格，如果在 ssh 后面加上空格，会得到 Bad escape character ‘ygen’.的错误。</p>\n</blockquote>\n<p>成功后终端显示如下：</p>\n<blockquote>\n<p>Generating public/private rsa key pair.<br>Enter file in which to save the key (/Users/xxx/.ssh/id_rsa):</p>\n</blockquote>\n<p>提示你保存 .ssh/id_rsa 的路径，这里直接 enter</p>\n<blockquote>\n<p>Created directory ‘/Users/xxx/.ssh’.<br>Enter passphrase (empty for no passphrase):</p>\n</blockquote>\n<p>提示输入 passphrase，每次与 GitHub 通信都会要求输入 passphrase，以避免某些「失误」，建议输入<br><strong>这里有个问题需要注意，那就是当你在这里输入密码，以后在连接 gitHub 去 push 代码的时候都需要输入密码，非常蛋疼，所以在这里最好直接回车过即可，不用输入密码。**</strong>()**</p>\n<h4 id=\"3-即连续-enter-3-次，就会生成-key。\"><a href=\"#3-即连续-enter-3-次，就会生成-key。\" class=\"headerlink\" title=\"3.即连续 enter 3 次，就会生成 key。\"></a>3.即连续 enter 3 次，就会生成 key。</h4><p>成功后终端显示：</p>\n<blockquote>\n<p>Your identification has been saved in /Users/xxx/.ssh/id_rsa.<br>Your public key has been saved in /Users/xxx/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48 <a href=\"mailto:your_email@example.com\">your_email@example.com</a><br>The key’s randomart image is:（后面图形省略）</p>\n</blockquote>\n<h2 id=\"3-添加-key-到-SSH\"><a href=\"#3-添加-key-到-SSH\" class=\"headerlink\" title=\"3.添加 key 到 SSH\"></a>3.添加 key 到 SSH</h2><p>输入命令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add ~<span class=\"regexp\">/.ssh/i</span>d_rsa</span><br></pre></td></tr></table></figure>\n\n<p>此时会要求输入 passphrase，输入步骤二中填的 passphrase<br>成功后，终端显示：</p>\n<blockquote>\n<p>Identity added: /Users/xxx/.ssh/id_rsa (/Users/xxx/.ssh/id_rsa)</p>\n</blockquote>\n<p>最后，在 /Users/xxx/.ssh/ 生成两个文件，id_rsa 和 id_rsa.pub<br>此时，SSH key 已经生成成功</p>\n<h2 id=\"4-添加-SSH-key-到-GitHub-和-coding\"><a href=\"#4-添加-SSH-key-到-GitHub-和-coding\" class=\"headerlink\" title=\"4.添加 SSH key 到 GitHub 和 coding\"></a>4.添加 SSH key 到 GitHub 和 coding</h2><h4 id=\"1-复制-id-rsa-pub-中的所有内容\"><a href=\"#1-复制-id-rsa-pub-中的所有内容\" class=\"headerlink\" title=\"1.复制 id_rsa.pub 中的所有内容,\"></a>1.复制 id_rsa.pub 中的所有内容,</h4><p>打开 id_rsa.pub，终端命令：</p>\n<blockquote>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~<span class=\"regexp\">/.ssh/i</span>d_rsa.pub</span><br></pre></td></tr></table></figure>\n\n<p>手动复制以 ssh-rsa 到以 <a href=\"mailto:your_email@example.com\">your_email@example.com</a> 结尾的所有内容</p>\n<p>或者直接输入命令复制 id_rsa.pub 中的所有内容，终端命令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pbcopy &lt; ~<span class=\"regexp\">/.ssh/</span>_adirs.pub;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-登录-GitHub-和-coding\"><a href=\"#5-登录-GitHub-和-coding\" class=\"headerlink\" title=\"5.登录 GitHub 和 coding\"></a>5.登录 GitHub 和 coding</h2><h4 id=\"github：打开个人-Settings–-gt-SSH-keys–-gt-Add-SSH-key\"><a href=\"#github：打开个人-Settings–-gt-SSH-keys–-gt-Add-SSH-key\" class=\"headerlink\" title=\"github：打开个人 Settings–&gt;SSH keys–&gt;Add SSH key\"></a>github：打开个人 Settings–&gt;SSH keys–&gt;Add SSH key</h4><h4 id=\"coding：打开个人设置–-gt-SSH-公钥-–-gt-新增公钥\"><a href=\"#coding：打开个人设置–-gt-SSH-公钥-–-gt-新增公钥\" class=\"headerlink\" title=\"coding：打开个人设置–&gt;SSH 公钥 –&gt;新增公钥\"></a>coding：打开个人设置–&gt;SSH 公钥 –&gt;新增公钥</h4><p>Title 随便写<br>Key 粘贴之前复制的内容<br>这样 SSH key 就添加的 GitHub 或者 coding.<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588333300890-a4b759da-4e1d-4837-8cc3-c2c3b1fa1f01.png#align=left&display=inline&height=565&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1130&originWidth=1902&size=254444&status=done&style=none&width=951\" alt=\"image.png\"><br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588333326072-e78c1bf9-ed79-4811-bbc9-a203e423b57a.png#align=left&display=inline&height=560&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1120&originWidth=1946&size=357795&status=done&style=none&width=973\" alt=\"image.png\"></p>\n<h2 id=\"6-检测-SSH-key\"><a href=\"#6-检测-SSH-key\" class=\"headerlink\" title=\"6.检测 SSH key\"></a>6.检测 SSH key</h2><p>输入命令：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>此时会验证 SSH key 是否可以访问 GitHub<br>成功显示如下：</p>\n<blockquote>\n<p>Hi your_name! You’ve successfully authenticated, but GitHub does not provide shell access.<br>Connection to github.com closed.</p>\n</blockquote>\n<blockquote>\n<p>以上为提示内容，不过这里还是有一个需要注意的地方，如果没有上面的成功提示输出的话也不要害怕，我们可以先自己在本地建立一个 gitHub 仓库，然后进行 push 操作，如果 push 成功那么设置是成功的，如果 push 不上去的话再去检查。</p>\n</blockquote>\n<h2 id=\"7-使用-git-去创建一个-ssh-key-就完成了\"><a href=\"#7-使用-git-去创建一个-ssh-key-就完成了\" class=\"headerlink\" title=\"7.使用 git 去创建一个 ssh key 就完成了\"></a>7.使用 git 去创建一个 ssh key 就完成了</h2>"},{"title":"7&gt;hexo主题配置","urlname":"pdrp5a","date":"2020-05-01T09:47:18.000Z","_content":"\n## 1.hexo 主题官网\n\n[http://theme-next.iissnan.com/getting-started.html](http://theme-next.iissnan.com/getting-started.html)\n\n## 2.应用以及下载主题\n\n说明：在 Hexo 中有两份主要的配置文件，其名称都是 `_config.yml`。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n为了描述方便，在以下说明中，将前者称为 **站点配置文件**， 后者称为 **主题配置文件**。（必看）\n\n### 1.安装主题\n\nHexo 安装主题的方式非常简单，只需要将主题文件拷贝至**站点目录(\\*\\***即根目录下的文件\\_config.yml 文件\\***\\*)**的  `themes`  目录下， 然后修改下配置文件即可。next 为主题名\n\n```javascript\n//在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n###\n\n### 2.启用主题\n\n与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 **站点配置文件**， 找到 `theme` 字段，并将其值更改为 `next(主题名)`。\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588326982972-1828234c-3a21-48e1-ac1e-5b57480ac6f0.png#align=left&display=inline&height=111&margin=%5Bobject%20Object%5D&name=image.png&originHeight=222&originWidth=1012&size=24250&status=done&style=none&width=506)\n\n```javascript\ntheme: next;\n```\n\n#### 2.1 本文使用的是（hexo-theme-halo）主题\n\n1>直接下载 git  clone\n\n```javascript\ngit clone https://github.com/hongweifuture/hexo-theme-halo.git themes/halo\n```\n\n2>直接将`themes/halo/config/source`内所有内容拷贝到`Hexo`根目录下的`source`文件夹内替换\n\n#### 2.2 配置切换主题\n\n修改 Hexo 根目录下的 `_config.yml` 的 `theme` 的值：`theme: halo`\n`根目录_config.yml` 文件的其它修改建议:\n\n- 请修改 `_config.yml` 的 `url` 的值为你的网站主 `URL`（如：`[http://xxx.github.io](http://xxx.github.io)`）。\n- 建议修改两个 `per_page` 的分页条数值为 `6` 的倍数，如：`12`、`18` 等，这样文章列表在各个屏幕下都能较好的显示。\n- 如果你是中文用户，则建议修改 `language` 的值为 `zh-CN`。\n\n### 3.验证主题\n\n```javascript\n//最好先清除缓存\nhexo clean\n\n//打包\nhexo g\n\n//启动\nhexo s\n\n//发布到 github\nhexo s -d\n```\n","source":"_posts/yuque/pdrp5a.md","raw":"---\ntitle: 7&gt;hexo主题配置\nurlname: pdrp5a\ndate: 2020-05-01 17:47:18 +0800\ntags: []\ncategories: []\n---\n\n## 1.hexo 主题官网\n\n[http://theme-next.iissnan.com/getting-started.html](http://theme-next.iissnan.com/getting-started.html)\n\n## 2.应用以及下载主题\n\n说明：在 Hexo 中有两份主要的配置文件，其名称都是 `_config.yml`。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。\n为了描述方便，在以下说明中，将前者称为 **站点配置文件**， 后者称为 **主题配置文件**。（必看）\n\n### 1.安装主题\n\nHexo 安装主题的方式非常简单，只需要将主题文件拷贝至**站点目录(\\*\\***即根目录下的文件\\_config.yml 文件\\***\\*)**的  `themes`  目录下， 然后修改下配置文件即可。next 为主题名\n\n```javascript\n//在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n###\n\n### 2.启用主题\n\n与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 **站点配置文件**， 找到 `theme` 字段，并将其值更改为 `next(主题名)`。\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588326982972-1828234c-3a21-48e1-ac1e-5b57480ac6f0.png#align=left&display=inline&height=111&margin=%5Bobject%20Object%5D&name=image.png&originHeight=222&originWidth=1012&size=24250&status=done&style=none&width=506)\n\n```javascript\ntheme: next;\n```\n\n#### 2.1 本文使用的是（hexo-theme-halo）主题\n\n1>直接下载 git  clone\n\n```javascript\ngit clone https://github.com/hongweifuture/hexo-theme-halo.git themes/halo\n```\n\n2>直接将`themes/halo/config/source`内所有内容拷贝到`Hexo`根目录下的`source`文件夹内替换\n\n#### 2.2 配置切换主题\n\n修改 Hexo 根目录下的 `_config.yml` 的 `theme` 的值：`theme: halo`\n`根目录_config.yml` 文件的其它修改建议:\n\n- 请修改 `_config.yml` 的 `url` 的值为你的网站主 `URL`（如：`[http://xxx.github.io](http://xxx.github.io)`）。\n- 建议修改两个 `per_page` 的分页条数值为 `6` 的倍数，如：`12`、`18` 等，这样文章列表在各个屏幕下都能较好的显示。\n- 如果你是中文用户，则建议修改 `language` 的值为 `zh-CN`。\n\n### 3.验证主题\n\n```javascript\n//最好先清除缓存\nhexo clean\n\n//打包\nhexo g\n\n//启动\nhexo s\n\n//发布到 github\nhexo s -d\n```\n","slug":"yuque/pdrp5a","published":1,"updated":"2020-05-04T14:22:50.878Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skrav600094jnla6d14804","content":"<h2 id=\"1-hexo-主题官网\"><a href=\"#1-hexo-主题官网\" class=\"headerlink\" title=\"1.hexo 主题官网\"></a>1.hexo 主题官网</h2><p><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">http://theme-next.iissnan.com/getting-started.html</a></p>\n<h2 id=\"2-应用以及下载主题\"><a href=\"#2-应用以及下载主题\" class=\"headerlink\" title=\"2.应用以及下载主题\"></a>2.应用以及下载主题</h2><p>说明：在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。（必看）</p>\n<h3 id=\"1-安装主题\"><a href=\"#1-安装主题\" class=\"headerlink\" title=\"1.安装主题\"></a>1.安装主题</h3><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至<strong>站点目录(**</strong>即根目录下的文件_config.yml 文件*<strong>*)</strong>的  <code>themes</code>  目录下， 然后修改下配置文件即可。next 为主题名</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</span></span><br><span class=\"line\">$ cd your-hexo-site</span><br><span class=\"line\">$ git clone https:<span class=\"comment\">//github.com/iissnan/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>\n\n<p>###</p>\n<h3 id=\"2-启用主题\"><a href=\"#2-启用主题\" class=\"headerlink\" title=\"2.启用主题\"></a>2.启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 <strong>站点配置文件</strong>， 找到 <code>theme</code> 字段，并将其值更改为 <code>next(主题名)</code>。<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588326982972-1828234c-3a21-48e1-ac1e-5b57480ac6f0.png#align=left&display=inline&height=111&margin=%5Bobject%20Object%5D&name=image.png&originHeight=222&originWidth=1012&size=24250&status=done&style=none&width=506\" alt=\"image.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-本文使用的是（hexo-theme-halo）主题\"><a href=\"#2-1-本文使用的是（hexo-theme-halo）主题\" class=\"headerlink\" title=\"2.1 本文使用的是（hexo-theme-halo）主题\"></a>2.1 本文使用的是（hexo-theme-halo）主题</h4><p>1&gt;直接下载 git  clone</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/hongweifuture/hexo-theme-halo.git themes/halo</span></span><br></pre></td></tr></table></figure>\n\n<p>2&gt;直接将<code>themes/halo/config/source</code>内所有内容拷贝到<code>Hexo</code>根目录下的<code>source</code>文件夹内替换</p>\n<h4 id=\"2-2-配置切换主题\"><a href=\"#2-2-配置切换主题\" class=\"headerlink\" title=\"2.2 配置切换主题\"></a>2.2 配置切换主题</h4><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: halo</code><br><code>根目录_config.yml</code> 文件的其它修改建议:</p>\n<ul>\n<li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>[http://xxx.github.io](http://xxx.github.io)</code>）。</li>\n<li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li>\n<li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li>\n</ul>\n<h3 id=\"3-验证主题\"><a href=\"#3-验证主题\" class=\"headerlink\" title=\"3.验证主题\"></a>3.验证主题</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//最好先清除缓存</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//打包</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//启动</span></span><br><span class=\"line\">hexo s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//发布到 github</span></span><br><span class=\"line\">hexo s -d</span><br></pre></td></tr></table></figure>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h2 id=\"1-hexo-主题官网\"><a href=\"#1-hexo-主题官网\" class=\"headerlink\" title=\"1.hexo 主题官网\"></a>1.hexo 主题官网</h2><p><a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">http://theme-next.iissnan.com/getting-started.html</a></p>\n<h2 id=\"2-应用以及下载主题\"><a href=\"#2-应用以及下载主题\" class=\"headerlink\" title=\"2.应用以及下载主题\"></a>2.应用以及下载主题</h2><p>说明：在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。<br>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。（必看）</p>\n<h3 id=\"1-安装主题\"><a href=\"#1-安装主题\" class=\"headerlink\" title=\"1.安装主题\"></a>1.安装主题</h3><p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至<strong>站点目录(**</strong>即根目录下的文件_config.yml 文件*<strong>*)</strong>的  <code>themes</code>  目录下， 然后修改下配置文件即可。next 为主题名</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</span></span><br><span class=\"line\">$ cd your-hexo-site</span><br><span class=\"line\">$ git clone https:<span class=\"comment\">//github.com/iissnan/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>\n\n<p>###</p>\n<h3 id=\"2-启用主题\"><a href=\"#2-启用主题\" class=\"headerlink\" title=\"2.启用主题\"></a>2.启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 <strong>站点配置文件</strong>， 找到 <code>theme</code> 字段，并将其值更改为 <code>next(主题名)</code>。<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588326982972-1828234c-3a21-48e1-ac1e-5b57480ac6f0.png#align=left&display=inline&height=111&margin=%5Bobject%20Object%5D&name=image.png&originHeight=222&originWidth=1012&size=24250&status=done&style=none&width=506\" alt=\"image.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-本文使用的是（hexo-theme-halo）主题\"><a href=\"#2-1-本文使用的是（hexo-theme-halo）主题\" class=\"headerlink\" title=\"2.1 本文使用的是（hexo-theme-halo）主题\"></a>2.1 本文使用的是（hexo-theme-halo）主题</h4><p>1&gt;直接下载 git  clone</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/hongweifuture/hexo-theme-halo.git themes/halo</span></span><br></pre></td></tr></table></figure>\n\n<p>2&gt;直接将<code>themes/halo/config/source</code>内所有内容拷贝到<code>Hexo</code>根目录下的<code>source</code>文件夹内替换</p>\n<h4 id=\"2-2-配置切换主题\"><a href=\"#2-2-配置切换主题\" class=\"headerlink\" title=\"2.2 配置切换主题\"></a>2.2 配置切换主题</h4><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的 <code>theme</code> 的值：<code>theme: halo</code><br><code>根目录_config.yml</code> 文件的其它修改建议:</p>\n<ul>\n<li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>[http://xxx.github.io](http://xxx.github.io)</code>）。</li>\n<li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li>\n<li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li>\n</ul>\n<h3 id=\"3-验证主题\"><a href=\"#3-验证主题\" class=\"headerlink\" title=\"3.验证主题\"></a>3.验证主题</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//最好先清除缓存</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//打包</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//启动</span></span><br><span class=\"line\">hexo s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//发布到 github</span></span><br><span class=\"line\">hexo s -d</span><br></pre></td></tr></table></figure>\n"},{"title":"6&gt;hexo插件篇（必看）","urlname":"wcgfp5","date":"2020-05-01T10:00:28.000Z","_content":"\n## 1>安装插件说明\n\n如果应用官网的主题你会发现，有可能出现打不开的情况，这是由于有些主题使用的插件，本地并没有安装导致的报错。所以本篇文章为补充说明篇。（无问题的可以跳过）\n\n## 2>常用的插件\n\n### 代码高亮（建议安装）\n\n由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 [hexo-prism-plugin](https://github.com/ele828/hexo-prism-plugin) 的 Hexo 插件来做代码高亮，安装命令如下：\n\n```javascript\nnpm i -S hexo-prism-plugin\n```\n\n然后，修改 Hexo 根目录下 `_config.yml` 文件中 `highlight.enable` 的值为 `false`，并新增 `prism` 插件相关的配置，主要配置如下：\n\n```javascript\nhighlight:\n  enable: false\n\nprism_plugin:\n  mode: 'preprocess'    # realtime/preprocess\n  theme: 'tomorrow'\n  line_number: false    # default false\n  custom_css:\n```\n\n### 搜索（建议安装）\n\n本主题中还使用到了 [hexo-generator-search](https://github.com/wzpan/hexo-generator-search) 的 Hexo 插件来做内容搜索，安装命令如下：\n\n```javascript\nnpm install hexo-generator-search --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```javascript\nsearch: path: search.xml;\nfield: post;\n```\n\n###\n\n### 文章字数统计插件（建议安装）（使用了 halo 主题则必须安装）\n\n如果你想要在文章中显示文章字数、阅读时长信息，可以安装 [hexo-wordcount](https://github.com/willin/hexo-wordcount)插件。安装命令如下：\n\n```javascript\nnpm i --save hexo-wordcount\n```\n\n然后只需在本主题下的 `_config.yml` 文件中，将各个文章字数相关的配置激活即可：\n(此处注意源文档的 postInfo 是错的，应该为 post_wordcount)\n\n```javascript\npost_wordcount:\n  date: true # 发布日期\n  update: true # 更新日期\n  wordCount: true # 文章字数统计\n  totalCount: true # 站点总文章字数\n  min2read: true # 文章阅读时长\n  readCount: true # 文章阅读次数\n```\n\n### 添加代码压缩（建议安装）\n\n[hexo-neat](https://github.com/rozbo/hexo-neat)插件实现压缩代码，底层是通过 gulp 来实现的。但是这个插件是有 Bug 的：\n\n- 压缩 md 文件会使 markdown 语法的代码块消失\n- 会删除全角空格\n\n在博客站点根目录执行安装代码：\n\n```\nnpm install hexo-neat --save\n```\n\n紧接着在站点根目录下的配置文件添加如下代码：\n\n```\nneat_enable: true\nneat_html:\n  enable: true\n  exclude:\nneat_css:\n  enable: true\n  exclude:\n    - '*.min.css'\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '*.min.js'\n```\n\n然后直接 hexo cl&&hexo g 就可以了，会自动压缩文件 。\n补充：为了解决以上 Bug，对于`halo`主题（其他主题自行解决）需要将以上默认配置修改为：\n\n```\n#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）\nneat_enable: true\nneat_html:\n  enable: true\n  exclude:\n    - '**/*.md'\nneat_css:\n  enable: true\n  exclude:\n    - '**/*.min.css'\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '**/*.min.js'\n    - '**/**/instantpage.js'\n    - '**/matery.js'\n```\n\n###\n\n### 外链跳转插件 hexo-external-link（可选安装）（使用了 halo 主题则必须安装）\n\n> [hexo-external-link](https://github.com/hvnobug/hexo-external-link)是一个跳转外链相关插件。自动为所有 html 文件中外链的 a 标签生成对应的属性。 比如 设置`target=’_blank’`, `rel=’external nofollow noopener noreferrer’`告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;\n\n安装:\n\n```javascript\nnpm install hexo-external-link --save\n```\n\n配置插件 在 Hexo 根目录的\\_config.yml 文件中添加如下配置。\n\n```javascript\nhexo_external_link:\n  enable: true\n  enable_base64_encode: true\n  url_param_name: 'u'\n  html_file_name: 'go.html'\n  target_blank: true\n  link_rel: 'external nofollow noopener noreferrer'\n  domain: 'your_domain' # 如果开启了防盗链\n  safety_chain: true\n```\n\n- enable：是否开启 hexo_external_link 插件 - 默认 false\n- enable_base64_encode：是否对跳转 url 使用 base64 编码 - 默认 fasle\n- url_param_name：url 参数名,在跳转到外链传递给 html_file_name 的参数名 - 默认 ‘u’\n- html_file_name：跳转到外链的页面文件路径 - 默认 'go.html'\n- target_blank：是否为外链的 a 标签添加 target='\\_blank' - 默认 true\n- link_rel：设置外链的 a 标签的 rel 属性 - 默认 'external nofollow noopener noreferrer'\n- domain：如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host\n- safety_chain：go.html 为了防止外链盗用 对域名进行的判断 - 默认 false 即关闭防盗链\n\n###\n\n### 添加 RSS 订阅支持（可选安装）（使用了 halo 主题则必须安装）\n\n本主题中还使用到了 [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed) 的 Hexo 插件来做 `RSS`，安装命令如下：\n\n```javascript\nnpm install hexo-generator-feed --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```javascript\nfeed: type: atom;\npath: atom.xml;\nlimit: 20;\nhub: content: content_limit: 140;\ncontent_limit_delim: \" \";\norder_by: -date;\n```\n\n### 添加 sitemap 站点地图（可选安装）（使用了 halo 主题则必须安装）\n\n本主题中还使用到了 [hexo-generator-sitemap](https://github.com/hexojs/hexo-generator-sitemap) 的 Hexo 插件来做 `Sitemap`，安装命令如下：\n\n```javascript\nnpm install hexo-generator-sitemap --save\n```\n\n访问地址：/sitemap.xml\n\n### 中文链接转拼音（可选安装）\n\n如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 `SEO`，且 `gitment` 评论对中文链接也不支持。我们可以用 [hexo-permalink-pinyin](https://github.com/viko16/hexo-permalink-pinyin) Hexo 插件使在生成文章时生成中文拼音的永久链接。\n这里为可选安装，因为我希望使用`urlname`进行连接访问，中文链接转拼音由一个缺点就是当文章名字过长会显示十分臃肿。`urlname`的方式见下文。\n安装命令如下：\n\n```javascript\nnpm i hexo-permalink-pinyin --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```javascript\npermalink_pinyin:\n  enable: true\n  separator: '-' # default: '-'\n```\n\n> **注**：除了此插件外，[hexo-abbrlink](https://github.com/rozbo/hexo-abbrlink) 插件也可以生成非中文的链接。\n\n###\n\n###\n\n### 添加 emoji 表情支持（可选安装）\n\n本主题新增了对`emoji`表情的支持，使用到了 [hexo-filter-github-emojis](https://npm.taobao.org/package/hexo-filter-github-emojis) 的 Hexo 插件来支持 `emoji`表情的生成，把对应的`markdown emoji`语法（`::`,例如：`:smile:`）转变成会跳跃的`emoji`表情，安装命令如下：\n\n```javascript\nnpm install hexo-filter-github-emojis --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```javascript\ngithubEmojis:\n  enable: true\n  className: github-emoji\n  inject: true\n  styles:\n  customEmojis:\n```\n\n### deploy 发布插件（可选安装）（部署到 github 需要安装）\n\n如果你想通过`deploy`的方式进行推送`public文件夹`到托管网站，你需要安装\n\n```javascript\nnpm install hexo-deployer-git --save\n```\n\n当然你也可以选择不装，使用 Github Actions、docker 等方式\n执行 `hexo clean && hexo g` 重新生成博客文件，然后在 `public` 文件夹中即可看到 `atom.xml` 文件，说明你已经安装成功了。\n\n### 添加 [DaoVoice](http://www.daovoice.io/) 在线聊天功能（可选的）\n\n前往 [DaoVoice](http://www.daovoice.io/) 官网注册并且获取 `app_id`，并将 `app_id` 填入主题的 `_config.yml` 文件中。\n\n### 添加 [Tidio](https://www.tidio.com/) 在线聊天功能（可选的）\n\n前往 [Tidio](https://www.tidio.com/) 官网注册并且获取 `Public Key`，并将 `Public Key` 填入主题的 `_config.yml` 文件中。\n\n### 修改页脚\n\n页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 ` /layout/_partial/footer.ej``s ` 文件中，包括站点、使用的主题、访问量等。\n\n### 修改社交链接\n\n在主题的 `_config.yml` 文件中，默认支持 `QQ`、`GitHub` 和邮箱等的配置，你可以在主题文件的 `/layout/_partial/social-link.ejs` 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：\n\n```javascript\n<% if (theme.socialLink.github) { %>\n    <a href=\"<%= theme.socialLink.github %>\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的GitHub\" data-position=\"top\" data-delay=\"50\">\n        <i class=\"fab fa-github\"></i>\n    </a>\n<% } %>\n```\n\n其中，社交图标（如：`fa-github`）你可以在 [Font Awesome](https://fontawesome.com/icons) 中搜索找到。以下是常用社交图标的标识，供你参考：\n\n- Facebook: `fab fa-facebook`\n- Twitter: `fab fa-twitter`\n- Google-plus: `fab fa-google-plus`\n- Linkedin: `fab fa-linkedin`\n- Tumblr: `fab fa-tumblr`\n- Medium: `fab fa-medium`\n- Slack: `fab fa-slack`\n- Sina Weibo: `fab fa-weibo`\n- Wechat: `fab fa-weixin`\n- QQ: `fab fa-qq`\n- Zhihu: `fab fa-zhihu`\n  > **注意**: 本主题中使用的 `Font Awesome` 版本为 `5.11.0`。\n\n### 修改打赏的二维码图片\n\n在主题文件的 `source/medias/reward` 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。\n\n### 配置音乐播放器（可选的）\n\n要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。\n首先，在你的博客 `source` 目录下的 `_data` 目录（没有的话就新建一个）中新建 `musics.json` 文件，文件内容如下所示：\n\n```javascript\n[\n  {\n    name: \"五月雨变奏电音\",\n    artist: \"AnimeVibe\",\n    url: \"http://xxx.com/music1.mp3\",\n    cover: \"http://xxx.com/music-cover1.png\",\n  },\n  {\n    name: \"Take me hand\",\n    artist: \"DAISHI DANCE,Cecile Corbel\",\n    url: \"/medias/music/music2.mp3\",\n    cover: \"/medias/music/cover2.png\",\n  },\n  {\n    name: \"Shape of You\",\n    artist: \"J.Fla\",\n    url: \"http://xxx.com/music3.mp3\",\n    cover: \"http://xxx.com/music-cover3.png\",\n  },\n];\n```\n\n> **注**：以上 JSON 中的属性：`name`、`artist`、`url`、`cover` 分别表示音乐的名称、作者、音乐文件地址、音乐封面。\n\n然后，在主题的 `_config.yml` 配置文件中激活配置即可：\n\n# 是否在首页显示音乐.\n\n```javascript\n# 是否在首页显示音乐.\nmusic:\n  enable: true\n  showTitle: false\n  title: 听听音乐\n  fixed: false # 是否开启吸底模式\n  autoplay: false # 是否自动播放\n  theme: '#42b983'\n  loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none'\n  order: 'list' # 音频循环顺序, 可选值: 'list', 'random'\n  preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto'\n  volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效\n  listFolded: false # 列表默认折叠\n  listMaxHeight: # 列表最大高度\n```\n\n### 文章 Front-matter 介绍\n\n1. **直接将`themes/halo/config/scaffolds`内所有内容拷贝到\\*\\***`Hexo`根目录下\\***\\*的`scaffolds`文件夹内替换**\n1. 或者自己重新修改，修改请参考下面\n\n### Front-matter 选项详解\n\n`Front-matter` 选项中的所有内容均为**非必填**的。但我仍然建议至少填写 `title` 、`urlname` 和 `date` 的值。\n\n| 配置选项         | 默认值                         | 描述                                                                                                                                                                                       |\n| ---------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| title            | `Markdown` 的文件标题          | 文章标题，强烈建议填写此选项                                                                                                                                                               |\n| date             | 文件创建时的日期时间           | 发布时间，强烈建议填写此选项，且最好保证全局唯一                                                                                                                                           |\n| author           | 根 `_config.yml` 中的 `author` | 文章作者                                                                                                                                                                                   |\n| img              | `featureImages` 中的某个值     | 文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: `[http://xxx.com/xxx.jpg](http://xxx.com/xxx.jpg)`                                                                    |\n| top              | `true`                         | 推荐文章（文章是否置顶），如果 `top` 值为 `true`，则会作为首页推荐文章                                                                                                                     |\n| cover            | `false`                        | `v1.0.2`版本新增，表示该文章是否需要加入到首页轮播封面中                                                                                                                                   |\n| coverImg         | 无                             | `v1.0.2`版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片                                                                                           |\n| password         | 无                             | 文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 `password` 的值，该值必须是用 `SHA256` 加密后的密码，防止被他人识破。前提是在主题的 `config.yml` 中激活了 `verifyPassword` 选项 |\n| urlname          | index                          | 文章访问路径，需要在`Hexo`根目录下`_config.yml`文件中使用`permalink: :urlname/`和`permalink_defaults:`                                                                                     |\n| `urlname: index` |\n| toc              | `true`                         | permalink_defaults:是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 `config.yml` 中激活了 `toc` 选项                                                                      |\n| mathjax          | `false`                        | urlname: index 是否开启数学公式支持 ，本文章是否开启 `mathjax`，且需要在主题的 `_config.yml` 文件中也需要开启才行                                                                          |\n| summary          | 无                             | 文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要                                                                     |\n| categories       | 无                             | 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类                                                                                                                           |\n| tags             | 无                             | 文章标签，一篇文章可以多个标签                                                                                                                                                             |\n| keywords         | 文章标题                       | 文章关键字，SEO 时需要                                                                                                                                                                     |\n| reprintPolicy    | cc_by                          | 文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个                                                                        |\n\n> **注意**:\n>\n> 1. 如果 `img` 属性不填写的话，文章特色图会根据文章标题的 `hashcode` 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图**各有特色**。\n> 1. `date` 的值尽量保证每篇文章是唯一的，因为本主题中 `Gitalk` 和 `Gitment` 识别 `id` 是通过 `date` 的值来作为唯一标识的。\n> 1. 如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 `_config.yml` 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：[开源中国在线工具](http://tool.oschina.net/encrypt?type=2)、[chahuo](http://encode.chahuo.com/)、[站长工具](http://tool.chinaz.com/tools/hash.aspx)。\n> 1. 您可以在文章 md 文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则\n\n以下为文章的 `Front-matter` 示例。\n\n### 自定制修改\n\n在本主题的 `_config.yml` 中可以修改部分自定义信息，有以下几个部分：\n\n- 菜单\n- 我的梦想\n- 首页的音乐播放器和视频播放器配置\n- 是否显示推荐文章名称和按钮配置\n- `favicon` 和 `Logo`\n- 个人信息\n- TOC 目录\n- 文章打赏信息\n- 复制文章内容时追加版权信息\n- MathJax\n- 文章字数统计、阅读时长\n- 点击页面的'爱心'效果\n- 我的项目\n- 我的技能\n- 我的相册\n- `Gitalk`、`Gitment`、`Valine` 和 `disqus` 评论配置\n- [不蒜子统计](http://busuanzi.ibruce.info/)和谷歌分析（`Google Analytics`）\n- 默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 `hashcode` 值取余，来选择展示对应的特色图\n\n**我认为个人博客应该都有自己的风格和特色**。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 `_config.yml` 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：\n\n### 修改主题颜色\n\n在主题文件的 `/source/css/matery.css` 文件中，搜索 `.bg-color` 来修改背景颜色：\n\n```javascript\n/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */\n.bg-color {\n    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);\n}\n\n@-webkit-keyframes rainbow {\n   /* 动态切换背景颜色. */\n}\n\n@keyframes rainbow {\n    /* 动态切换背景颜色. */\n}\n```\n\n/\n\n### 修改 banner 图和文章特色图\n\n你可以直接在 `/source/medias/banner` 文件夹中更换你喜欢的 `banner` 图片，主题代码中是每天动态切换一张，只需 `7` 张即可。如果你会 `JavaScript` 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，`banner` 切换的代码位置在 `/layout/_partial/bg-cover-content.ejs` 文件的 `<script></script>` 代码中：\n\n```javascript\n$(\".bg-cover\").css(\n  \"background-image\",\n  \"url(/medias/banner/\" + new Date().getDay() + \".jpg)\"\n);\n```\n\n在 `/source/medias/featureimages` 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 `_config.yml` 做同步修改。\n\n### 修改文章访问路径 urlname\n\n在`Hexo`根目录`_config.yaml`中添加以下配置\n\n```\n# permalink: :year/:month/:day/:title/\npermalink: :urlname/\npermalink_defaults:\n  urlname: index\n```\n\n##\n\n### 全站 CDN\n\n> CDN 的全称是`Content Delivery Network`，即内容分发网络。CDN 是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。——百度百科\n\n放在 Github 的资源在国内加载速度比较慢，因此需要使用 CDN 加速来优化网站打开速度，jsDelivr + Github 便是免费且好用的 CDN，非常适合博客网站使用。\n\n用法：\n[https://cdn.jsdelivr.net/gh/](https://cdn.jsdelivr.net/gh/)你的用户名/你的仓库名@发布的版本号/文件路径\n\n如：\n[http://cdn.jsdelivr.net/gh/hongweifuture/hongweifuture.github.io/medias/featureimages/](http://cdn.jsdelivr.net/gh/hongweifuture/hongweifuture.github.io/medias/featureimages/)12.jpg\n注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，如果需要版本，请创建`releases`然后按照格式添加\n当然最直接的办法就是使用 `username/username.github.io/`\n","source":"_posts/yuque/wcgfp5.md","raw":"---\ntitle: 6&gt;hexo插件篇（必看）\nurlname: wcgfp5\ndate: 2020-05-01 18:00:28 +0800\ntags: []\ncategories: []\n---\n\n## 1>安装插件说明\n\n如果应用官网的主题你会发现，有可能出现打不开的情况，这是由于有些主题使用的插件，本地并没有安装导致的报错。所以本篇文章为补充说明篇。（无问题的可以跳过）\n\n## 2>常用的插件\n\n### 代码高亮（建议安装）\n\n由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 [hexo-prism-plugin](https://github.com/ele828/hexo-prism-plugin) 的 Hexo 插件来做代码高亮，安装命令如下：\n\n```javascript\nnpm i -S hexo-prism-plugin\n```\n\n然后，修改 Hexo 根目录下 `_config.yml` 文件中 `highlight.enable` 的值为 `false`，并新增 `prism` 插件相关的配置，主要配置如下：\n\n```javascript\nhighlight:\n  enable: false\n\nprism_plugin:\n  mode: 'preprocess'    # realtime/preprocess\n  theme: 'tomorrow'\n  line_number: false    # default false\n  custom_css:\n```\n\n### 搜索（建议安装）\n\n本主题中还使用到了 [hexo-generator-search](https://github.com/wzpan/hexo-generator-search) 的 Hexo 插件来做内容搜索，安装命令如下：\n\n```javascript\nnpm install hexo-generator-search --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```javascript\nsearch: path: search.xml;\nfield: post;\n```\n\n###\n\n### 文章字数统计插件（建议安装）（使用了 halo 主题则必须安装）\n\n如果你想要在文章中显示文章字数、阅读时长信息，可以安装 [hexo-wordcount](https://github.com/willin/hexo-wordcount)插件。安装命令如下：\n\n```javascript\nnpm i --save hexo-wordcount\n```\n\n然后只需在本主题下的 `_config.yml` 文件中，将各个文章字数相关的配置激活即可：\n(此处注意源文档的 postInfo 是错的，应该为 post_wordcount)\n\n```javascript\npost_wordcount:\n  date: true # 发布日期\n  update: true # 更新日期\n  wordCount: true # 文章字数统计\n  totalCount: true # 站点总文章字数\n  min2read: true # 文章阅读时长\n  readCount: true # 文章阅读次数\n```\n\n### 添加代码压缩（建议安装）\n\n[hexo-neat](https://github.com/rozbo/hexo-neat)插件实现压缩代码，底层是通过 gulp 来实现的。但是这个插件是有 Bug 的：\n\n- 压缩 md 文件会使 markdown 语法的代码块消失\n- 会删除全角空格\n\n在博客站点根目录执行安装代码：\n\n```\nnpm install hexo-neat --save\n```\n\n紧接着在站点根目录下的配置文件添加如下代码：\n\n```\nneat_enable: true\nneat_html:\n  enable: true\n  exclude:\nneat_css:\n  enable: true\n  exclude:\n    - '*.min.css'\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '*.min.js'\n```\n\n然后直接 hexo cl&&hexo g 就可以了，会自动压缩文件 。\n补充：为了解决以上 Bug，对于`halo`主题（其他主题自行解决）需要将以上默认配置修改为：\n\n```\n#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）\nneat_enable: true\nneat_html:\n  enable: true\n  exclude:\n    - '**/*.md'\nneat_css:\n  enable: true\n  exclude:\n    - '**/*.min.css'\nneat_js:\n  enable: true\n  mangle: true\n  output:\n  compress:\n  exclude:\n    - '**/*.min.js'\n    - '**/**/instantpage.js'\n    - '**/matery.js'\n```\n\n###\n\n### 外链跳转插件 hexo-external-link（可选安装）（使用了 halo 主题则必须安装）\n\n> [hexo-external-link](https://github.com/hvnobug/hexo-external-link)是一个跳转外链相关插件。自动为所有 html 文件中外链的 a 标签生成对应的属性。 比如 设置`target=’_blank’`, `rel=’external nofollow noopener noreferrer’`告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;\n\n安装:\n\n```javascript\nnpm install hexo-external-link --save\n```\n\n配置插件 在 Hexo 根目录的\\_config.yml 文件中添加如下配置。\n\n```javascript\nhexo_external_link:\n  enable: true\n  enable_base64_encode: true\n  url_param_name: 'u'\n  html_file_name: 'go.html'\n  target_blank: true\n  link_rel: 'external nofollow noopener noreferrer'\n  domain: 'your_domain' # 如果开启了防盗链\n  safety_chain: true\n```\n\n- enable：是否开启 hexo_external_link 插件 - 默认 false\n- enable_base64_encode：是否对跳转 url 使用 base64 编码 - 默认 fasle\n- url_param_name：url 参数名,在跳转到外链传递给 html_file_name 的参数名 - 默认 ‘u’\n- html_file_name：跳转到外链的页面文件路径 - 默认 'go.html'\n- target_blank：是否为外链的 a 标签添加 target='\\_blank' - 默认 true\n- link_rel：设置外链的 a 标签的 rel 属性 - 默认 'external nofollow noopener noreferrer'\n- domain：如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host\n- safety_chain：go.html 为了防止外链盗用 对域名进行的判断 - 默认 false 即关闭防盗链\n\n###\n\n### 添加 RSS 订阅支持（可选安装）（使用了 halo 主题则必须安装）\n\n本主题中还使用到了 [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed) 的 Hexo 插件来做 `RSS`，安装命令如下：\n\n```javascript\nnpm install hexo-generator-feed --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```javascript\nfeed: type: atom;\npath: atom.xml;\nlimit: 20;\nhub: content: content_limit: 140;\ncontent_limit_delim: \" \";\norder_by: -date;\n```\n\n### 添加 sitemap 站点地图（可选安装）（使用了 halo 主题则必须安装）\n\n本主题中还使用到了 [hexo-generator-sitemap](https://github.com/hexojs/hexo-generator-sitemap) 的 Hexo 插件来做 `Sitemap`，安装命令如下：\n\n```javascript\nnpm install hexo-generator-sitemap --save\n```\n\n访问地址：/sitemap.xml\n\n### 中文链接转拼音（可选安装）\n\n如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 `SEO`，且 `gitment` 评论对中文链接也不支持。我们可以用 [hexo-permalink-pinyin](https://github.com/viko16/hexo-permalink-pinyin) Hexo 插件使在生成文章时生成中文拼音的永久链接。\n这里为可选安装，因为我希望使用`urlname`进行连接访问，中文链接转拼音由一个缺点就是当文章名字过长会显示十分臃肿。`urlname`的方式见下文。\n安装命令如下：\n\n```javascript\nnpm i hexo-permalink-pinyin --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```javascript\npermalink_pinyin:\n  enable: true\n  separator: '-' # default: '-'\n```\n\n> **注**：除了此插件外，[hexo-abbrlink](https://github.com/rozbo/hexo-abbrlink) 插件也可以生成非中文的链接。\n\n###\n\n###\n\n### 添加 emoji 表情支持（可选安装）\n\n本主题新增了对`emoji`表情的支持，使用到了 [hexo-filter-github-emojis](https://npm.taobao.org/package/hexo-filter-github-emojis) 的 Hexo 插件来支持 `emoji`表情的生成，把对应的`markdown emoji`语法（`::`,例如：`:smile:`）转变成会跳跃的`emoji`表情，安装命令如下：\n\n```javascript\nnpm install hexo-filter-github-emojis --save\n```\n\n在 Hexo 根目录下的 `_config.yml` 文件中，新增以下的配置项：\n\n```javascript\ngithubEmojis:\n  enable: true\n  className: github-emoji\n  inject: true\n  styles:\n  customEmojis:\n```\n\n### deploy 发布插件（可选安装）（部署到 github 需要安装）\n\n如果你想通过`deploy`的方式进行推送`public文件夹`到托管网站，你需要安装\n\n```javascript\nnpm install hexo-deployer-git --save\n```\n\n当然你也可以选择不装，使用 Github Actions、docker 等方式\n执行 `hexo clean && hexo g` 重新生成博客文件，然后在 `public` 文件夹中即可看到 `atom.xml` 文件，说明你已经安装成功了。\n\n### 添加 [DaoVoice](http://www.daovoice.io/) 在线聊天功能（可选的）\n\n前往 [DaoVoice](http://www.daovoice.io/) 官网注册并且获取 `app_id`，并将 `app_id` 填入主题的 `_config.yml` 文件中。\n\n### 添加 [Tidio](https://www.tidio.com/) 在线聊天功能（可选的）\n\n前往 [Tidio](https://www.tidio.com/) 官网注册并且获取 `Public Key`，并将 `Public Key` 填入主题的 `_config.yml` 文件中。\n\n### 修改页脚\n\n页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 ` /layout/_partial/footer.ej``s ` 文件中，包括站点、使用的主题、访问量等。\n\n### 修改社交链接\n\n在主题的 `_config.yml` 文件中，默认支持 `QQ`、`GitHub` 和邮箱等的配置，你可以在主题文件的 `/layout/_partial/social-link.ejs` 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：\n\n```javascript\n<% if (theme.socialLink.github) { %>\n    <a href=\"<%= theme.socialLink.github %>\" class=\"tooltipped\" target=\"_blank\" data-tooltip=\"访问我的GitHub\" data-position=\"top\" data-delay=\"50\">\n        <i class=\"fab fa-github\"></i>\n    </a>\n<% } %>\n```\n\n其中，社交图标（如：`fa-github`）你可以在 [Font Awesome](https://fontawesome.com/icons) 中搜索找到。以下是常用社交图标的标识，供你参考：\n\n- Facebook: `fab fa-facebook`\n- Twitter: `fab fa-twitter`\n- Google-plus: `fab fa-google-plus`\n- Linkedin: `fab fa-linkedin`\n- Tumblr: `fab fa-tumblr`\n- Medium: `fab fa-medium`\n- Slack: `fab fa-slack`\n- Sina Weibo: `fab fa-weibo`\n- Wechat: `fab fa-weixin`\n- QQ: `fab fa-qq`\n- Zhihu: `fab fa-zhihu`\n  > **注意**: 本主题中使用的 `Font Awesome` 版本为 `5.11.0`。\n\n### 修改打赏的二维码图片\n\n在主题文件的 `source/medias/reward` 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。\n\n### 配置音乐播放器（可选的）\n\n要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。\n首先，在你的博客 `source` 目录下的 `_data` 目录（没有的话就新建一个）中新建 `musics.json` 文件，文件内容如下所示：\n\n```javascript\n[\n  {\n    name: \"五月雨变奏电音\",\n    artist: \"AnimeVibe\",\n    url: \"http://xxx.com/music1.mp3\",\n    cover: \"http://xxx.com/music-cover1.png\",\n  },\n  {\n    name: \"Take me hand\",\n    artist: \"DAISHI DANCE,Cecile Corbel\",\n    url: \"/medias/music/music2.mp3\",\n    cover: \"/medias/music/cover2.png\",\n  },\n  {\n    name: \"Shape of You\",\n    artist: \"J.Fla\",\n    url: \"http://xxx.com/music3.mp3\",\n    cover: \"http://xxx.com/music-cover3.png\",\n  },\n];\n```\n\n> **注**：以上 JSON 中的属性：`name`、`artist`、`url`、`cover` 分别表示音乐的名称、作者、音乐文件地址、音乐封面。\n\n然后，在主题的 `_config.yml` 配置文件中激活配置即可：\n\n# 是否在首页显示音乐.\n\n```javascript\n# 是否在首页显示音乐.\nmusic:\n  enable: true\n  showTitle: false\n  title: 听听音乐\n  fixed: false # 是否开启吸底模式\n  autoplay: false # 是否自动播放\n  theme: '#42b983'\n  loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none'\n  order: 'list' # 音频循环顺序, 可选值: 'list', 'random'\n  preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto'\n  volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效\n  listFolded: false # 列表默认折叠\n  listMaxHeight: # 列表最大高度\n```\n\n### 文章 Front-matter 介绍\n\n1. **直接将`themes/halo/config/scaffolds`内所有内容拷贝到\\*\\***`Hexo`根目录下\\***\\*的`scaffolds`文件夹内替换**\n1. 或者自己重新修改，修改请参考下面\n\n### Front-matter 选项详解\n\n`Front-matter` 选项中的所有内容均为**非必填**的。但我仍然建议至少填写 `title` 、`urlname` 和 `date` 的值。\n\n| 配置选项         | 默认值                         | 描述                                                                                                                                                                                       |\n| ---------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| title            | `Markdown` 的文件标题          | 文章标题，强烈建议填写此选项                                                                                                                                                               |\n| date             | 文件创建时的日期时间           | 发布时间，强烈建议填写此选项，且最好保证全局唯一                                                                                                                                           |\n| author           | 根 `_config.yml` 中的 `author` | 文章作者                                                                                                                                                                                   |\n| img              | `featureImages` 中的某个值     | 文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: `[http://xxx.com/xxx.jpg](http://xxx.com/xxx.jpg)`                                                                    |\n| top              | `true`                         | 推荐文章（文章是否置顶），如果 `top` 值为 `true`，则会作为首页推荐文章                                                                                                                     |\n| cover            | `false`                        | `v1.0.2`版本新增，表示该文章是否需要加入到首页轮播封面中                                                                                                                                   |\n| coverImg         | 无                             | `v1.0.2`版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片                                                                                           |\n| password         | 无                             | 文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 `password` 的值，该值必须是用 `SHA256` 加密后的密码，防止被他人识破。前提是在主题的 `config.yml` 中激活了 `verifyPassword` 选项 |\n| urlname          | index                          | 文章访问路径，需要在`Hexo`根目录下`_config.yml`文件中使用`permalink: :urlname/`和`permalink_defaults:`                                                                                     |\n| `urlname: index` |\n| toc              | `true`                         | permalink_defaults:是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 `config.yml` 中激活了 `toc` 选项                                                                      |\n| mathjax          | `false`                        | urlname: index 是否开启数学公式支持 ，本文章是否开启 `mathjax`，且需要在主题的 `_config.yml` 文件中也需要开启才行                                                                          |\n| summary          | 无                             | 文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要                                                                     |\n| categories       | 无                             | 文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类                                                                                                                           |\n| tags             | 无                             | 文章标签，一篇文章可以多个标签                                                                                                                                                             |\n| keywords         | 文章标题                       | 文章关键字，SEO 时需要                                                                                                                                                                     |\n| reprintPolicy    | cc_by                          | 文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个                                                                        |\n\n> **注意**:\n>\n> 1. 如果 `img` 属性不填写的话，文章特色图会根据文章标题的 `hashcode` 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图**各有特色**。\n> 1. `date` 的值尽量保证每篇文章是唯一的，因为本主题中 `Gitalk` 和 `Gitment` 识别 `id` 是通过 `date` 的值来作为唯一标识的。\n> 1. 如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 `_config.yml` 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：[开源中国在线工具](http://tool.oschina.net/encrypt?type=2)、[chahuo](http://encode.chahuo.com/)、[站长工具](http://tool.chinaz.com/tools/hash.aspx)。\n> 1. 您可以在文章 md 文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则\n\n以下为文章的 `Front-matter` 示例。\n\n### 自定制修改\n\n在本主题的 `_config.yml` 中可以修改部分自定义信息，有以下几个部分：\n\n- 菜单\n- 我的梦想\n- 首页的音乐播放器和视频播放器配置\n- 是否显示推荐文章名称和按钮配置\n- `favicon` 和 `Logo`\n- 个人信息\n- TOC 目录\n- 文章打赏信息\n- 复制文章内容时追加版权信息\n- MathJax\n- 文章字数统计、阅读时长\n- 点击页面的'爱心'效果\n- 我的项目\n- 我的技能\n- 我的相册\n- `Gitalk`、`Gitment`、`Valine` 和 `disqus` 评论配置\n- [不蒜子统计](http://busuanzi.ibruce.info/)和谷歌分析（`Google Analytics`）\n- 默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 `hashcode` 值取余，来选择展示对应的特色图\n\n**我认为个人博客应该都有自己的风格和特色**。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 `_config.yml` 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：\n\n### 修改主题颜色\n\n在主题文件的 `/source/css/matery.css` 文件中，搜索 `.bg-color` 来修改背景颜色：\n\n```javascript\n/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */\n.bg-color {\n    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);\n}\n\n@-webkit-keyframes rainbow {\n   /* 动态切换背景颜色. */\n}\n\n@keyframes rainbow {\n    /* 动态切换背景颜色. */\n}\n```\n\n/\n\n### 修改 banner 图和文章特色图\n\n你可以直接在 `/source/medias/banner` 文件夹中更换你喜欢的 `banner` 图片，主题代码中是每天动态切换一张，只需 `7` 张即可。如果你会 `JavaScript` 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，`banner` 切换的代码位置在 `/layout/_partial/bg-cover-content.ejs` 文件的 `<script></script>` 代码中：\n\n```javascript\n$(\".bg-cover\").css(\n  \"background-image\",\n  \"url(/medias/banner/\" + new Date().getDay() + \".jpg)\"\n);\n```\n\n在 `/source/medias/featureimages` 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 `_config.yml` 做同步修改。\n\n### 修改文章访问路径 urlname\n\n在`Hexo`根目录`_config.yaml`中添加以下配置\n\n```\n# permalink: :year/:month/:day/:title/\npermalink: :urlname/\npermalink_defaults:\n  urlname: index\n```\n\n##\n\n### 全站 CDN\n\n> CDN 的全称是`Content Delivery Network`，即内容分发网络。CDN 是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。——百度百科\n\n放在 Github 的资源在国内加载速度比较慢，因此需要使用 CDN 加速来优化网站打开速度，jsDelivr + Github 便是免费且好用的 CDN，非常适合博客网站使用。\n\n用法：\n[https://cdn.jsdelivr.net/gh/](https://cdn.jsdelivr.net/gh/)你的用户名/你的仓库名@发布的版本号/文件路径\n\n如：\n[http://cdn.jsdelivr.net/gh/hongweifuture/hongweifuture.github.io/medias/featureimages/](http://cdn.jsdelivr.net/gh/hongweifuture/hongweifuture.github.io/medias/featureimages/)12.jpg\n注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，如果需要版本，请创建`releases`然后按照格式添加\n当然最直接的办法就是使用 `username/username.github.io/`\n","slug":"yuque/wcgfp5","published":1,"updated":"2020-05-04T14:22:50.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9skrav7000b4jnlh1ryh0qf","content":"<h2 id=\"1-gt-安装插件说明\"><a href=\"#1-gt-安装插件说明\" class=\"headerlink\" title=\"1&gt;安装插件说明\"></a>1&gt;安装插件说明</h2><p>如果应用官网的主题你会发现，有可能出现打不开的情况，这是由于有些主题使用的插件，本地并没有安装导致的报错。所以本篇文章为补充说明篇。（无问题的可以跳过）</p>\n<h2 id=\"2-gt-常用的插件\"><a href=\"#2-gt-常用的插件\" class=\"headerlink\" title=\"2&gt;常用的插件\"></a>2&gt;常用的插件</h2><h3 id=\"代码高亮（建议安装）\"><a href=\"#代码高亮（建议安装）\" class=\"headerlink\" title=\"代码高亮（建议安装）\"></a>代码高亮（建议安装）</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href=\"https://github.com/ele828/hexo-prism-plugin\" target=\"_blank\" rel=\"noopener\">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -S hexo-prism-plugin</span><br></pre></td></tr></table></figure>\n\n<p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">highlight:</span><br><span class=\"line\">  enable: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">prism_plugin:</span><br><span class=\"line\">  mode: 'preprocess'    # realtime/preprocess</span><br><span class=\"line\">  theme: <span class=\"string\">'tomorrow'</span></span><br><span class=\"line\">  line_number: false    # default false</span><br><span class=\"line\">  custom_css:</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搜索（建议安装）\"><a href=\"#搜索（建议安装）\" class=\"headerlink\" title=\"搜索（建议安装）\"></a>搜索（建议安装）</h3><p>本主题中还使用到了 <a href=\"https://github.com/wzpan/hexo-generator-search\" target=\"_blank\" rel=\"noopener\">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search: path: search.xml;</span><br><span class=\"line\">field: post;</span><br></pre></td></tr></table></figure>\n\n<p>###</p>\n<h3 id=\"文章字数统计插件（建议安装）（使用了-halo-主题则必须安装）\"><a href=\"#文章字数统计插件（建议安装）（使用了-halo-主题则必须安装）\" class=\"headerlink\" title=\"文章字数统计插件（建议安装）（使用了 halo 主题则必须安装）\"></a>文章字数统计插件（建议安装）（使用了 halo 主题则必须安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href=\"https://github.com/willin/hexo-wordcount\" target=\"_blank\" rel=\"noopener\">hexo-wordcount</a>插件。安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure>\n\n<p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：<br>(此处注意源文档的 postInfo 是错的，应该为 post_wordcount)</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_wordcount:</span><br><span class=\"line\">  date: true # 发布日期</span><br><span class=\"line\">  update: true # 更新日期</span><br><span class=\"line\">  wordCount: true # 文章字数统计</span><br><span class=\"line\">  totalCount: true # 站点总文章字数</span><br><span class=\"line\">  min2read: true # 文章阅读时长</span><br><span class=\"line\">  readCount: true # 文章阅读次数</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加代码压缩（建议安装）\"><a href=\"#添加代码压缩（建议安装）\" class=\"headerlink\" title=\"添加代码压缩（建议安装）\"></a>添加代码压缩（建议安装）</h3><p><a href=\"https://github.com/rozbo/hexo-neat\" target=\"_blank\" rel=\"noopener\">hexo-neat</a>插件实现压缩代码，底层是通过 gulp 来实现的。但是这个插件是有 Bug 的：</p>\n<ul>\n<li>压缩 md 文件会使 markdown 语法的代码块消失</li>\n<li>会删除全角空格</li>\n</ul>\n<p>在博客站点根目录执行安装代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>\n\n<p>紧接着在站点根目录下的配置文件添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">neat_enable: true</span><br><span class=\"line\">neat_html:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">neat_css:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#39;*.min.css&#39;</span><br><span class=\"line\">neat_js:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mangle: true</span><br><span class=\"line\">  output:</span><br><span class=\"line\">  compress:</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#39;*.min.js&#39;</span><br></pre></td></tr></table></figure>\n\n<p>然后直接 hexo cl&amp;&amp;hexo g 就可以了，会自动压缩文件 。<br>补充：为了解决以上 Bug，对于<code>halo</code>主题（其他主题自行解决）需要将以上默认配置修改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）</span><br><span class=\"line\">neat_enable: true</span><br><span class=\"line\">neat_html:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#39;**&#x2F;*.md&#39;</span><br><span class=\"line\">neat_css:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#39;**&#x2F;*.min.css&#39;</span><br><span class=\"line\">neat_js:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mangle: true</span><br><span class=\"line\">  output:</span><br><span class=\"line\">  compress:</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#39;**&#x2F;*.min.js&#39;</span><br><span class=\"line\">    - &#39;**&#x2F;**&#x2F;instantpage.js&#39;</span><br><span class=\"line\">    - &#39;**&#x2F;matery.js&#39;</span><br></pre></td></tr></table></figure>\n\n<p>###</p>\n<h3 id=\"外链跳转插件-hexo-external-link（可选安装）（使用了-halo-主题则必须安装）\"><a href=\"#外链跳转插件-hexo-external-link（可选安装）（使用了-halo-主题则必须安装）\" class=\"headerlink\" title=\"外链跳转插件 hexo-external-link（可选安装）（使用了 halo 主题则必须安装）\"></a>外链跳转插件 hexo-external-link（可选安装）（使用了 halo 主题则必须安装）</h3><blockquote>\n<p><a href=\"https://github.com/hvnobug/hexo-external-link\" target=\"_blank\" rel=\"noopener\">hexo-external-link</a>是一个跳转外链相关插件。自动为所有 html 文件中外链的 a 标签生成对应的属性。 比如 设置<code>target=’_blank’</code>, <code>rel=’external nofollow noopener noreferrer’</code>告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p>\n</blockquote>\n<p>安装:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-external-link --save</span><br></pre></td></tr></table></figure>\n\n<p>配置插件 在 Hexo 根目录的_config.yml 文件中添加如下配置。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo_external_link:</span><br><span class=\"line\">  enable: <span class=\"literal\">true</span></span><br><span class=\"line\">  enable_base64_encode: <span class=\"literal\">true</span></span><br><span class=\"line\">  url_param_name: <span class=\"string\">'u'</span></span><br><span class=\"line\">  html_file_name: <span class=\"string\">'go.html'</span></span><br><span class=\"line\">  target_blank: <span class=\"literal\">true</span></span><br><span class=\"line\">  link_rel: <span class=\"string\">'external nofollow noopener noreferrer'</span></span><br><span class=\"line\">  domain: 'your_domain' # 如果开启了防盗链</span><br><span class=\"line\">  safety_chain: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>enable：是否开启 hexo_external_link 插件 - 默认 false</li>\n<li>enable_base64_encode：是否对跳转 url 使用 base64 编码 - 默认 fasle</li>\n<li>url_param_name：url 参数名,在跳转到外链传递给 html_file_name 的参数名 - 默认 ‘u’</li>\n<li>html_file_name：跳转到外链的页面文件路径 - 默认 ‘go.html’</li>\n<li>target_blank：是否为外链的 a 标签添加 target=’_blank’ - 默认 true</li>\n<li>link_rel：设置外链的 a 标签的 rel 属性 - 默认 ‘external nofollow noopener noreferrer’</li>\n<li>domain：如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host</li>\n<li>safety_chain：go.html 为了防止外链盗用 对域名进行的判断 - 默认 false 即关闭防盗链</li>\n</ul>\n<p>###</p>\n<h3 id=\"添加-RSS-订阅支持（可选安装）（使用了-halo-主题则必须安装）\"><a href=\"#添加-RSS-订阅支持（可选安装）（使用了-halo-主题则必须安装）\" class=\"headerlink\" title=\"添加 RSS 订阅支持（可选安装）（使用了 halo 主题则必须安装）\"></a>添加 RSS 订阅支持（可选安装）（使用了 halo 主题则必须安装）</h3><p>本主题中还使用到了 <a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feed: type: atom;</span><br><span class=\"line\">path: atom.xml;</span><br><span class=\"line\">limit: <span class=\"number\">20</span>;</span><br><span class=\"line\">hub: content: content_limit: <span class=\"number\">140</span>;</span><br><span class=\"line\">content_limit_delim: <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">order_by: -date;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加-sitemap-站点地图（可选安装）（使用了-halo-主题则必须安装）\"><a href=\"#添加-sitemap-站点地图（可选安装）（使用了-halo-主题则必须安装）\" class=\"headerlink\" title=\"添加 sitemap 站点地图（可选安装）（使用了 halo 主题则必须安装）\"></a>添加 sitemap 站点地图（可选安装）（使用了 halo 主题则必须安装）</h3><p>本主题中还使用到了 <a href=\"https://github.com/hexojs/hexo-generator-sitemap\" target=\"_blank\" rel=\"noopener\">hexo-generator-sitemap</a> 的 Hexo 插件来做 <code>Sitemap</code>，安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n\n<p>访问地址：/sitemap.xml</p>\n<h3 id=\"中文链接转拼音（可选安装）\"><a href=\"#中文链接转拼音（可选安装）\" class=\"headerlink\" title=\"中文链接转拼音（可选安装）\"></a>中文链接转拼音（可选安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href=\"https://github.com/viko16/hexo-permalink-pinyin\" target=\"_blank\" rel=\"noopener\">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。<br>这里为可选安装，因为我希望使用<code>urlname</code>进行连接访问，中文链接转拼音由一个缺点就是当文章名字过长会显示十分臃肿。<code>urlname</code>的方式见下文。<br>安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">permalink_pinyin:</span><br><span class=\"line\">  enable: <span class=\"literal\">true</span></span><br><span class=\"line\">  separator: '-' # default: '-'</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>注</strong>：除了此插件外，<a href=\"https://github.com/rozbo/hexo-abbrlink\" target=\"_blank\" rel=\"noopener\">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p>\n</blockquote>\n<p>###</p>\n<p>###</p>\n<h3 id=\"添加-emoji-表情支持（可选安装）\"><a href=\"#添加-emoji-表情支持（可选安装）\" class=\"headerlink\" title=\"添加 emoji 表情支持（可选安装）\"></a>添加 emoji 表情支持（可选安装）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href=\"https://npm.taobao.org/package/hexo-filter-github-emojis\" target=\"_blank\" rel=\"noopener\">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">githubEmojis:</span><br><span class=\"line\">  enable: <span class=\"literal\">true</span></span><br><span class=\"line\">  className: github-emoji</span><br><span class=\"line\">  inject: <span class=\"literal\">true</span></span><br><span class=\"line\">  styles:</span><br><span class=\"line\">  customEmojis:</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"deploy-发布插件（可选安装）（部署到-github-需要安装）\"><a href=\"#deploy-发布插件（可选安装）（部署到-github-需要安装）\" class=\"headerlink\" title=\"deploy 发布插件（可选安装）（部署到 github 需要安装）\"></a>deploy 发布插件（可选安装）（部署到 github 需要安装）</h3><p>如果你想通过<code>deploy</code>的方式进行推送<code>public文件夹</code>到托管网站，你需要安装</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>当然你也可以选择不装，使用 Github Actions、docker 等方式<br>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p>\n<h3 id=\"添加-DaoVoice-在线聊天功能（可选的）\"><a href=\"#添加-DaoVoice-在线聊天功能（可选的）\" class=\"headerlink\" title=\"添加 DaoVoice 在线聊天功能（可选的）\"></a>添加 <a href=\"http://www.daovoice.io/\" target=\"_blank\" rel=\"noopener\">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href=\"http://www.daovoice.io/\" target=\"_blank\" rel=\"noopener\">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p>\n<h3 id=\"添加-Tidio-在线聊天功能（可选的）\"><a href=\"#添加-Tidio-在线聊天功能（可选的）\" class=\"headerlink\" title=\"添加 Tidio 在线聊天功能（可选的）\"></a>添加 <a href=\"https://www.tidio.com/\" target=\"_blank\" rel=\"noopener\">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href=\"https://www.tidio.com/\" target=\"_blank\" rel=\"noopener\">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p>\n<h3 id=\"修改页脚\"><a href=\"#修改页脚\" class=\"headerlink\" title=\"修改页脚\"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ej``s</code> 文件中，包括站点、使用的主题、访问量等。</p>\n<h3 id=\"修改社交链接\"><a href=\"#修改社交链接\" class=\"headerlink\" title=\"修改社交链接\"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (theme.socialLink.github) &#123; %&gt;</span><br><span class=\"line\">    &lt;a href=<span class=\"string\">\"&lt;%= theme.socialLink.github %&gt;\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"tooltipped\"</span> target=<span class=\"string\">\"_blank\"</span> data-tooltip=<span class=\"string\">\"访问我的GitHub\"</span> data-position=<span class=\"string\">\"top\"</span> data-delay=<span class=\"string\">\"50\"</span>&gt;</span><br><span class=\"line\">        &lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fab fa-github\"</span>&gt;&lt;<span class=\"regexp\">/i&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>a&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n\n<p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href=\"https://fontawesome.com/icons\" target=\"_blank\" rel=\"noopener\">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p>\n<ul>\n<li>Facebook: <code>fab fa-facebook</code></li>\n<li>Twitter: <code>fab fa-twitter</code></li>\n<li>Google-plus: <code>fab fa-google-plus</code></li>\n<li>Linkedin: <code>fab fa-linkedin</code></li>\n<li>Tumblr: <code>fab fa-tumblr</code></li>\n<li>Medium: <code>fab fa-medium</code></li>\n<li>Slack: <code>fab fa-slack</code></li>\n<li>Sina Weibo: <code>fab fa-weibo</code></li>\n<li>Wechat: <code>fab fa-weixin</code></li>\n<li>QQ: <code>fab fa-qq</code></li>\n<li>Zhihu: <code>fab fa-zhihu</code><blockquote>\n<p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"修改打赏的二维码图片\"><a href=\"#修改打赏的二维码图片\" class=\"headerlink\" title=\"修改打赏的二维码图片\"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p>\n<h3 id=\"配置音乐播放器（可选的）\"><a href=\"#配置音乐播放器（可选的）\" class=\"headerlink\" title=\"配置音乐播放器（可选的）\"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。<br>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"五月雨变奏电音\"</span>,</span><br><span class=\"line\">    artist: <span class=\"string\">\"AnimeVibe\"</span>,</span><br><span class=\"line\">    url: <span class=\"string\">\"http://xxx.com/music1.mp3\"</span>,</span><br><span class=\"line\">    cover: <span class=\"string\">\"http://xxx.com/music-cover1.png\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"Take me hand\"</span>,</span><br><span class=\"line\">    artist: <span class=\"string\">\"DAISHI DANCE,Cecile Corbel\"</span>,</span><br><span class=\"line\">    url: <span class=\"string\">\"/medias/music/music2.mp3\"</span>,</span><br><span class=\"line\">    cover: <span class=\"string\">\"/medias/music/cover2.png\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"Shape of You\"</span>,</span><br><span class=\"line\">    artist: <span class=\"string\">\"J.Fla\"</span>,</span><br><span class=\"line\">    url: <span class=\"string\">\"http://xxx.com/music3.mp3\"</span>,</span><br><span class=\"line\">    cover: <span class=\"string\">\"http://xxx.com/music-cover3.png\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>注</strong>：以上 JSON 中的属性：<code>name</code>、<code>artist</code>、<code>url</code>、<code>cover</code> 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p>\n</blockquote>\n<p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p>\n<h1 id=\"是否在首页显示音乐\"><a href=\"#是否在首页显示音乐\" class=\"headerlink\" title=\"是否在首页显示音乐.\"></a>是否在首页显示音乐.</h1><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 是否在首页显示音乐.</span><br><span class=\"line\">music:</span><br><span class=\"line\">  enable: <span class=\"literal\">true</span></span><br><span class=\"line\">  showTitle: <span class=\"literal\">false</span></span><br><span class=\"line\">  title: 听听音乐</span><br><span class=\"line\">  fixed: false # 是否开启吸底模式</span><br><span class=\"line\">  autoplay: false # 是否自动播放</span><br><span class=\"line\">  theme: <span class=\"string\">'#42b983'</span></span><br><span class=\"line\">  loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none'</span><br><span class=\"line\">  order: 'list' # 音频循环顺序, 可选值: 'list', 'random'</span><br><span class=\"line\">  preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto'</span><br><span class=\"line\">  volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span><br><span class=\"line\">  listFolded: false # 列表默认折叠</span><br><span class=\"line\">  listMaxHeight: # 列表最大高度</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文章-Front-matter-介绍\"><a href=\"#文章-Front-matter-介绍\" class=\"headerlink\" title=\"文章 Front-matter 介绍\"></a>文章 Front-matter 介绍</h3><ol>\n<li><strong>直接将<code>themes/halo/config/scaffolds</code>内所有内容拷贝到**</strong><code>Hexo</code>根目录下*<strong>*的<code>scaffolds</code>文件夹内替换</strong></li>\n<li>或者自己重新修改，修改请参考下面</li>\n</ol>\n<h3 id=\"Front-matter-选项详解\"><a href=\"#Front-matter-选项详解\" class=\"headerlink\" title=\"Front-matter 选项详解\"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 、<code>urlname</code> 和 <code>date</code> 的值。</p>\n<table>\n<thead>\n<tr>\n<th>配置选项</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td><code>Markdown</code> 的文件标题</td>\n<td>文章标题，强烈建议填写此选项</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件创建时的日期时间</td>\n<td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td>\n</tr>\n<tr>\n<td>author</td>\n<td>根 <code>_config.yml</code> 中的 <code>author</code></td>\n<td>文章作者</td>\n</tr>\n<tr>\n<td>img</td>\n<td><code>featureImages</code> 中的某个值</td>\n<td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>[http://xxx.com/xxx.jpg](http://xxx.com/xxx.jpg)</code></td>\n</tr>\n<tr>\n<td>top</td>\n<td><code>true</code></td>\n<td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td>\n</tr>\n<tr>\n<td>cover</td>\n<td><code>false</code></td>\n<td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td>\n</tr>\n<tr>\n<td>coverImg</td>\n<td>无</td>\n<td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td>\n</tr>\n<tr>\n<td>password</td>\n<td>无</td>\n<td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td>\n</tr>\n<tr>\n<td>urlname</td>\n<td>index</td>\n<td>文章访问路径，需要在<code>Hexo</code>根目录下<code>_config.yml</code>文件中使用<code>permalink: :urlname/</code>和<code>permalink_defaults:</code></td>\n</tr>\n<tr>\n<td><code>urlname: index</code></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>toc</td>\n<td><code>true</code></td>\n<td>permalink_defaults:是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td>\n</tr>\n<tr>\n<td>mathjax</td>\n<td><code>false</code></td>\n<td>urlname: index 是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td>\n</tr>\n<tr>\n<td>summary</td>\n<td>无</td>\n<td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td>\n</tr>\n<tr>\n<td>categories</td>\n<td>无</td>\n<td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td>\n</tr>\n<tr>\n<td>tags</td>\n<td>无</td>\n<td>文章标签，一篇文章可以多个标签</td>\n</tr>\n<tr>\n<td>keywords</td>\n<td>文章标题</td>\n<td>文章关键字，SEO 时需要</td>\n</tr>\n<tr>\n<td>reprintPolicy</td>\n<td>cc_by</td>\n<td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>注意</strong>:</p>\n<ol>\n<li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li>\n<li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li>\n<li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href=\"http://tool.oschina.net/encrypt?type=2\" target=\"_blank\" rel=\"noopener\">开源中国在线工具</a>、<a href=\"http://encode.chahuo.com/\" target=\"_blank\" rel=\"noopener\">chahuo</a>、<a href=\"http://tool.chinaz.com/tools/hash.aspx\" target=\"_blank\" rel=\"noopener\">站长工具</a>。</li>\n<li>您可以在文章 md 文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li>\n</ol>\n</blockquote>\n<p>以下为文章的 <code>Front-matter</code> 示例。</p>\n<h3 id=\"自定制修改\"><a href=\"#自定制修改\" class=\"headerlink\" title=\"自定制修改\"></a>自定制修改</h3><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p>\n<ul>\n<li>菜单</li>\n<li>我的梦想</li>\n<li>首页的音乐播放器和视频播放器配置</li>\n<li>是否显示推荐文章名称和按钮配置</li>\n<li><code>favicon</code> 和 <code>Logo</code></li>\n<li>个人信息</li>\n<li>TOC 目录</li>\n<li>文章打赏信息</li>\n<li>复制文章内容时追加版权信息</li>\n<li>MathJax</li>\n<li>文章字数统计、阅读时长</li>\n<li>点击页面的’爱心’效果</li>\n<li>我的项目</li>\n<li>我的技能</li>\n<li>我的相册</li>\n<li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li>\n<li><a href=\"http://busuanzi.ibruce.info/\" target=\"_blank\" rel=\"noopener\">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li>\n<li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li>\n</ul>\n<p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p>\n<h3 id=\"修改主题颜色\"><a href=\"#修改主题颜色\" class=\"headerlink\" title=\"修改主题颜色\"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span></span><br><span class=\"line\">.bg-color &#123;</span><br><span class=\"line\">    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@-webkit-keyframes rainbow &#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 动态切换背景颜色. */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes rainbow &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 动态切换背景颜色. */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>/</p>\n<h3 id=\"修改-banner-图和文章特色图\"><a href=\"#修改-banner-图和文章特色图\" class=\"headerlink\" title=\"修改 banner 图和文章特色图\"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".bg-cover\"</span>).css(</span><br><span class=\"line\">  <span class=\"string\">\"background-image\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"url(/medias/banner/\"</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getDay() + <span class=\"string\">\".jpg)\"</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p>\n<h3 id=\"修改文章访问路径-urlname\"><a href=\"#修改文章访问路径-urlname\" class=\"headerlink\" title=\"修改文章访问路径 urlname\"></a>修改文章访问路径 urlname</h3><p>在<code>Hexo</code>根目录<code>_config.yaml</code>中添加以下配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class=\"line\">permalink: :urlname&#x2F;</span><br><span class=\"line\">permalink_defaults:</span><br><span class=\"line\">  urlname: index</span><br></pre></td></tr></table></figure>\n\n<p>##</p>\n<h3 id=\"全站-CDN\"><a href=\"#全站-CDN\" class=\"headerlink\" title=\"全站 CDN\"></a>全站 CDN</h3><blockquote>\n<p>CDN 的全称是<code>Content Delivery Network</code>，即内容分发网络。CDN 是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。——百度百科</p>\n</blockquote>\n<p>放在 Github 的资源在国内加载速度比较慢，因此需要使用 CDN 加速来优化网站打开速度，jsDelivr + Github 便是免费且好用的 CDN，非常适合博客网站使用。</p>\n<p>用法：<br><a href=\"https://cdn.jsdelivr.net/gh/\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/gh/</a>你的用户名/你的仓库名@发布的版本号/文件路径</p>\n<p>如：<br><a href=\"http://cdn.jsdelivr.net/gh/hongweifuture/hongweifuture.github.io/medias/featureimages/\" target=\"_blank\" rel=\"noopener\">http://cdn.jsdelivr.net/gh/hongweifuture/hongweifuture.github.io/medias/featureimages/</a>12.jpg<br>注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，如果需要版本，请创建<code>releases</code>然后按照格式添加<br>当然最直接的办法就是使用 <code>username/username.github.io/</code></p>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h2 id=\"1-gt-安装插件说明\"><a href=\"#1-gt-安装插件说明\" class=\"headerlink\" title=\"1&gt;安装插件说明\"></a>1&gt;安装插件说明</h2><p>如果应用官网的主题你会发现，有可能出现打不开的情况，这是由于有些主题使用的插件，本地并没有安装导致的报错。所以本篇文章为补充说明篇。（无问题的可以跳过）</p>\n<h2 id=\"2-gt-常用的插件\"><a href=\"#2-gt-常用的插件\" class=\"headerlink\" title=\"2&gt;常用的插件\"></a>2&gt;常用的插件</h2><h3 id=\"代码高亮（建议安装）\"><a href=\"#代码高亮（建议安装）\" class=\"headerlink\" title=\"代码高亮（建议安装）\"></a>代码高亮（建议安装）</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href=\"https://github.com/ele828/hexo-prism-plugin\" target=\"_blank\" rel=\"noopener\">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -S hexo-prism-plugin</span><br></pre></td></tr></table></figure>\n\n<p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">highlight:</span><br><span class=\"line\">  enable: <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">prism_plugin:</span><br><span class=\"line\">  mode: 'preprocess'    # realtime/preprocess</span><br><span class=\"line\">  theme: <span class=\"string\">'tomorrow'</span></span><br><span class=\"line\">  line_number: false    # default false</span><br><span class=\"line\">  custom_css:</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搜索（建议安装）\"><a href=\"#搜索（建议安装）\" class=\"headerlink\" title=\"搜索（建议安装）\"></a>搜索（建议安装）</h3><p>本主题中还使用到了 <a href=\"https://github.com/wzpan/hexo-generator-search\" target=\"_blank\" rel=\"noopener\">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search: path: search.xml;</span><br><span class=\"line\">field: post;</span><br></pre></td></tr></table></figure>\n\n<p>###</p>\n<h3 id=\"文章字数统计插件（建议安装）（使用了-halo-主题则必须安装）\"><a href=\"#文章字数统计插件（建议安装）（使用了-halo-主题则必须安装）\" class=\"headerlink\" title=\"文章字数统计插件（建议安装）（使用了 halo 主题则必须安装）\"></a>文章字数统计插件（建议安装）（使用了 halo 主题则必须安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href=\"https://github.com/willin/hexo-wordcount\" target=\"_blank\" rel=\"noopener\">hexo-wordcount</a>插件。安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure>\n\n<p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：<br>(此处注意源文档的 postInfo 是错的，应该为 post_wordcount)</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_wordcount:</span><br><span class=\"line\">  date: true # 发布日期</span><br><span class=\"line\">  update: true # 更新日期</span><br><span class=\"line\">  wordCount: true # 文章字数统计</span><br><span class=\"line\">  totalCount: true # 站点总文章字数</span><br><span class=\"line\">  min2read: true # 文章阅读时长</span><br><span class=\"line\">  readCount: true # 文章阅读次数</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加代码压缩（建议安装）\"><a href=\"#添加代码压缩（建议安装）\" class=\"headerlink\" title=\"添加代码压缩（建议安装）\"></a>添加代码压缩（建议安装）</h3><p><a href=\"https://github.com/rozbo/hexo-neat\" target=\"_blank\" rel=\"noopener\">hexo-neat</a>插件实现压缩代码，底层是通过 gulp 来实现的。但是这个插件是有 Bug 的：</p>\n<ul>\n<li>压缩 md 文件会使 markdown 语法的代码块消失</li>\n<li>会删除全角空格</li>\n</ul>\n<p>在博客站点根目录执行安装代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-neat --save</span><br></pre></td></tr></table></figure>\n\n<p>紧接着在站点根目录下的配置文件添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">neat_enable: true</span><br><span class=\"line\">neat_html:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">neat_css:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#39;*.min.css&#39;</span><br><span class=\"line\">neat_js:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mangle: true</span><br><span class=\"line\">  output:</span><br><span class=\"line\">  compress:</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#39;*.min.js&#39;</span><br></pre></td></tr></table></figure>\n\n<p>然后直接 hexo cl&amp;&amp;hexo g 就可以了，会自动压缩文件 。<br>补充：为了解决以上 Bug，对于<code>halo</code>主题（其他主题自行解决）需要将以上默认配置修改为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#hexo-neat 优化提速插件（去掉HTML、css、js的blank字符）</span><br><span class=\"line\">neat_enable: true</span><br><span class=\"line\">neat_html:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#39;**&#x2F;*.md&#39;</span><br><span class=\"line\">neat_css:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#39;**&#x2F;*.min.css&#39;</span><br><span class=\"line\">neat_js:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  mangle: true</span><br><span class=\"line\">  output:</span><br><span class=\"line\">  compress:</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - &#39;**&#x2F;*.min.js&#39;</span><br><span class=\"line\">    - &#39;**&#x2F;**&#x2F;instantpage.js&#39;</span><br><span class=\"line\">    - &#39;**&#x2F;matery.js&#39;</span><br></pre></td></tr></table></figure>\n\n<p>###</p>\n<h3 id=\"外链跳转插件-hexo-external-link（可选安装）（使用了-halo-主题则必须安装）\"><a href=\"#外链跳转插件-hexo-external-link（可选安装）（使用了-halo-主题则必须安装）\" class=\"headerlink\" title=\"外链跳转插件 hexo-external-link（可选安装）（使用了 halo 主题则必须安装）\"></a>外链跳转插件 hexo-external-link（可选安装）（使用了 halo 主题则必须安装）</h3><blockquote>\n<p><a href=\"https://github.com/hvnobug/hexo-external-link\" target=\"_blank\" rel=\"noopener\">hexo-external-link</a>是一个跳转外链相关插件。自动为所有 html 文件中外链的 a 标签生成对应的属性。 比如 设置<code>target=’_blank’</code>, <code>rel=’external nofollow noopener noreferrer’</code>告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p>\n</blockquote>\n<p>安装:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-external-link --save</span><br></pre></td></tr></table></figure>\n\n<p>配置插件 在 Hexo 根目录的_config.yml 文件中添加如下配置。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo_external_link:</span><br><span class=\"line\">  enable: <span class=\"literal\">true</span></span><br><span class=\"line\">  enable_base64_encode: <span class=\"literal\">true</span></span><br><span class=\"line\">  url_param_name: <span class=\"string\">'u'</span></span><br><span class=\"line\">  html_file_name: <span class=\"string\">'go.html'</span></span><br><span class=\"line\">  target_blank: <span class=\"literal\">true</span></span><br><span class=\"line\">  link_rel: <span class=\"string\">'external nofollow noopener noreferrer'</span></span><br><span class=\"line\">  domain: 'your_domain' # 如果开启了防盗链</span><br><span class=\"line\">  safety_chain: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>enable：是否开启 hexo_external_link 插件 - 默认 false</li>\n<li>enable_base64_encode：是否对跳转 url 使用 base64 编码 - 默认 fasle</li>\n<li>url_param_name：url 参数名,在跳转到外链传递给 html_file_name 的参数名 - 默认 ‘u’</li>\n<li>html_file_name：跳转到外链的页面文件路径 - 默认 ‘go.html’</li>\n<li>target_blank：是否为外链的 a 标签添加 target=’_blank’ - 默认 true</li>\n<li>link_rel：设置外链的 a 标签的 rel 属性 - 默认 ‘external nofollow noopener noreferrer’</li>\n<li>domain：如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host</li>\n<li>safety_chain：go.html 为了防止外链盗用 对域名进行的判断 - 默认 false 即关闭防盗链</li>\n</ul>\n<p>###</p>\n<h3 id=\"添加-RSS-订阅支持（可选安装）（使用了-halo-主题则必须安装）\"><a href=\"#添加-RSS-订阅支持（可选安装）（使用了-halo-主题则必须安装）\" class=\"headerlink\" title=\"添加 RSS 订阅支持（可选安装）（使用了 halo 主题则必须安装）\"></a>添加 RSS 订阅支持（可选安装）（使用了 halo 主题则必须安装）</h3><p>本主题中还使用到了 <a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feed: type: atom;</span><br><span class=\"line\">path: atom.xml;</span><br><span class=\"line\">limit: <span class=\"number\">20</span>;</span><br><span class=\"line\">hub: content: content_limit: <span class=\"number\">140</span>;</span><br><span class=\"line\">content_limit_delim: <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">order_by: -date;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"添加-sitemap-站点地图（可选安装）（使用了-halo-主题则必须安装）\"><a href=\"#添加-sitemap-站点地图（可选安装）（使用了-halo-主题则必须安装）\" class=\"headerlink\" title=\"添加 sitemap 站点地图（可选安装）（使用了 halo 主题则必须安装）\"></a>添加 sitemap 站点地图（可选安装）（使用了 halo 主题则必须安装）</h3><p>本主题中还使用到了 <a href=\"https://github.com/hexojs/hexo-generator-sitemap\" target=\"_blank\" rel=\"noopener\">hexo-generator-sitemap</a> 的 Hexo 插件来做 <code>Sitemap</code>，安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n\n<p>访问地址：/sitemap.xml</p>\n<h3 id=\"中文链接转拼音（可选安装）\"><a href=\"#中文链接转拼音（可选安装）\" class=\"headerlink\" title=\"中文链接转拼音（可选安装）\"></a>中文链接转拼音（可选安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href=\"https://github.com/viko16/hexo-permalink-pinyin\" target=\"_blank\" rel=\"noopener\">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。<br>这里为可选安装，因为我希望使用<code>urlname</code>进行连接访问，中文链接转拼音由一个缺点就是当文章名字过长会显示十分臃肿。<code>urlname</code>的方式见下文。<br>安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">permalink_pinyin:</span><br><span class=\"line\">  enable: <span class=\"literal\">true</span></span><br><span class=\"line\">  separator: '-' # default: '-'</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>注</strong>：除了此插件外，<a href=\"https://github.com/rozbo/hexo-abbrlink\" target=\"_blank\" rel=\"noopener\">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p>\n</blockquote>\n<p>###</p>\n<p>###</p>\n<h3 id=\"添加-emoji-表情支持（可选安装）\"><a href=\"#添加-emoji-表情支持（可选安装）\" class=\"headerlink\" title=\"添加 emoji 表情支持（可选安装）\"></a>添加 emoji 表情支持（可选安装）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href=\"https://npm.taobao.org/package/hexo-filter-github-emojis\" target=\"_blank\" rel=\"noopener\">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></table></figure>\n\n<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">githubEmojis:</span><br><span class=\"line\">  enable: <span class=\"literal\">true</span></span><br><span class=\"line\">  className: github-emoji</span><br><span class=\"line\">  inject: <span class=\"literal\">true</span></span><br><span class=\"line\">  styles:</span><br><span class=\"line\">  customEmojis:</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"deploy-发布插件（可选安装）（部署到-github-需要安装）\"><a href=\"#deploy-发布插件（可选安装）（部署到-github-需要安装）\" class=\"headerlink\" title=\"deploy 发布插件（可选安装）（部署到 github 需要安装）\"></a>deploy 发布插件（可选安装）（部署到 github 需要安装）</h3><p>如果你想通过<code>deploy</code>的方式进行推送<code>public文件夹</code>到托管网站，你需要安装</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>当然你也可以选择不装，使用 Github Actions、docker 等方式<br>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p>\n<h3 id=\"添加-DaoVoice-在线聊天功能（可选的）\"><a href=\"#添加-DaoVoice-在线聊天功能（可选的）\" class=\"headerlink\" title=\"添加 DaoVoice 在线聊天功能（可选的）\"></a>添加 <a href=\"http://www.daovoice.io/\" target=\"_blank\" rel=\"noopener\">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href=\"http://www.daovoice.io/\" target=\"_blank\" rel=\"noopener\">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p>\n<h3 id=\"添加-Tidio-在线聊天功能（可选的）\"><a href=\"#添加-Tidio-在线聊天功能（可选的）\" class=\"headerlink\" title=\"添加 Tidio 在线聊天功能（可选的）\"></a>添加 <a href=\"https://www.tidio.com/\" target=\"_blank\" rel=\"noopener\">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href=\"https://www.tidio.com/\" target=\"_blank\" rel=\"noopener\">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p>\n<h3 id=\"修改页脚\"><a href=\"#修改页脚\" class=\"headerlink\" title=\"修改页脚\"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ej``s</code> 文件中，包括站点、使用的主题、访问量等。</p>\n<h3 id=\"修改社交链接\"><a href=\"#修改社交链接\" class=\"headerlink\" title=\"修改社交链接\"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (theme.socialLink.github) &#123; %&gt;</span><br><span class=\"line\">    &lt;a href=<span class=\"string\">\"&lt;%= theme.socialLink.github %&gt;\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"tooltipped\"</span> target=<span class=\"string\">\"_blank\"</span> data-tooltip=<span class=\"string\">\"访问我的GitHub\"</span> data-position=<span class=\"string\">\"top\"</span> data-delay=<span class=\"string\">\"50\"</span>&gt;</span><br><span class=\"line\">        &lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fab fa-github\"</span>&gt;&lt;<span class=\"regexp\">/i&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>a&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n\n<p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href=\"https://fontawesome.com/icons\" target=\"_blank\" rel=\"noopener\">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p>\n<ul>\n<li>Facebook: <code>fab fa-facebook</code></li>\n<li>Twitter: <code>fab fa-twitter</code></li>\n<li>Google-plus: <code>fab fa-google-plus</code></li>\n<li>Linkedin: <code>fab fa-linkedin</code></li>\n<li>Tumblr: <code>fab fa-tumblr</code></li>\n<li>Medium: <code>fab fa-medium</code></li>\n<li>Slack: <code>fab fa-slack</code></li>\n<li>Sina Weibo: <code>fab fa-weibo</code></li>\n<li>Wechat: <code>fab fa-weixin</code></li>\n<li>QQ: <code>fab fa-qq</code></li>\n<li>Zhihu: <code>fab fa-zhihu</code><blockquote>\n<p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"修改打赏的二维码图片\"><a href=\"#修改打赏的二维码图片\" class=\"headerlink\" title=\"修改打赏的二维码图片\"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p>\n<h3 id=\"配置音乐播放器（可选的）\"><a href=\"#配置音乐播放器（可选的）\" class=\"headerlink\" title=\"配置音乐播放器（可选的）\"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。<br>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"五月雨变奏电音\"</span>,</span><br><span class=\"line\">    artist: <span class=\"string\">\"AnimeVibe\"</span>,</span><br><span class=\"line\">    url: <span class=\"string\">\"http://xxx.com/music1.mp3\"</span>,</span><br><span class=\"line\">    cover: <span class=\"string\">\"http://xxx.com/music-cover1.png\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"Take me hand\"</span>,</span><br><span class=\"line\">    artist: <span class=\"string\">\"DAISHI DANCE,Cecile Corbel\"</span>,</span><br><span class=\"line\">    url: <span class=\"string\">\"/medias/music/music2.mp3\"</span>,</span><br><span class=\"line\">    cover: <span class=\"string\">\"/medias/music/cover2.png\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">\"Shape of You\"</span>,</span><br><span class=\"line\">    artist: <span class=\"string\">\"J.Fla\"</span>,</span><br><span class=\"line\">    url: <span class=\"string\">\"http://xxx.com/music3.mp3\"</span>,</span><br><span class=\"line\">    cover: <span class=\"string\">\"http://xxx.com/music-cover3.png\"</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>注</strong>：以上 JSON 中的属性：<code>name</code>、<code>artist</code>、<code>url</code>、<code>cover</code> 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p>\n</blockquote>\n<p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p>\n<h1 id=\"是否在首页显示音乐\"><a href=\"#是否在首页显示音乐\" class=\"headerlink\" title=\"是否在首页显示音乐.\"></a>是否在首页显示音乐.</h1><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 是否在首页显示音乐.</span><br><span class=\"line\">music:</span><br><span class=\"line\">  enable: <span class=\"literal\">true</span></span><br><span class=\"line\">  showTitle: <span class=\"literal\">false</span></span><br><span class=\"line\">  title: 听听音乐</span><br><span class=\"line\">  fixed: false # 是否开启吸底模式</span><br><span class=\"line\">  autoplay: false # 是否自动播放</span><br><span class=\"line\">  theme: <span class=\"string\">'#42b983'</span></span><br><span class=\"line\">  loop: 'all' # 音频循环播放, 可选值: 'all', 'one', 'none'</span><br><span class=\"line\">  order: 'list' # 音频循环顺序, 可选值: 'list', 'random'</span><br><span class=\"line\">  preload: 'auto' # 预加载，可选值: 'none', 'metadata', 'auto'</span><br><span class=\"line\">  volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span><br><span class=\"line\">  listFolded: false # 列表默认折叠</span><br><span class=\"line\">  listMaxHeight: # 列表最大高度</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"文章-Front-matter-介绍\"><a href=\"#文章-Front-matter-介绍\" class=\"headerlink\" title=\"文章 Front-matter 介绍\"></a>文章 Front-matter 介绍</h3><ol>\n<li><strong>直接将<code>themes/halo/config/scaffolds</code>内所有内容拷贝到**</strong><code>Hexo</code>根目录下*<strong>*的<code>scaffolds</code>文件夹内替换</strong></li>\n<li>或者自己重新修改，修改请参考下面</li>\n</ol>\n<h3 id=\"Front-matter-选项详解\"><a href=\"#Front-matter-选项详解\" class=\"headerlink\" title=\"Front-matter 选项详解\"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 、<code>urlname</code> 和 <code>date</code> 的值。</p>\n<table>\n<thead>\n<tr>\n<th>配置选项</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td><code>Markdown</code> 的文件标题</td>\n<td>文章标题，强烈建议填写此选项</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件创建时的日期时间</td>\n<td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td>\n</tr>\n<tr>\n<td>author</td>\n<td>根 <code>_config.yml</code> 中的 <code>author</code></td>\n<td>文章作者</td>\n</tr>\n<tr>\n<td>img</td>\n<td><code>featureImages</code> 中的某个值</td>\n<td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>[http://xxx.com/xxx.jpg](http://xxx.com/xxx.jpg)</code></td>\n</tr>\n<tr>\n<td>top</td>\n<td><code>true</code></td>\n<td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td>\n</tr>\n<tr>\n<td>cover</td>\n<td><code>false</code></td>\n<td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td>\n</tr>\n<tr>\n<td>coverImg</td>\n<td>无</td>\n<td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td>\n</tr>\n<tr>\n<td>password</td>\n<td>无</td>\n<td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td>\n</tr>\n<tr>\n<td>urlname</td>\n<td>index</td>\n<td>文章访问路径，需要在<code>Hexo</code>根目录下<code>_config.yml</code>文件中使用<code>permalink: :urlname/</code>和<code>permalink_defaults:</code></td>\n</tr>\n<tr>\n<td><code>urlname: index</code></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>toc</td>\n<td><code>true</code></td>\n<td>permalink_defaults:是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td>\n</tr>\n<tr>\n<td>mathjax</td>\n<td><code>false</code></td>\n<td>urlname: index 是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td>\n</tr>\n<tr>\n<td>summary</td>\n<td>无</td>\n<td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td>\n</tr>\n<tr>\n<td>categories</td>\n<td>无</td>\n<td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td>\n</tr>\n<tr>\n<td>tags</td>\n<td>无</td>\n<td>文章标签，一篇文章可以多个标签</td>\n</tr>\n<tr>\n<td>keywords</td>\n<td>文章标题</td>\n<td>文章关键字，SEO 时需要</td>\n</tr>\n<tr>\n<td>reprintPolicy</td>\n<td>cc_by</td>\n<td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p><strong>注意</strong>:</p>\n<ol>\n<li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li>\n<li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li>\n<li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href=\"http://tool.oschina.net/encrypt?type=2\" target=\"_blank\" rel=\"noopener\">开源中国在线工具</a>、<a href=\"http://encode.chahuo.com/\" target=\"_blank\" rel=\"noopener\">chahuo</a>、<a href=\"http://tool.chinaz.com/tools/hash.aspx\" target=\"_blank\" rel=\"noopener\">站长工具</a>。</li>\n<li>您可以在文章 md 文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li>\n</ol>\n</blockquote>\n<p>以下为文章的 <code>Front-matter</code> 示例。</p>\n<h3 id=\"自定制修改\"><a href=\"#自定制修改\" class=\"headerlink\" title=\"自定制修改\"></a>自定制修改</h3><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p>\n<ul>\n<li>菜单</li>\n<li>我的梦想</li>\n<li>首页的音乐播放器和视频播放器配置</li>\n<li>是否显示推荐文章名称和按钮配置</li>\n<li><code>favicon</code> 和 <code>Logo</code></li>\n<li>个人信息</li>\n<li>TOC 目录</li>\n<li>文章打赏信息</li>\n<li>复制文章内容时追加版权信息</li>\n<li>MathJax</li>\n<li>文章字数统计、阅读时长</li>\n<li>点击页面的’爱心’效果</li>\n<li>我的项目</li>\n<li>我的技能</li>\n<li>我的相册</li>\n<li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li>\n<li><a href=\"http://busuanzi.ibruce.info/\" target=\"_blank\" rel=\"noopener\">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li>\n<li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li>\n</ul>\n<p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p>\n<h3 id=\"修改主题颜色\"><a href=\"#修改主题颜色\" class=\"headerlink\" title=\"修改主题颜色\"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span></span><br><span class=\"line\">.bg-color &#123;</span><br><span class=\"line\">    background-image: linear-gradient(to right, #4cbf30 0%, #0f9d58 100%);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@-webkit-keyframes rainbow &#123;</span><br><span class=\"line\">   <span class=\"comment\">/* 动态切换背景颜色. */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@keyframes rainbow &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 动态切换背景颜色. */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>/</p>\n<h3 id=\"修改-banner-图和文章特色图\"><a href=\"#修改-banner-图和文章特色图\" class=\"headerlink\" title=\"修改 banner 图和文章特色图\"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".bg-cover\"</span>).css(</span><br><span class=\"line\">  <span class=\"string\">\"background-image\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"url(/medias/banner/\"</span> + <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getDay() + <span class=\"string\">\".jpg)\"</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p>\n<h3 id=\"修改文章访问路径-urlname\"><a href=\"#修改文章访问路径-urlname\" class=\"headerlink\" title=\"修改文章访问路径 urlname\"></a>修改文章访问路径 urlname</h3><p>在<code>Hexo</code>根目录<code>_config.yaml</code>中添加以下配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class=\"line\">permalink: :urlname&#x2F;</span><br><span class=\"line\">permalink_defaults:</span><br><span class=\"line\">  urlname: index</span><br></pre></td></tr></table></figure>\n\n<p>##</p>\n<h3 id=\"全站-CDN\"><a href=\"#全站-CDN\" class=\"headerlink\" title=\"全站 CDN\"></a>全站 CDN</h3><blockquote>\n<p>CDN 的全称是<code>Content Delivery Network</code>，即内容分发网络。CDN 是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。——百度百科</p>\n</blockquote>\n<p>放在 Github 的资源在国内加载速度比较慢，因此需要使用 CDN 加速来优化网站打开速度，jsDelivr + Github 便是免费且好用的 CDN，非常适合博客网站使用。</p>\n<p>用法：<br><a href=\"https://cdn.jsdelivr.net/gh/\" target=\"_blank\" rel=\"noopener\">https://cdn.jsdelivr.net/gh/</a>你的用户名/你的仓库名@发布的版本号/文件路径</p>\n<p>如：<br><a href=\"http://cdn.jsdelivr.net/gh/hongweifuture/hongweifuture.github.io/medias/featureimages/\" target=\"_blank\" rel=\"noopener\">http://cdn.jsdelivr.net/gh/hongweifuture/hongweifuture.github.io/medias/featureimages/</a>12.jpg<br>注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，如果需要版本，请创建<code>releases</code>然后按照格式添加<br>当然最直接的办法就是使用 <code>username/username.github.io/</code></p>\n"},{"title":"serverless 和 hexo快速搭建静态博客","urlname":"be983r","date":"2020-05-04T14:52:44.000Z","_content":"\n## 1.首先搭建一个用 hexo 快速搭建一个博客\n\n```javascript\n//全局安装脚手架 hexo-cli\nnpm install hexo-cli -g\n\n//初始化一个 blog\nhexo init blog\n\n//访问本地博客(默认地址为：localhost:4000)\ncd blog\nhexo s\n```\n\n## 2.serverless 文档（推荐）\n\ngithub 官方中文文档：[https://github.com/serverless/serverless/blob/master/README_CN.md](https://github.com/serverless/serverless/blob/master/README_CN.md)\nserverless 中文博客： [https://serverlesscloud.cn/](https://serverlesscloud.cn/)\n\n## 3.使用 npm 安装\n\n```javascript\n//全局安装 serverless\nnpm install -g serverless\n```\n\n## 4.在 blog 的根目录创建一个 serverless.yml 文件\n\n复制以下文件内容：唯一注意的地方就是 src 的路径：根据实际更改（即为博客的 index.html 网页）\n\n```javascript\nmyWebsite:\n  component: '@serverless/tencent-website'\n  inputs:\n    code:\n      src: ./public\n      index: index.html\n      error: index.html\n    region: ap-guangzhou\n    bucketName: my-bucket\n```\n\n## 5.将静态博客发布到 tencent-serverless\n\n```javascript\n//首先将 hexo 中博客打包\nheox g\n\n//将本地的博客部署到 serverless\nserverless/sls --debug\n```\n\n## 6.稍等片刻可以在 命令行工具看到以下\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588607113775-6a30d4dc-3c70-4506-9f5b-7af5a07b4e05.png#align=left&display=inline&height=567&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1134&originWidth=1298&size=453581&status=done&style=none&width=649)\n此时需要的操作就是用手机微信去扫描（此处会检测是否有腾讯云账号，没有会提示注册，有会直接成功）并返回以下内容：此处就是部署成功，并返回地址，可以直接访问。\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588607252405-a0fad8a2-f2d5-49ef-8101-09a10eec3916.png#align=left&display=inline&height=264&margin=%5Bobject%20Object%5D&name=image.png&originHeight=528&originWidth=1274&size=364624&status=done&style=none&width=637)\n","source":"_posts/yuque/be983r.md","raw":"---\ntitle: serverless 和 hexo快速搭建静态博客\nurlname: be983r\ndate: 2020-05-04 22:52:44 +0800\ntags: []\ncategories: []\n---\n\n## 1.首先搭建一个用 hexo 快速搭建一个博客\n\n```javascript\n//全局安装脚手架 hexo-cli\nnpm install hexo-cli -g\n\n//初始化一个 blog\nhexo init blog\n\n//访问本地博客(默认地址为：localhost:4000)\ncd blog\nhexo s\n```\n\n## 2.serverless 文档（推荐）\n\ngithub 官方中文文档：[https://github.com/serverless/serverless/blob/master/README_CN.md](https://github.com/serverless/serverless/blob/master/README_CN.md)\nserverless 中文博客： [https://serverlesscloud.cn/](https://serverlesscloud.cn/)\n\n## 3.使用 npm 安装\n\n```javascript\n//全局安装 serverless\nnpm install -g serverless\n```\n\n## 4.在 blog 的根目录创建一个 serverless.yml 文件\n\n复制以下文件内容：唯一注意的地方就是 src 的路径：根据实际更改（即为博客的 index.html 网页）\n\n```javascript\nmyWebsite:\n  component: '@serverless/tencent-website'\n  inputs:\n    code:\n      src: ./public\n      index: index.html\n      error: index.html\n    region: ap-guangzhou\n    bucketName: my-bucket\n```\n\n## 5.将静态博客发布到 tencent-serverless\n\n```javascript\n//首先将 hexo 中博客打包\nheox g\n\n//将本地的博客部署到 serverless\nserverless/sls --debug\n```\n\n## 6.稍等片刻可以在 命令行工具看到以下\n\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588607113775-6a30d4dc-3c70-4506-9f5b-7af5a07b4e05.png#align=left&display=inline&height=567&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1134&originWidth=1298&size=453581&status=done&style=none&width=649)\n此时需要的操作就是用手机微信去扫描（此处会检测是否有腾讯云账号，没有会提示注册，有会直接成功）并返回以下内容：此处就是部署成功，并返回地址，可以直接访问。\n![image.png](https://cdn.nlark.com/yuque/0/2020/png/241787/1588607252405-a0fad8a2-f2d5-49ef-8101-09a10eec3916.png#align=left&display=inline&height=264&margin=%5Bobject%20Object%5D&name=image.png&originHeight=528&originWidth=1274&size=364624&status=done&style=none&width=637)\n","slug":"yuque/be983r","published":1,"updated":"2020-05-04T16:03:54.467Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9sobyw70000rlnlhqhqe9xv","content":"<h2 id=\"1-首先搭建一个用-hexo-快速搭建一个博客\"><a href=\"#1-首先搭建一个用-hexo-快速搭建一个博客\" class=\"headerlink\" title=\"1.首先搭建一个用 hexo 快速搭建一个博客\"></a>1.首先搭建一个用 hexo 快速搭建一个博客</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全局安装脚手架 hexo-cli</span></span><br><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//初始化一个 blog</span></span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//访问本地博客(默认地址为：localhost:4000)</span></span><br><span class=\"line\">cd blog</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-serverless-文档（推荐）\"><a href=\"#2-serverless-文档（推荐）\" class=\"headerlink\" title=\"2.serverless 文档（推荐）\"></a>2.serverless 文档（推荐）</h2><p>github 官方中文文档：<a href=\"https://github.com/serverless/serverless/blob/master/README_CN.md\" target=\"_blank\" rel=\"noopener\">https://github.com/serverless/serverless/blob/master/README_CN.md</a><br>serverless 中文博客： <a href=\"https://serverlesscloud.cn/\" target=\"_blank\" rel=\"noopener\">https://serverlesscloud.cn/</a></p>\n<h2 id=\"3-使用-npm-安装\"><a href=\"#3-使用-npm-安装\" class=\"headerlink\" title=\"3.使用 npm 安装\"></a>3.使用 npm 安装</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全局安装 serverless</span></span><br><span class=\"line\">npm install -g serverless</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-在-blog-的根目录创建一个-serverless-yml-文件\"><a href=\"#4-在-blog-的根目录创建一个-serverless-yml-文件\" class=\"headerlink\" title=\"4.在 blog 的根目录创建一个 serverless.yml 文件\"></a>4.在 blog 的根目录创建一个 serverless.yml 文件</h2><p>复制以下文件内容：唯一注意的地方就是 src 的路径：根据实际更改（即为博客的 index.html 网页）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myWebsite:</span><br><span class=\"line\">  component: <span class=\"string\">'@serverless/tencent-website'</span></span><br><span class=\"line\">  inputs:</span><br><span class=\"line\">    code:</span><br><span class=\"line\">      src: ./public</span><br><span class=\"line\">      index: index.html</span><br><span class=\"line\">      error: index.html</span><br><span class=\"line\">    region: ap-guangzhou</span><br><span class=\"line\">    bucketName: my-bucket</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-将静态博客发布到-tencent-serverless\"><a href=\"#5-将静态博客发布到-tencent-serverless\" class=\"headerlink\" title=\"5.将静态博客发布到 tencent-serverless\"></a>5.将静态博客发布到 tencent-serverless</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首先将 hexo 中博客打包</span></span><br><span class=\"line\">heox g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将本地的博客部署到 serverless</span></span><br><span class=\"line\">serverless/sls --debug</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-稍等片刻可以在-命令行工具看到以下\"><a href=\"#6-稍等片刻可以在-命令行工具看到以下\" class=\"headerlink\" title=\"6.稍等片刻可以在 命令行工具看到以下\"></a>6.稍等片刻可以在 命令行工具看到以下</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588607113775-6a30d4dc-3c70-4506-9f5b-7af5a07b4e05.png#align=left&display=inline&height=567&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1134&originWidth=1298&size=453581&status=done&style=none&width=649\" alt=\"image.png\"><br>此时需要的操作就是用手机微信去扫描（此处会检测是否有腾讯云账号，没有会提示注册，有会直接成功）并返回以下内容：此处就是部署成功，并返回地址，可以直接访问。<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588607252405-a0fad8a2-f2d5-49ef-8101-09a10eec3916.png#align=left&display=inline&height=264&margin=%5Bobject%20Object%5D&name=image.png&originHeight=528&originWidth=1274&size=364624&status=done&style=none&width=637\" alt=\"image.png\"></p>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<h2 id=\"1-首先搭建一个用-hexo-快速搭建一个博客\"><a href=\"#1-首先搭建一个用-hexo-快速搭建一个博客\" class=\"headerlink\" title=\"1.首先搭建一个用 hexo 快速搭建一个博客\"></a>1.首先搭建一个用 hexo 快速搭建一个博客</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全局安装脚手架 hexo-cli</span></span><br><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//初始化一个 blog</span></span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//访问本地博客(默认地址为：localhost:4000)</span></span><br><span class=\"line\">cd blog</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-serverless-文档（推荐）\"><a href=\"#2-serverless-文档（推荐）\" class=\"headerlink\" title=\"2.serverless 文档（推荐）\"></a>2.serverless 文档（推荐）</h2><p>github 官方中文文档：<a href=\"https://github.com/serverless/serverless/blob/master/README_CN.md\" target=\"_blank\" rel=\"noopener\">https://github.com/serverless/serverless/blob/master/README_CN.md</a><br>serverless 中文博客： <a href=\"https://serverlesscloud.cn/\" target=\"_blank\" rel=\"noopener\">https://serverlesscloud.cn/</a></p>\n<h2 id=\"3-使用-npm-安装\"><a href=\"#3-使用-npm-安装\" class=\"headerlink\" title=\"3.使用 npm 安装\"></a>3.使用 npm 安装</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//全局安装 serverless</span></span><br><span class=\"line\">npm install -g serverless</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-在-blog-的根目录创建一个-serverless-yml-文件\"><a href=\"#4-在-blog-的根目录创建一个-serverless-yml-文件\" class=\"headerlink\" title=\"4.在 blog 的根目录创建一个 serverless.yml 文件\"></a>4.在 blog 的根目录创建一个 serverless.yml 文件</h2><p>复制以下文件内容：唯一注意的地方就是 src 的路径：根据实际更改（即为博客的 index.html 网页）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myWebsite:</span><br><span class=\"line\">  component: <span class=\"string\">'@serverless/tencent-website'</span></span><br><span class=\"line\">  inputs:</span><br><span class=\"line\">    code:</span><br><span class=\"line\">      src: ./public</span><br><span class=\"line\">      index: index.html</span><br><span class=\"line\">      error: index.html</span><br><span class=\"line\">    region: ap-guangzhou</span><br><span class=\"line\">    bucketName: my-bucket</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-将静态博客发布到-tencent-serverless\"><a href=\"#5-将静态博客发布到-tencent-serverless\" class=\"headerlink\" title=\"5.将静态博客发布到 tencent-serverless\"></a>5.将静态博客发布到 tencent-serverless</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首先将 hexo 中博客打包</span></span><br><span class=\"line\">heox g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将本地的博客部署到 serverless</span></span><br><span class=\"line\">serverless/sls --debug</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-稍等片刻可以在-命令行工具看到以下\"><a href=\"#6-稍等片刻可以在-命令行工具看到以下\" class=\"headerlink\" title=\"6.稍等片刻可以在 命令行工具看到以下\"></a>6.稍等片刻可以在 命令行工具看到以下</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588607113775-6a30d4dc-3c70-4506-9f5b-7af5a07b4e05.png#align=left&display=inline&height=567&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1134&originWidth=1298&size=453581&status=done&style=none&width=649\" alt=\"image.png\"><br>此时需要的操作就是用手机微信去扫描（此处会检测是否有腾讯云账号，没有会提示注册，有会直接成功）并返回以下内容：此处就是部署成功，并返回地址，可以直接访问。<br><img src=\"https://cdn.nlark.com/yuque/0/2020/png/241787/1588607252405-a0fad8a2-f2d5-49ef-8101-09a10eec3916.png#align=left&display=inline&height=264&margin=%5Bobject%20Object%5D&name=image.png&originHeight=528&originWidth=1274&size=364624&status=done&style=none&width=637\" alt=\"image.png\"></p>\n"},{"title":"Hexo博客提交百度和Google收录","urlname":"6600f4fa-1e97-4ef7-b40f-cb9ec89924e1","date":"2020-05-01T17:09:35.000Z","_content":"\n一个网站的 SEO 对一个网站非常重要，[SEO](https://link.jianshu.com/?t=https://baike.baidu.com/item/SEO/102990?fr=aladdin)指的是搜索引擎优化。通过搜索引擎优化，可以提高网站的网站关键词排名以及博客文章的曝光度。一般来说，我们针对百度和 Google 这两个搜索引擎进行优化，提高对网站资源的索引量，使我们的文章更容易被发现。虽然我的博客的主要读者是我自己，但也不妨碍我做些优化，对吧！接下来向大家展示如何使博客被百度和 Google 收录。\n\n### 站点地图\n\n站点地图即[sitemap](https://link.jianshu.com/?t=https://baike.baidu.com/item/sitemap/6241567?fr=aladdin)， 是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接。站点地图可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。\n\n#### 生成站点地图\n\n安装百度和 Google 的站点地图生成插件：\n\n```\nnpm install hexo-generator-baidu-sitemap --save\nnpm install hexo-generator-sitemap --save\n```\n\n#### 修改配置文件\n\n修改站点配置文件`_config.yml`，添加以下内容：\n\n```\n# 自动生成sitemap\nsitemap:\n  path: sitemap.xml\nbaidusitemap:\n  path: baidusitemap.xml\n```\n\n#### 生成和部署\n\n执行生成和部署命令：\n\n此时，进入`public`目录，你会发现里面有`sitemap.xml`和`baidusitemap.xml`两个文件，这就是生成的站点地图。里面包含了网站上所有页面的链接，搜索引擎通过这两个文件来抓取网站页面。\n\n> - sitemap.xml 用来提交给 Google\n> - baidusitemap.xml 用来提交给百度\n\n### 百度站长平台\n\n通过百度站长平台进行链接提交，增加网站的索引量。我的这篇文章：[Hexo 博客之速度优化](https://link.jianshu.com/?t=http://fengdi.org/2017/08/07/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96.html) 已经提到过 Github 对百度爬虫进行了屏蔽，因此百度爬取不到 Github 上的页面，如果你按照这篇文章同时部署到 Coding 上，那百度就可以抓取到，因为此时百度抓取的是位于 Coding 上的博客网页。\n\n注册并登录百度站长平台：[百度站长平台](https://link.jianshu.com/?t=http://zhanzhang.baidu.com/)\n\n#### 添加站点\n\n选择添加站点：\n\n![](https://upload-images.jianshu.io/upload_images/5635196-9bca3b38a6c1685d.png#alt=)\n\n#### 验证站点\n\n进行站点验证：\n\n![](https://upload-images.jianshu.io/upload_images/5635196-51233e024040d8d7.png#alt=)\n\n这里我们选择`文件验证`，下载验证文件到本地，放置在`themes/next/source`目录下。执行生成和部署命令：\n\n点击完成验证即可。\n\n#### 链接提交\n\n百度站长平台的链接提交方式分为自动提交和手动提交两种，此处只讲自动提交，手动提交按照要求操作即可。\n\n##### 主动推送\n\n主动推送最为快速的提交方式，是被百度收录最快的推送方式。主动推送可以通过安装插件实现：\n\n```\nnpm install hexo-baidu-url-submit --save\n```\n\n修改站点配置文件`_config.yml`，添加以下内容：\n\n```\nbaidu_url_submit:\n  count: 5 ## 提交最新的五个链接\n  host: www.hui-wang.info ## 百度站长平台中注册的域名\n  token: your_token ## 准入秘钥\n  path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里\n```\n\n其次，记得查看`_config.yml`文件中 url 的值， 必须包含是百度站长平台注册的域名， 比如:\n\n```\n# URL\nurl: http://fengdi.org\nroot: /\npermalink: :year/:month/:day/:title.xml\n```\n\n最后，加入新的 deployer:\n\n```\ndeploy:\n- type: git ## 这是我原来的deployer\n  repo:\n  branch:\n- type: baidu_url_submitter ## 添加这里内容即可\n```\n\n其主动推送的实现原理如下：\n\n- 新链接的产生， `hexo generate` 会产生一个文本文件，里面包含最新的链接\n- 新链接的提交， `hexo deploy` 会从上述文件中读取链接，提交至百度搜索引擎\n\n##### 自动推送\n\n安装自动推送 JS 代码的网页，在页面被访问时，页面 URL 将立即被推送给百度。\n\n修改主题目录下的`layout/post.swig`文件，末尾添加自动推送代码，代码如下：\n\n```\n<script>\n(function(){\n    var bp = document.createElement('script');\n    var curProtocol = window.location.protocol.split(':')[0];\n    if (curProtocol === 'https') {\n        bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';\n    }\n    else {\n        bp.src = 'http://push.zhanzhang.baidu.com/push.js';\n    }\n    var s = document.getElementsByTagName(\"script\")[0];\n    s.parentNode.insertBefore(bp, s);\n})();\n</script>\n```\n\n##### sitemap 提交\n\n我们之前已经说过如何生成 sitemap 文件，这时就需要我们生成的 sitemap 文件了。\n\n![](https://upload-images.jianshu.io/upload_images/5635196-cfb7e4bd12e2deb8.png#alt=)\n\n输入以下内容到输入框里：\n\n```\nhttp://fengdi.org/baidusitemap.xml\n```\n\n输入验证码后，提交即可。一般情况下，百度会在一个小时内处理该文件，并提取其中的 url。\n\n### Google 网站站长\n\n在提交 Google 之前，要解决一个大家都知道的问题，关于如何登录 Google。这里就不再说了，相信你们有办法。\n\n#### 添加站点\n\n登录[Google 网站站长](https://link.jianshu.com/?t=https://www.google.com/webmasters/#?modal_active=none)，进入`Search Console`，点击`添加属性`进行站点添加：\n\n![](https://upload-images.jianshu.io/upload_images/5635196-9a7ce99e3aaaf1a9.png#alt=)\n\n#### 验证站点\n\n同百度平台一样，下载 Google 验证文件，放到 source 下`themes/next/source`目录中：\n\n![](https://upload-images.jianshu.io/upload_images/5635196-2a7e8f527d0b1b42.png#alt=)\n\n重新生成和部署：\n\n部署完成之后，进行验证即可。\n\n#### 添加站点地图\n\n在`抓取`里面，点击`站点地图`，进行添加：\n\n![](https://upload-images.jianshu.io/upload_images/5635196-7071aa22f10e2c28.png#alt=)\n\n好了，到这里文章就结束了。如果你之前没有把网站部署到 Coding 上，你的网站百度是爬取不到的，关于如何部署请参阅：[Hexo 博客之速度优化](https://link.jianshu.com/?t=http://fengdi.org/2017/08/07/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96.html)\n\n[Hexo 系列：（四）Hexo 博客提交百度和 Google 收录](https://link.jianshu.com/?t=http://svend.cc/posts/22980/)\n\n文文章转载自：[https://www.jianshu.com/p/f8ec422ebd52](https://www.jianshu.com/p/f8ec422ebd52)\n\n\\*\\*\n\n[\n](https://www.jianshu.com/p/57e22584b277)\n","source":"_posts/yuque/6600f4fa-1e97-4ef7-b40f-cb9ec89924e1.md","raw":"---\ntitle: Hexo博客提交百度和Google收录\nurlname: 6600f4fa-1e97-4ef7-b40f-cb9ec89924e1\ndate: 2020-05-02 01:09:35 +0800\ntags: []\ncategories: []\n---\n\n一个网站的 SEO 对一个网站非常重要，[SEO](https://link.jianshu.com/?t=https://baike.baidu.com/item/SEO/102990?fr=aladdin)指的是搜索引擎优化。通过搜索引擎优化，可以提高网站的网站关键词排名以及博客文章的曝光度。一般来说，我们针对百度和 Google 这两个搜索引擎进行优化，提高对网站资源的索引量，使我们的文章更容易被发现。虽然我的博客的主要读者是我自己，但也不妨碍我做些优化，对吧！接下来向大家展示如何使博客被百度和 Google 收录。\n\n### 站点地图\n\n站点地图即[sitemap](https://link.jianshu.com/?t=https://baike.baidu.com/item/sitemap/6241567?fr=aladdin)， 是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接。站点地图可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。\n\n#### 生成站点地图\n\n安装百度和 Google 的站点地图生成插件：\n\n```\nnpm install hexo-generator-baidu-sitemap --save\nnpm install hexo-generator-sitemap --save\n```\n\n#### 修改配置文件\n\n修改站点配置文件`_config.yml`，添加以下内容：\n\n```\n# 自动生成sitemap\nsitemap:\n  path: sitemap.xml\nbaidusitemap:\n  path: baidusitemap.xml\n```\n\n#### 生成和部署\n\n执行生成和部署命令：\n\n此时，进入`public`目录，你会发现里面有`sitemap.xml`和`baidusitemap.xml`两个文件，这就是生成的站点地图。里面包含了网站上所有页面的链接，搜索引擎通过这两个文件来抓取网站页面。\n\n> - sitemap.xml 用来提交给 Google\n> - baidusitemap.xml 用来提交给百度\n\n### 百度站长平台\n\n通过百度站长平台进行链接提交，增加网站的索引量。我的这篇文章：[Hexo 博客之速度优化](https://link.jianshu.com/?t=http://fengdi.org/2017/08/07/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96.html) 已经提到过 Github 对百度爬虫进行了屏蔽，因此百度爬取不到 Github 上的页面，如果你按照这篇文章同时部署到 Coding 上，那百度就可以抓取到，因为此时百度抓取的是位于 Coding 上的博客网页。\n\n注册并登录百度站长平台：[百度站长平台](https://link.jianshu.com/?t=http://zhanzhang.baidu.com/)\n\n#### 添加站点\n\n选择添加站点：\n\n![](https://upload-images.jianshu.io/upload_images/5635196-9bca3b38a6c1685d.png#alt=)\n\n#### 验证站点\n\n进行站点验证：\n\n![](https://upload-images.jianshu.io/upload_images/5635196-51233e024040d8d7.png#alt=)\n\n这里我们选择`文件验证`，下载验证文件到本地，放置在`themes/next/source`目录下。执行生成和部署命令：\n\n点击完成验证即可。\n\n#### 链接提交\n\n百度站长平台的链接提交方式分为自动提交和手动提交两种，此处只讲自动提交，手动提交按照要求操作即可。\n\n##### 主动推送\n\n主动推送最为快速的提交方式，是被百度收录最快的推送方式。主动推送可以通过安装插件实现：\n\n```\nnpm install hexo-baidu-url-submit --save\n```\n\n修改站点配置文件`_config.yml`，添加以下内容：\n\n```\nbaidu_url_submit:\n  count: 5 ## 提交最新的五个链接\n  host: www.hui-wang.info ## 百度站长平台中注册的域名\n  token: your_token ## 准入秘钥\n  path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里\n```\n\n其次，记得查看`_config.yml`文件中 url 的值， 必须包含是百度站长平台注册的域名， 比如:\n\n```\n# URL\nurl: http://fengdi.org\nroot: /\npermalink: :year/:month/:day/:title.xml\n```\n\n最后，加入新的 deployer:\n\n```\ndeploy:\n- type: git ## 这是我原来的deployer\n  repo:\n  branch:\n- type: baidu_url_submitter ## 添加这里内容即可\n```\n\n其主动推送的实现原理如下：\n\n- 新链接的产生， `hexo generate` 会产生一个文本文件，里面包含最新的链接\n- 新链接的提交， `hexo deploy` 会从上述文件中读取链接，提交至百度搜索引擎\n\n##### 自动推送\n\n安装自动推送 JS 代码的网页，在页面被访问时，页面 URL 将立即被推送给百度。\n\n修改主题目录下的`layout/post.swig`文件，末尾添加自动推送代码，代码如下：\n\n```\n<script>\n(function(){\n    var bp = document.createElement('script');\n    var curProtocol = window.location.protocol.split(':')[0];\n    if (curProtocol === 'https') {\n        bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';\n    }\n    else {\n        bp.src = 'http://push.zhanzhang.baidu.com/push.js';\n    }\n    var s = document.getElementsByTagName(\"script\")[0];\n    s.parentNode.insertBefore(bp, s);\n})();\n</script>\n```\n\n##### sitemap 提交\n\n我们之前已经说过如何生成 sitemap 文件，这时就需要我们生成的 sitemap 文件了。\n\n![](https://upload-images.jianshu.io/upload_images/5635196-cfb7e4bd12e2deb8.png#alt=)\n\n输入以下内容到输入框里：\n\n```\nhttp://fengdi.org/baidusitemap.xml\n```\n\n输入验证码后，提交即可。一般情况下，百度会在一个小时内处理该文件，并提取其中的 url。\n\n### Google 网站站长\n\n在提交 Google 之前，要解决一个大家都知道的问题，关于如何登录 Google。这里就不再说了，相信你们有办法。\n\n#### 添加站点\n\n登录[Google 网站站长](https://link.jianshu.com/?t=https://www.google.com/webmasters/#?modal_active=none)，进入`Search Console`，点击`添加属性`进行站点添加：\n\n![](https://upload-images.jianshu.io/upload_images/5635196-9a7ce99e3aaaf1a9.png#alt=)\n\n#### 验证站点\n\n同百度平台一样，下载 Google 验证文件，放到 source 下`themes/next/source`目录中：\n\n![](https://upload-images.jianshu.io/upload_images/5635196-2a7e8f527d0b1b42.png#alt=)\n\n重新生成和部署：\n\n部署完成之后，进行验证即可。\n\n#### 添加站点地图\n\n在`抓取`里面，点击`站点地图`，进行添加：\n\n![](https://upload-images.jianshu.io/upload_images/5635196-7071aa22f10e2c28.png#alt=)\n\n好了，到这里文章就结束了。如果你之前没有把网站部署到 Coding 上，你的网站百度是爬取不到的，关于如何部署请参阅：[Hexo 博客之速度优化](https://link.jianshu.com/?t=http://fengdi.org/2017/08/07/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96.html)\n\n[Hexo 系列：（四）Hexo 博客提交百度和 Google 收录](https://link.jianshu.com/?t=http://svend.cc/posts/22980/)\n\n文文章转载自：[https://www.jianshu.com/p/f8ec422ebd52](https://www.jianshu.com/p/f8ec422ebd52)\n\n\\*\\*\n\n[\n](https://www.jianshu.com/p/57e22584b277)\n","slug":"yuque/6600f4fa-1e97-4ef7-b40f-cb9ec89924e1","published":1,"updated":"2020-05-04T16:03:54.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9sobywb0001rlnl9y38fs2o","content":"<p>一个网站的 SEO 对一个网站非常重要，<a href=\"https://link.jianshu.com/?t=https://baike.baidu.com/item/SEO/102990?fr=aladdin\" target=\"_blank\" rel=\"noopener\">SEO</a>指的是搜索引擎优化。通过搜索引擎优化，可以提高网站的网站关键词排名以及博客文章的曝光度。一般来说，我们针对百度和 Google 这两个搜索引擎进行优化，提高对网站资源的索引量，使我们的文章更容易被发现。虽然我的博客的主要读者是我自己，但也不妨碍我做些优化，对吧！接下来向大家展示如何使博客被百度和 Google 收录。</p>\n<h3 id=\"站点地图\"><a href=\"#站点地图\" class=\"headerlink\" title=\"站点地图\"></a>站点地图</h3><p>站点地图即<a href=\"https://link.jianshu.com/?t=https://baike.baidu.com/item/sitemap/6241567?fr=aladdin\" target=\"_blank\" rel=\"noopener\">sitemap</a>， 是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接。站点地图可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。</p>\n<h4 id=\"生成站点地图\"><a href=\"#生成站点地图\" class=\"headerlink\" title=\"生成站点地图\"></a>生成站点地图</h4><p>安装百度和 Google 的站点地图生成插件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><p>修改站点配置文件<code>_config.yml</code>，添加以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 自动生成sitemap</span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">  path: sitemap.xml</span><br><span class=\"line\">baidusitemap:</span><br><span class=\"line\">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"生成和部署\"><a href=\"#生成和部署\" class=\"headerlink\" title=\"生成和部署\"></a>生成和部署</h4><p>执行生成和部署命令：</p>\n<p>此时，进入<code>public</code>目录，你会发现里面有<code>sitemap.xml</code>和<code>baidusitemap.xml</code>两个文件，这就是生成的站点地图。里面包含了网站上所有页面的链接，搜索引擎通过这两个文件来抓取网站页面。</p>\n<blockquote>\n<ul>\n<li>sitemap.xml 用来提交给 Google</li>\n<li>baidusitemap.xml 用来提交给百度</li>\n</ul>\n</blockquote>\n<h3 id=\"百度站长平台\"><a href=\"#百度站长平台\" class=\"headerlink\" title=\"百度站长平台\"></a>百度站长平台</h3><p>通过百度站长平台进行链接提交，增加网站的索引量。我的这篇文章：<a href=\"https://link.jianshu.com/?t=http://fengdi.org/2017/08/07/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96.html\" target=\"_blank\" rel=\"noopener\">Hexo 博客之速度优化</a> 已经提到过 Github 对百度爬虫进行了屏蔽，因此百度爬取不到 Github 上的页面，如果你按照这篇文章同时部署到 Coding 上，那百度就可以抓取到，因为此时百度抓取的是位于 Coding 上的博客网页。</p>\n<p>注册并登录百度站长平台：<a href=\"https://link.jianshu.com/?t=http://zhanzhang.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度站长平台</a></p>\n<h4 id=\"添加站点\"><a href=\"#添加站点\" class=\"headerlink\" title=\"添加站点\"></a>添加站点</h4><p>选择添加站点：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-9bca3b38a6c1685d.png#alt=\" alt=\"\"></p>\n<h4 id=\"验证站点\"><a href=\"#验证站点\" class=\"headerlink\" title=\"验证站点\"></a>验证站点</h4><p>进行站点验证：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-51233e024040d8d7.png#alt=\" alt=\"\"></p>\n<p>这里我们选择<code>文件验证</code>，下载验证文件到本地，放置在<code>themes/next/source</code>目录下。执行生成和部署命令：</p>\n<p>点击完成验证即可。</p>\n<h4 id=\"链接提交\"><a href=\"#链接提交\" class=\"headerlink\" title=\"链接提交\"></a>链接提交</h4><p>百度站长平台的链接提交方式分为自动提交和手动提交两种，此处只讲自动提交，手动提交按照要求操作即可。</p>\n<h5 id=\"主动推送\"><a href=\"#主动推送\" class=\"headerlink\" title=\"主动推送\"></a>主动推送</h5><p>主动推送最为快速的提交方式，是被百度收录最快的推送方式。主动推送可以通过安装插件实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>\n\n<p>修改站点配置文件<code>_config.yml</code>，添加以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">baidu_url_submit:</span><br><span class=\"line\">  count: 5 ## 提交最新的五个链接</span><br><span class=\"line\">  host: www.hui-wang.info ## 百度站长平台中注册的域名</span><br><span class=\"line\">  token: your_token ## 准入秘钥</span><br><span class=\"line\">  path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里</span><br></pre></td></tr></table></figure>\n\n<p>其次，记得查看<code>_config.yml</code>文件中 url 的值， 必须包含是百度站长平台注册的域名， 比如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># URL</span><br><span class=\"line\">url: http:&#x2F;&#x2F;fengdi.org</span><br><span class=\"line\">root: &#x2F;</span><br><span class=\"line\">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title.xml</span><br></pre></td></tr></table></figure>\n\n<p>最后，加入新的 deployer:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">- type: git ## 这是我原来的deployer</span><br><span class=\"line\">  repo:</span><br><span class=\"line\">  branch:</span><br><span class=\"line\">- type: baidu_url_submitter ## 添加这里内容即可</span><br></pre></td></tr></table></figure>\n\n<p>其主动推送的实现原理如下：</p>\n<ul>\n<li>新链接的产生， <code>hexo generate</code> 会产生一个文本文件，里面包含最新的链接</li>\n<li>新链接的提交， <code>hexo deploy</code> 会从上述文件中读取链接，提交至百度搜索引擎</li>\n</ul>\n<h5 id=\"自动推送\"><a href=\"#自动推送\" class=\"headerlink\" title=\"自动推送\"></a>自动推送</h5><p>安装自动推送 JS 代码的网页，在页面被访问时，页面 URL 将立即被推送给百度。</p>\n<p>修改主题目录下的<code>layout/post.swig</code>文件，末尾添加自动推送代码，代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">(function()&#123;</span><br><span class=\"line\">    var bp &#x3D; document.createElement(&#39;script&#39;);</span><br><span class=\"line\">    var curProtocol &#x3D; window.location.protocol.split(&#39;:&#39;)[0];</span><br><span class=\"line\">    if (curProtocol &#x3D;&#x3D;&#x3D; &#39;https&#39;) &#123;</span><br><span class=\"line\">        bp.src &#x3D; &#39;https:&#x2F;&#x2F;zz.bdstatic.com&#x2F;linksubmit&#x2F;push.js&#39;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else &#123;</span><br><span class=\"line\">        bp.src &#x3D; &#39;http:&#x2F;&#x2F;push.zhanzhang.baidu.com&#x2F;push.js&#39;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var s &#x3D; document.getElementsByTagName(&quot;script&quot;)[0];</span><br><span class=\"line\">    s.parentNode.insertBefore(bp, s);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"sitemap-提交\"><a href=\"#sitemap-提交\" class=\"headerlink\" title=\"sitemap 提交\"></a>sitemap 提交</h5><p>我们之前已经说过如何生成 sitemap 文件，这时就需要我们生成的 sitemap 文件了。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-cfb7e4bd12e2deb8.png#alt=\" alt=\"\"></p>\n<p>输入以下内容到输入框里：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;fengdi.org&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure>\n\n<p>输入验证码后，提交即可。一般情况下，百度会在一个小时内处理该文件，并提取其中的 url。</p>\n<h3 id=\"Google-网站站长\"><a href=\"#Google-网站站长\" class=\"headerlink\" title=\"Google 网站站长\"></a>Google 网站站长</h3><p>在提交 Google 之前，要解决一个大家都知道的问题，关于如何登录 Google。这里就不再说了，相信你们有办法。</p>\n<h4 id=\"添加站点-1\"><a href=\"#添加站点-1\" class=\"headerlink\" title=\"添加站点\"></a>添加站点</h4><p>登录<a href=\"https://link.jianshu.com/?t=https://www.google.com/webmasters/#?modal_active=none\" target=\"_blank\" rel=\"noopener\">Google 网站站长</a>，进入<code>Search Console</code>，点击<code>添加属性</code>进行站点添加：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-9a7ce99e3aaaf1a9.png#alt=\" alt=\"\"></p>\n<h4 id=\"验证站点-1\"><a href=\"#验证站点-1\" class=\"headerlink\" title=\"验证站点\"></a>验证站点</h4><p>同百度平台一样，下载 Google 验证文件，放到 source 下<code>themes/next/source</code>目录中：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-2a7e8f527d0b1b42.png#alt=\" alt=\"\"></p>\n<p>重新生成和部署：</p>\n<p>部署完成之后，进行验证即可。</p>\n<h4 id=\"添加站点地图\"><a href=\"#添加站点地图\" class=\"headerlink\" title=\"添加站点地图\"></a>添加站点地图</h4><p>在<code>抓取</code>里面，点击<code>站点地图</code>，进行添加：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-7071aa22f10e2c28.png#alt=\" alt=\"\"></p>\n<p>好了，到这里文章就结束了。如果你之前没有把网站部署到 Coding 上，你的网站百度是爬取不到的，关于如何部署请参阅：<a href=\"https://link.jianshu.com/?t=http://fengdi.org/2017/08/07/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96.html\" target=\"_blank\" rel=\"noopener\">Hexo 博客之速度优化</a></p>\n<p><a href=\"https://link.jianshu.com/?t=http://svend.cc/posts/22980/\" target=\"_blank\" rel=\"noopener\">Hexo 系列：（四）Hexo 博客提交百度和 Google 收录</a></p>\n<p>文文章转载自：<a href=\"https://www.jianshu.com/p/f8ec422ebd52\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/f8ec422ebd52</a></p>\n<p>**</p>\n<p><a href=\"https://www.jianshu.com/p/57e22584b277\" target=\"_blank\" rel=\"noopener\">\n</a></p>\n","site":{"data":{"friends":[{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"语雀","introduction":"写如诗的内容，分享温而不沸的生活。","url":"https://www.yuque.com/leader755/blog","title":"前去探索"},{"avatar":"https://profile.csdnimg.cn/D/8/F/3_weixin_41316842","name":"CSDN博客","introduction":"欢迎大佬们前去参观！","url":"https://blog.csdn.net/weixin_41316842","title":"前去参观"}],"musics":[{"name":"五月雨变奏电音","artist":"AnimeVibe","url":"http://static.blinkfox.com/music1.mp3","cover":"http://static.blinkfox.com/music-cover1.png"},{"name":"Take me hand","artist":"DAISHI DANCE,Cecile Corbel","url":"http://static.blinkfox.com/music2.mp3","cover":"http://static.blinkfox.com/music-cover2.png"},{"name":"Shape of You","artist":"J.Fla","url":"http://static.blinkfox.com/music3.mp3","cover":"http://static.blinkfox.com/music-cover3.png"}]}},"excerpt":"","more":"<p>一个网站的 SEO 对一个网站非常重要，<a href=\"https://link.jianshu.com/?t=https://baike.baidu.com/item/SEO/102990?fr=aladdin\" target=\"_blank\" rel=\"noopener\">SEO</a>指的是搜索引擎优化。通过搜索引擎优化，可以提高网站的网站关键词排名以及博客文章的曝光度。一般来说，我们针对百度和 Google 这两个搜索引擎进行优化，提高对网站资源的索引量，使我们的文章更容易被发现。虽然我的博客的主要读者是我自己，但也不妨碍我做些优化，对吧！接下来向大家展示如何使博客被百度和 Google 收录。</p>\n<h3 id=\"站点地图\"><a href=\"#站点地图\" class=\"headerlink\" title=\"站点地图\"></a>站点地图</h3><p>站点地图即<a href=\"https://link.jianshu.com/?t=https://baike.baidu.com/item/sitemap/6241567?fr=aladdin\" target=\"_blank\" rel=\"noopener\">sitemap</a>， 是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接。站点地图可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。</p>\n<h4 id=\"生成站点地图\"><a href=\"#生成站点地图\" class=\"headerlink\" title=\"生成站点地图\"></a>生成站点地图</h4><p>安装百度和 Google 的站点地图生成插件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><p>修改站点配置文件<code>_config.yml</code>，添加以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 自动生成sitemap</span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">  path: sitemap.xml</span><br><span class=\"line\">baidusitemap:</span><br><span class=\"line\">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"生成和部署\"><a href=\"#生成和部署\" class=\"headerlink\" title=\"生成和部署\"></a>生成和部署</h4><p>执行生成和部署命令：</p>\n<p>此时，进入<code>public</code>目录，你会发现里面有<code>sitemap.xml</code>和<code>baidusitemap.xml</code>两个文件，这就是生成的站点地图。里面包含了网站上所有页面的链接，搜索引擎通过这两个文件来抓取网站页面。</p>\n<blockquote>\n<ul>\n<li>sitemap.xml 用来提交给 Google</li>\n<li>baidusitemap.xml 用来提交给百度</li>\n</ul>\n</blockquote>\n<h3 id=\"百度站长平台\"><a href=\"#百度站长平台\" class=\"headerlink\" title=\"百度站长平台\"></a>百度站长平台</h3><p>通过百度站长平台进行链接提交，增加网站的索引量。我的这篇文章：<a href=\"https://link.jianshu.com/?t=http://fengdi.org/2017/08/07/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96.html\" target=\"_blank\" rel=\"noopener\">Hexo 博客之速度优化</a> 已经提到过 Github 对百度爬虫进行了屏蔽，因此百度爬取不到 Github 上的页面，如果你按照这篇文章同时部署到 Coding 上，那百度就可以抓取到，因为此时百度抓取的是位于 Coding 上的博客网页。</p>\n<p>注册并登录百度站长平台：<a href=\"https://link.jianshu.com/?t=http://zhanzhang.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度站长平台</a></p>\n<h4 id=\"添加站点\"><a href=\"#添加站点\" class=\"headerlink\" title=\"添加站点\"></a>添加站点</h4><p>选择添加站点：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-9bca3b38a6c1685d.png#alt=\" alt=\"\"></p>\n<h4 id=\"验证站点\"><a href=\"#验证站点\" class=\"headerlink\" title=\"验证站点\"></a>验证站点</h4><p>进行站点验证：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-51233e024040d8d7.png#alt=\" alt=\"\"></p>\n<p>这里我们选择<code>文件验证</code>，下载验证文件到本地，放置在<code>themes/next/source</code>目录下。执行生成和部署命令：</p>\n<p>点击完成验证即可。</p>\n<h4 id=\"链接提交\"><a href=\"#链接提交\" class=\"headerlink\" title=\"链接提交\"></a>链接提交</h4><p>百度站长平台的链接提交方式分为自动提交和手动提交两种，此处只讲自动提交，手动提交按照要求操作即可。</p>\n<h5 id=\"主动推送\"><a href=\"#主动推送\" class=\"headerlink\" title=\"主动推送\"></a>主动推送</h5><p>主动推送最为快速的提交方式，是被百度收录最快的推送方式。主动推送可以通过安装插件实现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>\n\n<p>修改站点配置文件<code>_config.yml</code>，添加以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">baidu_url_submit:</span><br><span class=\"line\">  count: 5 ## 提交最新的五个链接</span><br><span class=\"line\">  host: www.hui-wang.info ## 百度站长平台中注册的域名</span><br><span class=\"line\">  token: your_token ## 准入秘钥</span><br><span class=\"line\">  path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里</span><br></pre></td></tr></table></figure>\n\n<p>其次，记得查看<code>_config.yml</code>文件中 url 的值， 必须包含是百度站长平台注册的域名， 比如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># URL</span><br><span class=\"line\">url: http:&#x2F;&#x2F;fengdi.org</span><br><span class=\"line\">root: &#x2F;</span><br><span class=\"line\">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title.xml</span><br></pre></td></tr></table></figure>\n\n<p>最后，加入新的 deployer:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">- type: git ## 这是我原来的deployer</span><br><span class=\"line\">  repo:</span><br><span class=\"line\">  branch:</span><br><span class=\"line\">- type: baidu_url_submitter ## 添加这里内容即可</span><br></pre></td></tr></table></figure>\n\n<p>其主动推送的实现原理如下：</p>\n<ul>\n<li>新链接的产生， <code>hexo generate</code> 会产生一个文本文件，里面包含最新的链接</li>\n<li>新链接的提交， <code>hexo deploy</code> 会从上述文件中读取链接，提交至百度搜索引擎</li>\n</ul>\n<h5 id=\"自动推送\"><a href=\"#自动推送\" class=\"headerlink\" title=\"自动推送\"></a>自动推送</h5><p>安装自动推送 JS 代码的网页，在页面被访问时，页面 URL 将立即被推送给百度。</p>\n<p>修改主题目录下的<code>layout/post.swig</code>文件，末尾添加自动推送代码，代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">(function()&#123;</span><br><span class=\"line\">    var bp &#x3D; document.createElement(&#39;script&#39;);</span><br><span class=\"line\">    var curProtocol &#x3D; window.location.protocol.split(&#39;:&#39;)[0];</span><br><span class=\"line\">    if (curProtocol &#x3D;&#x3D;&#x3D; &#39;https&#39;) &#123;</span><br><span class=\"line\">        bp.src &#x3D; &#39;https:&#x2F;&#x2F;zz.bdstatic.com&#x2F;linksubmit&#x2F;push.js&#39;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else &#123;</span><br><span class=\"line\">        bp.src &#x3D; &#39;http:&#x2F;&#x2F;push.zhanzhang.baidu.com&#x2F;push.js&#39;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    var s &#x3D; document.getElementsByTagName(&quot;script&quot;)[0];</span><br><span class=\"line\">    s.parentNode.insertBefore(bp, s);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"sitemap-提交\"><a href=\"#sitemap-提交\" class=\"headerlink\" title=\"sitemap 提交\"></a>sitemap 提交</h5><p>我们之前已经说过如何生成 sitemap 文件，这时就需要我们生成的 sitemap 文件了。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-cfb7e4bd12e2deb8.png#alt=\" alt=\"\"></p>\n<p>输入以下内容到输入框里：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;fengdi.org&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure>\n\n<p>输入验证码后，提交即可。一般情况下，百度会在一个小时内处理该文件，并提取其中的 url。</p>\n<h3 id=\"Google-网站站长\"><a href=\"#Google-网站站长\" class=\"headerlink\" title=\"Google 网站站长\"></a>Google 网站站长</h3><p>在提交 Google 之前，要解决一个大家都知道的问题，关于如何登录 Google。这里就不再说了，相信你们有办法。</p>\n<h4 id=\"添加站点-1\"><a href=\"#添加站点-1\" class=\"headerlink\" title=\"添加站点\"></a>添加站点</h4><p>登录<a href=\"https://link.jianshu.com/?t=https://www.google.com/webmasters/#?modal_active=none\" target=\"_blank\" rel=\"noopener\">Google 网站站长</a>，进入<code>Search Console</code>，点击<code>添加属性</code>进行站点添加：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-9a7ce99e3aaaf1a9.png#alt=\" alt=\"\"></p>\n<h4 id=\"验证站点-1\"><a href=\"#验证站点-1\" class=\"headerlink\" title=\"验证站点\"></a>验证站点</h4><p>同百度平台一样，下载 Google 验证文件，放到 source 下<code>themes/next/source</code>目录中：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-2a7e8f527d0b1b42.png#alt=\" alt=\"\"></p>\n<p>重新生成和部署：</p>\n<p>部署完成之后，进行验证即可。</p>\n<h4 id=\"添加站点地图\"><a href=\"#添加站点地图\" class=\"headerlink\" title=\"添加站点地图\"></a>添加站点地图</h4><p>在<code>抓取</code>里面，点击<code>站点地图</code>，进行添加：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5635196-7071aa22f10e2c28.png#alt=\" alt=\"\"></p>\n<p>好了，到这里文章就结束了。如果你之前没有把网站部署到 Coding 上，你的网站百度是爬取不到的，关于如何部署请参阅：<a href=\"https://link.jianshu.com/?t=http://fengdi.org/2017/08/07/Hexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96.html\" target=\"_blank\" rel=\"noopener\">Hexo 博客之速度优化</a></p>\n<p><a href=\"https://link.jianshu.com/?t=http://svend.cc/posts/22980/\" target=\"_blank\" rel=\"noopener\">Hexo 系列：（四）Hexo 博客提交百度和 Google 收录</a></p>\n<p>文文章转载自：<a href=\"https://www.jianshu.com/p/f8ec422ebd52\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/f8ec422ebd52</a></p>\n<p>**</p>\n<p><a href=\"https://www.jianshu.com/p/57e22584b277\" target=\"_blank\" rel=\"noopener\">\n</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}